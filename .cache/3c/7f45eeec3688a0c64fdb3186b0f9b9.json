{"id":"node_modules/@firebase/database/dist/index.cjs.js","dependencies":[{"name":"/mnt/UData/Documents/firebaseChatApp/public/package.json","includedInParent":true,"mtime":1543970847522},{"name":"/mnt/UData/Documents/firebaseChatApp/public/.babelrc","includedInParent":true,"mtime":1543970821710},{"name":"/mnt/UData/Documents/firebaseChatApp/public/node_modules/@firebase/database/package.json","includedInParent":true,"mtime":1541826340055},{"name":"@firebase/util","loc":{"line":7,"column":19},"parent":"/mnt/UData/Documents/firebaseChatApp/public/node_modules/@firebase/database/dist/index.cjs.js","resolved":"/mnt/UData/Documents/firebaseChatApp/public/node_modules/@firebase/util/dist/index.cjs.js"},{"name":"@firebase/logger","loc":{"line":8,"column":21},"parent":"/mnt/UData/Documents/firebaseChatApp/public/node_modules/@firebase/database/dist/index.cjs.js","resolved":"/mnt/UData/Documents/firebaseChatApp/public/node_modules/@firebase/logger/dist/index.esm.js"},{"name":"tslib","loc":{"line":9,"column":22},"parent":"/mnt/UData/Documents/firebaseChatApp/public/node_modules/@firebase/database/dist/index.cjs.js","resolved":"/mnt/UData/Documents/firebaseChatApp/public/node_modules/tslib/tslib.es6.js"},{"name":"@firebase/app","loc":{"line":10,"column":39},"parent":"/mnt/UData/Documents/firebaseChatApp/public/node_modules/@firebase/database/dist/index.cjs.js","resolved":"/mnt/UData/Documents/firebaseChatApp/public/node_modules/@firebase/app/dist/index.cjs.js"},{"name":"process","parent":"/mnt/UData/Documents/firebaseChatApp/public/node_modules/@firebase/database/dist/index.cjs.js","resolved":"/home/robertos/.nvm/versions/node/v10.11.0/lib/node_modules/parcel-bundler/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar util = require('@firebase/util');\nvar logger = require('@firebase/logger');\nvar tslib_1 = require('tslib');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger$1 = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger.LogLevel.VERBOSE;\r\n        logger$1 = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger$1 = logger_;\r\n    }\r\n    else {\r\n        logger$1 = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger$1 === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger$1) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger$1(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) {\r\n                // .priority is OK\r\n            }\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error$$1 = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error$$1);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                else {\r\n                    // There's nothing below us, so nothing we need to start listening on\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        else {\r\n            // No-op, this listener must've been already removed\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error$$1 = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error$$1);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error$$1) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error$$1 && error$$1.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error$$1);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger$1) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                this.log_(error$$1);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                _this.log_(error$$1);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error$$1) {\r\n                self_1.log_('Failed to get token: ' + error$$1);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error$$1);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParamaters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error$$1, result) {\r\n            var data = result;\r\n            if (error$$1 === 404) {\r\n                data = null;\r\n                error$$1 = null;\r\n            }\r\n            if (error$$1 === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error$$1) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error$$1 == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error$$1;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error$$1 = new Error(message);\r\n                    error$$1.code = code;\r\n                    callback(error$$1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error$$1, committed, snapshot) {\r\n            if (error$$1) {\r\n                deferred.reject(error$$1);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error$$1, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                // Already marked.  No action needed.\r\n            }\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n","map":{"mappings":[{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":795,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":796,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":797,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":798,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":799,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":800,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":801,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":802,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":803,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":804,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":805,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":806,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":807,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":808,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":809,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":810,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":811,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":812,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":813,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":814,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":815,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":816,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":817,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":818,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":819,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":820,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":821,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":822,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":823,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":824,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":825,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":826,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":827,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":828,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":829,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":830,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":831,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":832,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":833,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":834,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":835,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":836,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":837,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":838,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":839,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":840,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":841,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":842,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":843,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":844,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":845,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":846,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":847,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":848,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":849,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":850,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":851,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":852,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":853,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":854,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":855,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":856,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":857,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":858,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":859,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":860,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":861,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":862,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":863,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":864,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":865,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":866,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":867,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":868,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":869,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":870,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":871,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":872,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":873,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":874,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":875,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":876,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":877,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":878,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":879,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":880,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":881,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":882,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":883,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":884,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":885,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":886,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":887,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":888,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":889,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":890,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":891,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":892,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":893,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":894,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":895,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":896,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":897,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":898,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":899,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":900,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":901,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":902,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":903,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":904,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":905,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":906,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":907,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":908,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":909,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":910,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":911,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":912,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":913,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":914,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":915,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":916,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":917,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":918,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":919,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":920,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":921,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":922,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":923,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":924,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":925,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":926,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":927,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":928,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":929,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":930,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":931,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":932,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":933,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":934,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":935,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":936,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":937,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":938,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":939,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":940,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":941,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":942,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":943,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":944,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":945,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":946,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":947,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":948,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":949,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":950,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":951,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":952,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":953,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":954,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":955,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":956,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":957,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":958,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":959,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":960,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":961,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":962,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":963,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":964,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":965,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":966,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":967,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":968,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":969,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":970,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":971,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":972,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":973,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":974,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":975,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":976,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":977,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":978,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":979,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":980,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":981,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":982,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":983,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":984,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":985,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":986,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":987,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":988,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":989,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":990,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":991,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":992,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":993,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":994,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":995,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":996,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":997,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":998,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":999,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1000,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1001,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1002,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1003,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1004,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1005,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1006,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1007,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1008,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1009,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1010,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1011,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1012,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1013,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1014,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1015,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1016,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1017,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1018,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1019,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1020,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1021,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1022,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1023,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1024,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1025,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1026,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1027,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1028,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1029,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1030,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1031,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1032,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1033,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1034,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1035,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1036,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1037,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1038,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1039,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1040,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1041,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1042,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1043,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1044,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1045,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1046,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1047,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1048,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1049,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1050,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1051,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1052,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1053,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1054,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1055,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1056,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1057,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1058,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1059,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1060,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1061,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1062,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1063,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1064,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1065,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1066,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1067,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1068,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1069,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1070,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1071,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1072,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1073,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1074,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1075,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1076,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1077,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1078,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1079,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1080,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1081,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1082,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1083,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1084,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1085,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1086,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1087,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1088,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1089,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1090,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1091,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1092,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1093,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1094,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1095,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1096,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1097,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1098,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1099,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1100,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1101,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1102,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1103,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1104,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1105,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1106,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1107,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1108,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1109,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1110,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1111,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1112,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1113,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1114,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1115,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1116,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1117,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1118,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1119,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1120,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1121,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1122,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1123,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1124,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1125,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1126,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1127,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1128,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1129,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1130,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1131,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1132,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1133,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1134,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1135,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1136,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1137,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1138,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1139,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1140,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1141,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1142,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1143,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1144,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1145,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1146,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1147,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1148,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1149,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1150,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1151,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1152,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1153,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1154,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1155,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1156,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1157,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1158,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1159,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1160,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1161,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1162,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1163,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1164,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1165,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1166,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1167,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1168,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1169,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1170,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1171,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1172,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1173,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1174,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1175,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1176,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1177,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1178,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1179,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1180,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1181,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1182,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1183,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1184,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1185,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1186,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1187,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1188,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1189,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1190,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1191,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1192,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1193,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1194,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1195,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1196,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1197,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1198,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1199,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1200,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1201,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1202,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1203,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1204,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1205,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1206,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1207,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1208,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1209,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1210,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1211,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1212,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1213,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1214,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1215,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1216,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1217,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1218,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1219,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1220,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1221,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1222,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1223,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1224,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1225,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1226,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1227,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1228,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1229,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1230,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1231,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1232,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1233,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1234,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1235,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1236,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1237,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1238,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1239,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1240,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1241,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1242,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1243,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1244,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1245,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1246,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1247,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1248,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1249,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1250,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1251,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1252,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1253,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1254,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1255,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1256,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1257,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1258,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1259,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1260,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1261,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1262,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1263,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1264,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1265,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1266,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1267,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1268,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1269,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1270,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1271,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1272,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1273,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1274,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1275,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1276,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1277,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1278,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1279,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1280,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1281,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1282,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1283,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1284,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1285,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1286,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1287,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1288,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1289,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1290,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1291,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1292,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1293,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1294,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1295,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1296,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1297,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1298,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1299,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1300,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1301,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1302,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1303,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1304,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1305,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1306,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1307,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1308,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1309,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1310,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1311,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1312,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1313,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1314,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1315,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1316,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1317,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1318,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1319,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1320,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1321,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1322,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1323,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1324,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1325,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1326,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1327,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1328,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1329,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1330,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1331,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1332,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1333,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1334,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1335,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1336,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1337,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1338,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1339,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1340,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1341,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1342,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1343,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1344,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1345,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1346,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1347,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1348,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1349,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1350,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1351,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1352,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1353,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1354,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1355,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1356,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1357,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1358,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1359,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1360,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1361,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1362,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1363,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1364,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1365,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1366,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1367,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1368,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1369,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1370,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1371,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1372,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1373,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1374,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1375,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1376,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1377,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1378,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1379,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1380,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1381,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1382,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1383,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1384,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1385,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1386,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1387,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1388,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1389,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1390,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1391,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1392,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1393,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1394,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1395,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1396,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1397,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1398,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1399,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1400,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1401,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1402,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1403,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1404,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1405,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1406,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1407,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1408,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1409,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1410,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1411,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1412,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1413,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1414,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1415,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1416,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1417,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1418,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1419,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1420,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1421,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1422,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1423,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1424,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1425,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1426,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1427,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1428,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1429,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1430,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1431,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1432,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1433,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1434,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1435,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1436,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1437,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1438,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1439,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1440,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1441,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1442,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1443,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1444,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1445,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1446,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1447,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1448,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1449,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1450,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1451,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1452,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1453,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1454,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1455,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1456,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1457,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1458,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1459,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1460,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1461,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1462,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1463,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1464,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1465,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1466,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1467,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1468,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1469,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1470,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1471,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1472,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1473,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1474,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1475,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1476,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1477,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1478,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1479,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1480,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1481,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1482,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1483,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1484,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1485,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1486,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1487,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1488,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1489,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1490,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1491,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1492,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1493,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1494,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1495,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1496,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1497,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1498,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1499,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1500,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1501,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1502,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1503,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1504,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1505,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1506,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1507,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1508,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1509,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1510,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1511,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1512,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1513,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1514,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1515,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1516,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1517,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1518,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1519,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1520,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1521,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1522,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1523,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1524,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1525,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1526,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1527,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1528,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1529,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1530,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1531,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1532,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1533,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1534,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1535,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1536,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1537,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1538,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1539,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1540,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1541,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1542,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1543,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1544,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1545,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1546,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1547,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1548,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1549,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1550,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1551,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1552,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1553,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1554,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1555,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1556,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1557,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1558,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1559,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1560,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1561,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1562,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1563,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1564,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1565,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1566,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1567,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1568,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1569,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1570,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1571,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1572,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1573,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1574,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1575,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1576,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1577,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1578,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1579,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1580,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1581,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1582,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1583,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1584,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1585,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1586,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1587,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1588,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1589,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1590,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1591,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1592,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1593,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1594,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1595,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1596,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1597,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1598,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1599,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1600,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1601,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1602,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1603,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1604,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1605,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1606,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1607,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1608,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1609,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1610,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1611,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1612,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1613,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1614,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1615,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1616,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1617,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1618,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1619,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1620,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1621,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1622,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1623,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1624,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1625,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1626,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1627,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1628,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1629,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1630,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1631,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1632,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1633,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1634,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1635,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1636,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1637,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1638,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1639,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1640,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1641,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1642,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1643,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1644,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1645,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1646,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1647,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1648,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1649,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1650,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1651,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1652,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1653,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1654,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1655,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1656,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1657,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1658,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1659,"column":0},"generated":{"line":1660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1660,"column":0},"generated":{"line":1661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1661,"column":0},"generated":{"line":1662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1662,"column":0},"generated":{"line":1663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1663,"column":0},"generated":{"line":1664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1664,"column":0},"generated":{"line":1665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1665,"column":0},"generated":{"line":1666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1666,"column":0},"generated":{"line":1667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1667,"column":0},"generated":{"line":1668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1668,"column":0},"generated":{"line":1669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1669,"column":0},"generated":{"line":1670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1670,"column":0},"generated":{"line":1671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1671,"column":0},"generated":{"line":1672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1672,"column":0},"generated":{"line":1673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1673,"column":0},"generated":{"line":1674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1674,"column":0},"generated":{"line":1675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1675,"column":0},"generated":{"line":1676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1676,"column":0},"generated":{"line":1677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1677,"column":0},"generated":{"line":1678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1678,"column":0},"generated":{"line":1679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1679,"column":0},"generated":{"line":1680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1680,"column":0},"generated":{"line":1681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1681,"column":0},"generated":{"line":1682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1682,"column":0},"generated":{"line":1683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1683,"column":0},"generated":{"line":1684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1684,"column":0},"generated":{"line":1685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1685,"column":0},"generated":{"line":1686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1686,"column":0},"generated":{"line":1687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1687,"column":0},"generated":{"line":1688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1688,"column":0},"generated":{"line":1689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1689,"column":0},"generated":{"line":1690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1690,"column":0},"generated":{"line":1691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1691,"column":0},"generated":{"line":1692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1692,"column":0},"generated":{"line":1693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1693,"column":0},"generated":{"line":1694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1694,"column":0},"generated":{"line":1695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1695,"column":0},"generated":{"line":1696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1696,"column":0},"generated":{"line":1697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1697,"column":0},"generated":{"line":1698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1698,"column":0},"generated":{"line":1699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1699,"column":0},"generated":{"line":1700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1700,"column":0},"generated":{"line":1701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1701,"column":0},"generated":{"line":1702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1702,"column":0},"generated":{"line":1703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1703,"column":0},"generated":{"line":1704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1704,"column":0},"generated":{"line":1705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1705,"column":0},"generated":{"line":1706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1706,"column":0},"generated":{"line":1707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1707,"column":0},"generated":{"line":1708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1708,"column":0},"generated":{"line":1709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1709,"column":0},"generated":{"line":1710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1710,"column":0},"generated":{"line":1711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1711,"column":0},"generated":{"line":1712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1712,"column":0},"generated":{"line":1713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1713,"column":0},"generated":{"line":1714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1714,"column":0},"generated":{"line":1715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1715,"column":0},"generated":{"line":1716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1716,"column":0},"generated":{"line":1717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1717,"column":0},"generated":{"line":1718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1718,"column":0},"generated":{"line":1719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1719,"column":0},"generated":{"line":1720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1720,"column":0},"generated":{"line":1721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1721,"column":0},"generated":{"line":1722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1722,"column":0},"generated":{"line":1723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1723,"column":0},"generated":{"line":1724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1724,"column":0},"generated":{"line":1725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1725,"column":0},"generated":{"line":1726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1726,"column":0},"generated":{"line":1727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1727,"column":0},"generated":{"line":1728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1728,"column":0},"generated":{"line":1729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1729,"column":0},"generated":{"line":1730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1730,"column":0},"generated":{"line":1731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1731,"column":0},"generated":{"line":1732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1732,"column":0},"generated":{"line":1733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1733,"column":0},"generated":{"line":1734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1734,"column":0},"generated":{"line":1735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1735,"column":0},"generated":{"line":1736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1736,"column":0},"generated":{"line":1737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1737,"column":0},"generated":{"line":1738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1738,"column":0},"generated":{"line":1739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1739,"column":0},"generated":{"line":1740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1740,"column":0},"generated":{"line":1741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1741,"column":0},"generated":{"line":1742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1742,"column":0},"generated":{"line":1743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1743,"column":0},"generated":{"line":1744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1744,"column":0},"generated":{"line":1745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1745,"column":0},"generated":{"line":1746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1746,"column":0},"generated":{"line":1747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1747,"column":0},"generated":{"line":1748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1748,"column":0},"generated":{"line":1749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1749,"column":0},"generated":{"line":1750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1750,"column":0},"generated":{"line":1751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1751,"column":0},"generated":{"line":1752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1752,"column":0},"generated":{"line":1753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1753,"column":0},"generated":{"line":1754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1754,"column":0},"generated":{"line":1755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1755,"column":0},"generated":{"line":1756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1756,"column":0},"generated":{"line":1757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1757,"column":0},"generated":{"line":1758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1758,"column":0},"generated":{"line":1759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1759,"column":0},"generated":{"line":1760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1760,"column":0},"generated":{"line":1761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1761,"column":0},"generated":{"line":1762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1762,"column":0},"generated":{"line":1763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1763,"column":0},"generated":{"line":1764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1764,"column":0},"generated":{"line":1765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1765,"column":0},"generated":{"line":1766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1766,"column":0},"generated":{"line":1767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1767,"column":0},"generated":{"line":1768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1768,"column":0},"generated":{"line":1769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1769,"column":0},"generated":{"line":1770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1770,"column":0},"generated":{"line":1771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1771,"column":0},"generated":{"line":1772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1772,"column":0},"generated":{"line":1773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1773,"column":0},"generated":{"line":1774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1774,"column":0},"generated":{"line":1775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1775,"column":0},"generated":{"line":1776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1776,"column":0},"generated":{"line":1777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1777,"column":0},"generated":{"line":1778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1778,"column":0},"generated":{"line":1779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1779,"column":0},"generated":{"line":1780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1780,"column":0},"generated":{"line":1781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1781,"column":0},"generated":{"line":1782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1782,"column":0},"generated":{"line":1783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1783,"column":0},"generated":{"line":1784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1784,"column":0},"generated":{"line":1785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1785,"column":0},"generated":{"line":1786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1786,"column":0},"generated":{"line":1787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1787,"column":0},"generated":{"line":1788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1788,"column":0},"generated":{"line":1789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1789,"column":0},"generated":{"line":1790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1790,"column":0},"generated":{"line":1791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1791,"column":0},"generated":{"line":1792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1792,"column":0},"generated":{"line":1793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1793,"column":0},"generated":{"line":1794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1794,"column":0},"generated":{"line":1795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1795,"column":0},"generated":{"line":1796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1796,"column":0},"generated":{"line":1797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1797,"column":0},"generated":{"line":1798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1798,"column":0},"generated":{"line":1799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1799,"column":0},"generated":{"line":1800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1800,"column":0},"generated":{"line":1801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1801,"column":0},"generated":{"line":1802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1802,"column":0},"generated":{"line":1803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1803,"column":0},"generated":{"line":1804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1804,"column":0},"generated":{"line":1805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1805,"column":0},"generated":{"line":1806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1806,"column":0},"generated":{"line":1807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1807,"column":0},"generated":{"line":1808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1808,"column":0},"generated":{"line":1809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1809,"column":0},"generated":{"line":1810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1810,"column":0},"generated":{"line":1811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1811,"column":0},"generated":{"line":1812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1812,"column":0},"generated":{"line":1813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1813,"column":0},"generated":{"line":1814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1814,"column":0},"generated":{"line":1815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1815,"column":0},"generated":{"line":1816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1816,"column":0},"generated":{"line":1817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1817,"column":0},"generated":{"line":1818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1818,"column":0},"generated":{"line":1819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1819,"column":0},"generated":{"line":1820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1820,"column":0},"generated":{"line":1821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1821,"column":0},"generated":{"line":1822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1822,"column":0},"generated":{"line":1823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1823,"column":0},"generated":{"line":1824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1824,"column":0},"generated":{"line":1825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1825,"column":0},"generated":{"line":1826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1826,"column":0},"generated":{"line":1827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1827,"column":0},"generated":{"line":1828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1828,"column":0},"generated":{"line":1829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1829,"column":0},"generated":{"line":1830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1830,"column":0},"generated":{"line":1831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1831,"column":0},"generated":{"line":1832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1832,"column":0},"generated":{"line":1833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1833,"column":0},"generated":{"line":1834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1834,"column":0},"generated":{"line":1835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1835,"column":0},"generated":{"line":1836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1836,"column":0},"generated":{"line":1837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1837,"column":0},"generated":{"line":1838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1838,"column":0},"generated":{"line":1839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1839,"column":0},"generated":{"line":1840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1840,"column":0},"generated":{"line":1841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1841,"column":0},"generated":{"line":1842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1842,"column":0},"generated":{"line":1843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1843,"column":0},"generated":{"line":1844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1844,"column":0},"generated":{"line":1845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1845,"column":0},"generated":{"line":1846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1846,"column":0},"generated":{"line":1847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1847,"column":0},"generated":{"line":1848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1848,"column":0},"generated":{"line":1849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1849,"column":0},"generated":{"line":1850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1850,"column":0},"generated":{"line":1851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1851,"column":0},"generated":{"line":1852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1852,"column":0},"generated":{"line":1853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1853,"column":0},"generated":{"line":1854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1854,"column":0},"generated":{"line":1855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1855,"column":0},"generated":{"line":1856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1856,"column":0},"generated":{"line":1857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1857,"column":0},"generated":{"line":1858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1858,"column":0},"generated":{"line":1859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1859,"column":0},"generated":{"line":1860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1860,"column":0},"generated":{"line":1861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1861,"column":0},"generated":{"line":1862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1862,"column":0},"generated":{"line":1863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1863,"column":0},"generated":{"line":1864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1864,"column":0},"generated":{"line":1865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1865,"column":0},"generated":{"line":1866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1866,"column":0},"generated":{"line":1867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1867,"column":0},"generated":{"line":1868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1868,"column":0},"generated":{"line":1869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1869,"column":0},"generated":{"line":1870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1870,"column":0},"generated":{"line":1871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1871,"column":0},"generated":{"line":1872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1872,"column":0},"generated":{"line":1873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1873,"column":0},"generated":{"line":1874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1874,"column":0},"generated":{"line":1875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1875,"column":0},"generated":{"line":1876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1876,"column":0},"generated":{"line":1877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1877,"column":0},"generated":{"line":1878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1878,"column":0},"generated":{"line":1879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1879,"column":0},"generated":{"line":1880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1880,"column":0},"generated":{"line":1881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1881,"column":0},"generated":{"line":1882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1882,"column":0},"generated":{"line":1883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1883,"column":0},"generated":{"line":1884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1884,"column":0},"generated":{"line":1885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1885,"column":0},"generated":{"line":1886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1886,"column":0},"generated":{"line":1887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1887,"column":0},"generated":{"line":1888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1888,"column":0},"generated":{"line":1889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1889,"column":0},"generated":{"line":1890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1890,"column":0},"generated":{"line":1891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1891,"column":0},"generated":{"line":1892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1892,"column":0},"generated":{"line":1893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1893,"column":0},"generated":{"line":1894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1894,"column":0},"generated":{"line":1895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1895,"column":0},"generated":{"line":1896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1896,"column":0},"generated":{"line":1897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1897,"column":0},"generated":{"line":1898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1898,"column":0},"generated":{"line":1899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1899,"column":0},"generated":{"line":1900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1900,"column":0},"generated":{"line":1901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1901,"column":0},"generated":{"line":1902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1902,"column":0},"generated":{"line":1903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1903,"column":0},"generated":{"line":1904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1904,"column":0},"generated":{"line":1905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1905,"column":0},"generated":{"line":1906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1906,"column":0},"generated":{"line":1907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1907,"column":0},"generated":{"line":1908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1908,"column":0},"generated":{"line":1909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1909,"column":0},"generated":{"line":1910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1910,"column":0},"generated":{"line":1911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1911,"column":0},"generated":{"line":1912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1912,"column":0},"generated":{"line":1913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1913,"column":0},"generated":{"line":1914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1914,"column":0},"generated":{"line":1915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1915,"column":0},"generated":{"line":1916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1916,"column":0},"generated":{"line":1917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1917,"column":0},"generated":{"line":1918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1918,"column":0},"generated":{"line":1919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1919,"column":0},"generated":{"line":1920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1920,"column":0},"generated":{"line":1921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1921,"column":0},"generated":{"line":1922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1922,"column":0},"generated":{"line":1923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1923,"column":0},"generated":{"line":1924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1924,"column":0},"generated":{"line":1925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1925,"column":0},"generated":{"line":1926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1926,"column":0},"generated":{"line":1927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1927,"column":0},"generated":{"line":1928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1928,"column":0},"generated":{"line":1929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1929,"column":0},"generated":{"line":1930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1930,"column":0},"generated":{"line":1931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1931,"column":0},"generated":{"line":1932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1932,"column":0},"generated":{"line":1933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1933,"column":0},"generated":{"line":1934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1934,"column":0},"generated":{"line":1935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1935,"column":0},"generated":{"line":1936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1936,"column":0},"generated":{"line":1937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1937,"column":0},"generated":{"line":1938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1938,"column":0},"generated":{"line":1939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1939,"column":0},"generated":{"line":1940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1940,"column":0},"generated":{"line":1941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1941,"column":0},"generated":{"line":1942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1942,"column":0},"generated":{"line":1943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1943,"column":0},"generated":{"line":1944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1944,"column":0},"generated":{"line":1945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1945,"column":0},"generated":{"line":1946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1946,"column":0},"generated":{"line":1947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1947,"column":0},"generated":{"line":1948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1948,"column":0},"generated":{"line":1949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1949,"column":0},"generated":{"line":1950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1950,"column":0},"generated":{"line":1951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1951,"column":0},"generated":{"line":1952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1952,"column":0},"generated":{"line":1953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1953,"column":0},"generated":{"line":1954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1954,"column":0},"generated":{"line":1955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1955,"column":0},"generated":{"line":1956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1956,"column":0},"generated":{"line":1957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1957,"column":0},"generated":{"line":1958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1958,"column":0},"generated":{"line":1959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1959,"column":0},"generated":{"line":1960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1960,"column":0},"generated":{"line":1961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1961,"column":0},"generated":{"line":1962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1962,"column":0},"generated":{"line":1963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1963,"column":0},"generated":{"line":1964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1964,"column":0},"generated":{"line":1965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1965,"column":0},"generated":{"line":1966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1966,"column":0},"generated":{"line":1967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1967,"column":0},"generated":{"line":1968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1968,"column":0},"generated":{"line":1969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1969,"column":0},"generated":{"line":1970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1970,"column":0},"generated":{"line":1971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1971,"column":0},"generated":{"line":1972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1972,"column":0},"generated":{"line":1973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1973,"column":0},"generated":{"line":1974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1974,"column":0},"generated":{"line":1975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1975,"column":0},"generated":{"line":1976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1976,"column":0},"generated":{"line":1977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1977,"column":0},"generated":{"line":1978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1978,"column":0},"generated":{"line":1979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1979,"column":0},"generated":{"line":1980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1980,"column":0},"generated":{"line":1981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1981,"column":0},"generated":{"line":1982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1982,"column":0},"generated":{"line":1983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1983,"column":0},"generated":{"line":1984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1984,"column":0},"generated":{"line":1985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1985,"column":0},"generated":{"line":1986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1986,"column":0},"generated":{"line":1987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1987,"column":0},"generated":{"line":1988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1988,"column":0},"generated":{"line":1989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1989,"column":0},"generated":{"line":1990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1990,"column":0},"generated":{"line":1991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1991,"column":0},"generated":{"line":1992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1992,"column":0},"generated":{"line":1993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1993,"column":0},"generated":{"line":1994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1994,"column":0},"generated":{"line":1995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1995,"column":0},"generated":{"line":1996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1996,"column":0},"generated":{"line":1997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1997,"column":0},"generated":{"line":1998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1998,"column":0},"generated":{"line":1999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":1999,"column":0},"generated":{"line":2000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2000,"column":0},"generated":{"line":2001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2001,"column":0},"generated":{"line":2002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2002,"column":0},"generated":{"line":2003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2003,"column":0},"generated":{"line":2004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2004,"column":0},"generated":{"line":2005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2005,"column":0},"generated":{"line":2006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2006,"column":0},"generated":{"line":2007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2007,"column":0},"generated":{"line":2008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2008,"column":0},"generated":{"line":2009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2009,"column":0},"generated":{"line":2010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2010,"column":0},"generated":{"line":2011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2011,"column":0},"generated":{"line":2012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2012,"column":0},"generated":{"line":2013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2013,"column":0},"generated":{"line":2014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2014,"column":0},"generated":{"line":2015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2015,"column":0},"generated":{"line":2016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2016,"column":0},"generated":{"line":2017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2017,"column":0},"generated":{"line":2018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2018,"column":0},"generated":{"line":2019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2019,"column":0},"generated":{"line":2020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2020,"column":0},"generated":{"line":2021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2021,"column":0},"generated":{"line":2022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2022,"column":0},"generated":{"line":2023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2023,"column":0},"generated":{"line":2024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2024,"column":0},"generated":{"line":2025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2025,"column":0},"generated":{"line":2026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2026,"column":0},"generated":{"line":2027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2027,"column":0},"generated":{"line":2028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2028,"column":0},"generated":{"line":2029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2029,"column":0},"generated":{"line":2030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2030,"column":0},"generated":{"line":2031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2031,"column":0},"generated":{"line":2032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2032,"column":0},"generated":{"line":2033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2033,"column":0},"generated":{"line":2034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2034,"column":0},"generated":{"line":2035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2035,"column":0},"generated":{"line":2036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2036,"column":0},"generated":{"line":2037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2037,"column":0},"generated":{"line":2038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2038,"column":0},"generated":{"line":2039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2039,"column":0},"generated":{"line":2040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2040,"column":0},"generated":{"line":2041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2041,"column":0},"generated":{"line":2042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2042,"column":0},"generated":{"line":2043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2043,"column":0},"generated":{"line":2044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2044,"column":0},"generated":{"line":2045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2045,"column":0},"generated":{"line":2046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2046,"column":0},"generated":{"line":2047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2047,"column":0},"generated":{"line":2048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2048,"column":0},"generated":{"line":2049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2049,"column":0},"generated":{"line":2050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2050,"column":0},"generated":{"line":2051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2051,"column":0},"generated":{"line":2052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2052,"column":0},"generated":{"line":2053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2053,"column":0},"generated":{"line":2054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2054,"column":0},"generated":{"line":2055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2055,"column":0},"generated":{"line":2056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2056,"column":0},"generated":{"line":2057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2057,"column":0},"generated":{"line":2058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2058,"column":0},"generated":{"line":2059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2059,"column":0},"generated":{"line":2060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2060,"column":0},"generated":{"line":2061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2061,"column":0},"generated":{"line":2062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2062,"column":0},"generated":{"line":2063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2063,"column":0},"generated":{"line":2064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2064,"column":0},"generated":{"line":2065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2065,"column":0},"generated":{"line":2066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2066,"column":0},"generated":{"line":2067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2067,"column":0},"generated":{"line":2068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2068,"column":0},"generated":{"line":2069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2069,"column":0},"generated":{"line":2070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2070,"column":0},"generated":{"line":2071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2071,"column":0},"generated":{"line":2072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2072,"column":0},"generated":{"line":2073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2073,"column":0},"generated":{"line":2074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2074,"column":0},"generated":{"line":2075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2075,"column":0},"generated":{"line":2076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2076,"column":0},"generated":{"line":2077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2077,"column":0},"generated":{"line":2078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2078,"column":0},"generated":{"line":2079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2079,"column":0},"generated":{"line":2080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2080,"column":0},"generated":{"line":2081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2081,"column":0},"generated":{"line":2082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2082,"column":0},"generated":{"line":2083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2083,"column":0},"generated":{"line":2084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2084,"column":0},"generated":{"line":2085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2085,"column":0},"generated":{"line":2086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2086,"column":0},"generated":{"line":2087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2087,"column":0},"generated":{"line":2088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2088,"column":0},"generated":{"line":2089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2089,"column":0},"generated":{"line":2090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2090,"column":0},"generated":{"line":2091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2091,"column":0},"generated":{"line":2092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2092,"column":0},"generated":{"line":2093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2093,"column":0},"generated":{"line":2094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2094,"column":0},"generated":{"line":2095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2095,"column":0},"generated":{"line":2096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2096,"column":0},"generated":{"line":2097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2097,"column":0},"generated":{"line":2098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2098,"column":0},"generated":{"line":2099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2099,"column":0},"generated":{"line":2100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2100,"column":0},"generated":{"line":2101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2101,"column":0},"generated":{"line":2102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2102,"column":0},"generated":{"line":2103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2103,"column":0},"generated":{"line":2104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2104,"column":0},"generated":{"line":2105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2105,"column":0},"generated":{"line":2106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2106,"column":0},"generated":{"line":2107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2107,"column":0},"generated":{"line":2108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2108,"column":0},"generated":{"line":2109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2109,"column":0},"generated":{"line":2110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2110,"column":0},"generated":{"line":2111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2111,"column":0},"generated":{"line":2112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2112,"column":0},"generated":{"line":2113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2113,"column":0},"generated":{"line":2114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2114,"column":0},"generated":{"line":2115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2115,"column":0},"generated":{"line":2116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2116,"column":0},"generated":{"line":2117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2117,"column":0},"generated":{"line":2118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2118,"column":0},"generated":{"line":2119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2119,"column":0},"generated":{"line":2120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2120,"column":0},"generated":{"line":2121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2121,"column":0},"generated":{"line":2122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2122,"column":0},"generated":{"line":2123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2123,"column":0},"generated":{"line":2124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2124,"column":0},"generated":{"line":2125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2125,"column":0},"generated":{"line":2126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2126,"column":0},"generated":{"line":2127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2127,"column":0},"generated":{"line":2128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2128,"column":0},"generated":{"line":2129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2129,"column":0},"generated":{"line":2130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2130,"column":0},"generated":{"line":2131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2131,"column":0},"generated":{"line":2132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2132,"column":0},"generated":{"line":2133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2133,"column":0},"generated":{"line":2134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2134,"column":0},"generated":{"line":2135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2135,"column":0},"generated":{"line":2136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2136,"column":0},"generated":{"line":2137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2137,"column":0},"generated":{"line":2138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2138,"column":0},"generated":{"line":2139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2139,"column":0},"generated":{"line":2140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2140,"column":0},"generated":{"line":2141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2141,"column":0},"generated":{"line":2142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2142,"column":0},"generated":{"line":2143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2143,"column":0},"generated":{"line":2144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2144,"column":0},"generated":{"line":2145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2145,"column":0},"generated":{"line":2146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2146,"column":0},"generated":{"line":2147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2147,"column":0},"generated":{"line":2148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2148,"column":0},"generated":{"line":2149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2149,"column":0},"generated":{"line":2150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2150,"column":0},"generated":{"line":2151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2151,"column":0},"generated":{"line":2152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2152,"column":0},"generated":{"line":2153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2153,"column":0},"generated":{"line":2154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2154,"column":0},"generated":{"line":2155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2155,"column":0},"generated":{"line":2156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2156,"column":0},"generated":{"line":2157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2157,"column":0},"generated":{"line":2158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2158,"column":0},"generated":{"line":2159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2159,"column":0},"generated":{"line":2160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2160,"column":0},"generated":{"line":2161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2161,"column":0},"generated":{"line":2162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2162,"column":0},"generated":{"line":2163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2163,"column":0},"generated":{"line":2164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2164,"column":0},"generated":{"line":2165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2165,"column":0},"generated":{"line":2166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2166,"column":0},"generated":{"line":2167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2167,"column":0},"generated":{"line":2168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2168,"column":0},"generated":{"line":2169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2169,"column":0},"generated":{"line":2170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2170,"column":0},"generated":{"line":2171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2171,"column":0},"generated":{"line":2172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2172,"column":0},"generated":{"line":2173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2173,"column":0},"generated":{"line":2174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2174,"column":0},"generated":{"line":2175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2175,"column":0},"generated":{"line":2176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2176,"column":0},"generated":{"line":2177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2177,"column":0},"generated":{"line":2178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2178,"column":0},"generated":{"line":2179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2179,"column":0},"generated":{"line":2180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2180,"column":0},"generated":{"line":2181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2181,"column":0},"generated":{"line":2182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2182,"column":0},"generated":{"line":2183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2183,"column":0},"generated":{"line":2184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2184,"column":0},"generated":{"line":2185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2185,"column":0},"generated":{"line":2186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2186,"column":0},"generated":{"line":2187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2187,"column":0},"generated":{"line":2188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2188,"column":0},"generated":{"line":2189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2189,"column":0},"generated":{"line":2190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2190,"column":0},"generated":{"line":2191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2191,"column":0},"generated":{"line":2192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2192,"column":0},"generated":{"line":2193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2193,"column":0},"generated":{"line":2194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2194,"column":0},"generated":{"line":2195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2195,"column":0},"generated":{"line":2196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2196,"column":0},"generated":{"line":2197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2197,"column":0},"generated":{"line":2198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2198,"column":0},"generated":{"line":2199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2199,"column":0},"generated":{"line":2200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2200,"column":0},"generated":{"line":2201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2201,"column":0},"generated":{"line":2202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2202,"column":0},"generated":{"line":2203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2203,"column":0},"generated":{"line":2204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2204,"column":0},"generated":{"line":2205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2205,"column":0},"generated":{"line":2206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2206,"column":0},"generated":{"line":2207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2207,"column":0},"generated":{"line":2208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2208,"column":0},"generated":{"line":2209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2209,"column":0},"generated":{"line":2210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2210,"column":0},"generated":{"line":2211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2211,"column":0},"generated":{"line":2212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2212,"column":0},"generated":{"line":2213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2213,"column":0},"generated":{"line":2214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2214,"column":0},"generated":{"line":2215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2215,"column":0},"generated":{"line":2216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2216,"column":0},"generated":{"line":2217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2217,"column":0},"generated":{"line":2218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2218,"column":0},"generated":{"line":2219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2219,"column":0},"generated":{"line":2220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2220,"column":0},"generated":{"line":2221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2221,"column":0},"generated":{"line":2222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2222,"column":0},"generated":{"line":2223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2223,"column":0},"generated":{"line":2224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2224,"column":0},"generated":{"line":2225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2225,"column":0},"generated":{"line":2226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2226,"column":0},"generated":{"line":2227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2227,"column":0},"generated":{"line":2228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2228,"column":0},"generated":{"line":2229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2229,"column":0},"generated":{"line":2230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2230,"column":0},"generated":{"line":2231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2231,"column":0},"generated":{"line":2232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2232,"column":0},"generated":{"line":2233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2233,"column":0},"generated":{"line":2234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2234,"column":0},"generated":{"line":2235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2235,"column":0},"generated":{"line":2236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2236,"column":0},"generated":{"line":2237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2237,"column":0},"generated":{"line":2238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2238,"column":0},"generated":{"line":2239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2239,"column":0},"generated":{"line":2240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2240,"column":0},"generated":{"line":2241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2241,"column":0},"generated":{"line":2242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2242,"column":0},"generated":{"line":2243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2243,"column":0},"generated":{"line":2244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2244,"column":0},"generated":{"line":2245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2245,"column":0},"generated":{"line":2246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2246,"column":0},"generated":{"line":2247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2247,"column":0},"generated":{"line":2248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2248,"column":0},"generated":{"line":2249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2249,"column":0},"generated":{"line":2250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2250,"column":0},"generated":{"line":2251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2251,"column":0},"generated":{"line":2252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2252,"column":0},"generated":{"line":2253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2253,"column":0},"generated":{"line":2254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2254,"column":0},"generated":{"line":2255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2255,"column":0},"generated":{"line":2256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2256,"column":0},"generated":{"line":2257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2257,"column":0},"generated":{"line":2258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2258,"column":0},"generated":{"line":2259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2259,"column":0},"generated":{"line":2260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2260,"column":0},"generated":{"line":2261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2261,"column":0},"generated":{"line":2262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2262,"column":0},"generated":{"line":2263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2263,"column":0},"generated":{"line":2264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2264,"column":0},"generated":{"line":2265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2265,"column":0},"generated":{"line":2266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2266,"column":0},"generated":{"line":2267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2267,"column":0},"generated":{"line":2268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2268,"column":0},"generated":{"line":2269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2269,"column":0},"generated":{"line":2270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2270,"column":0},"generated":{"line":2271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2271,"column":0},"generated":{"line":2272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2272,"column":0},"generated":{"line":2273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2273,"column":0},"generated":{"line":2274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2274,"column":0},"generated":{"line":2275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2275,"column":0},"generated":{"line":2276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2276,"column":0},"generated":{"line":2277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2277,"column":0},"generated":{"line":2278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2278,"column":0},"generated":{"line":2279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2279,"column":0},"generated":{"line":2280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2280,"column":0},"generated":{"line":2281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2281,"column":0},"generated":{"line":2282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2282,"column":0},"generated":{"line":2283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2283,"column":0},"generated":{"line":2284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2284,"column":0},"generated":{"line":2285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2285,"column":0},"generated":{"line":2286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2286,"column":0},"generated":{"line":2287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2287,"column":0},"generated":{"line":2288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2288,"column":0},"generated":{"line":2289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2289,"column":0},"generated":{"line":2290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2290,"column":0},"generated":{"line":2291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2291,"column":0},"generated":{"line":2292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2292,"column":0},"generated":{"line":2293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2293,"column":0},"generated":{"line":2294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2294,"column":0},"generated":{"line":2295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2295,"column":0},"generated":{"line":2296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2296,"column":0},"generated":{"line":2297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2297,"column":0},"generated":{"line":2298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2298,"column":0},"generated":{"line":2299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2299,"column":0},"generated":{"line":2300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2300,"column":0},"generated":{"line":2301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2301,"column":0},"generated":{"line":2302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2302,"column":0},"generated":{"line":2303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2303,"column":0},"generated":{"line":2304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2304,"column":0},"generated":{"line":2305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2305,"column":0},"generated":{"line":2306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2306,"column":0},"generated":{"line":2307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2307,"column":0},"generated":{"line":2308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2308,"column":0},"generated":{"line":2309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2309,"column":0},"generated":{"line":2310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2310,"column":0},"generated":{"line":2311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2311,"column":0},"generated":{"line":2312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2312,"column":0},"generated":{"line":2313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2313,"column":0},"generated":{"line":2314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2314,"column":0},"generated":{"line":2315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2315,"column":0},"generated":{"line":2316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2316,"column":0},"generated":{"line":2317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2317,"column":0},"generated":{"line":2318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2318,"column":0},"generated":{"line":2319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2319,"column":0},"generated":{"line":2320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2320,"column":0},"generated":{"line":2321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2321,"column":0},"generated":{"line":2322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2322,"column":0},"generated":{"line":2323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2323,"column":0},"generated":{"line":2324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2324,"column":0},"generated":{"line":2325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2325,"column":0},"generated":{"line":2326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2326,"column":0},"generated":{"line":2327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2327,"column":0},"generated":{"line":2328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2328,"column":0},"generated":{"line":2329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2329,"column":0},"generated":{"line":2330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2330,"column":0},"generated":{"line":2331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2331,"column":0},"generated":{"line":2332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2332,"column":0},"generated":{"line":2333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2333,"column":0},"generated":{"line":2334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2334,"column":0},"generated":{"line":2335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2335,"column":0},"generated":{"line":2336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2336,"column":0},"generated":{"line":2337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2337,"column":0},"generated":{"line":2338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2338,"column":0},"generated":{"line":2339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2339,"column":0},"generated":{"line":2340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2340,"column":0},"generated":{"line":2341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2341,"column":0},"generated":{"line":2342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2342,"column":0},"generated":{"line":2343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2343,"column":0},"generated":{"line":2344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2344,"column":0},"generated":{"line":2345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2345,"column":0},"generated":{"line":2346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2346,"column":0},"generated":{"line":2347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2347,"column":0},"generated":{"line":2348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2348,"column":0},"generated":{"line":2349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2349,"column":0},"generated":{"line":2350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2350,"column":0},"generated":{"line":2351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2351,"column":0},"generated":{"line":2352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2352,"column":0},"generated":{"line":2353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2353,"column":0},"generated":{"line":2354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2354,"column":0},"generated":{"line":2355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2355,"column":0},"generated":{"line":2356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2356,"column":0},"generated":{"line":2357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2357,"column":0},"generated":{"line":2358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2358,"column":0},"generated":{"line":2359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2359,"column":0},"generated":{"line":2360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2360,"column":0},"generated":{"line":2361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2361,"column":0},"generated":{"line":2362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2362,"column":0},"generated":{"line":2363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2363,"column":0},"generated":{"line":2364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2364,"column":0},"generated":{"line":2365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2365,"column":0},"generated":{"line":2366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2366,"column":0},"generated":{"line":2367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2367,"column":0},"generated":{"line":2368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2368,"column":0},"generated":{"line":2369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2369,"column":0},"generated":{"line":2370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2370,"column":0},"generated":{"line":2371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2371,"column":0},"generated":{"line":2372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2372,"column":0},"generated":{"line":2373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2373,"column":0},"generated":{"line":2374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2374,"column":0},"generated":{"line":2375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2375,"column":0},"generated":{"line":2376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2376,"column":0},"generated":{"line":2377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2377,"column":0},"generated":{"line":2378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2378,"column":0},"generated":{"line":2379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2379,"column":0},"generated":{"line":2380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2380,"column":0},"generated":{"line":2381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2381,"column":0},"generated":{"line":2382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2382,"column":0},"generated":{"line":2383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2383,"column":0},"generated":{"line":2384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2384,"column":0},"generated":{"line":2385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2385,"column":0},"generated":{"line":2386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2386,"column":0},"generated":{"line":2387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2387,"column":0},"generated":{"line":2388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2388,"column":0},"generated":{"line":2389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2389,"column":0},"generated":{"line":2390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2390,"column":0},"generated":{"line":2391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2391,"column":0},"generated":{"line":2392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2392,"column":0},"generated":{"line":2393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2393,"column":0},"generated":{"line":2394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2394,"column":0},"generated":{"line":2395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2395,"column":0},"generated":{"line":2396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2396,"column":0},"generated":{"line":2397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2397,"column":0},"generated":{"line":2398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2398,"column":0},"generated":{"line":2399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2399,"column":0},"generated":{"line":2400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2400,"column":0},"generated":{"line":2401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2401,"column":0},"generated":{"line":2402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2402,"column":0},"generated":{"line":2403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2403,"column":0},"generated":{"line":2404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2404,"column":0},"generated":{"line":2405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2405,"column":0},"generated":{"line":2406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2406,"column":0},"generated":{"line":2407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2407,"column":0},"generated":{"line":2408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2408,"column":0},"generated":{"line":2409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2409,"column":0},"generated":{"line":2410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2410,"column":0},"generated":{"line":2411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2411,"column":0},"generated":{"line":2412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2412,"column":0},"generated":{"line":2413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2413,"column":0},"generated":{"line":2414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2414,"column":0},"generated":{"line":2415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2415,"column":0},"generated":{"line":2416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2416,"column":0},"generated":{"line":2417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2417,"column":0},"generated":{"line":2418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2418,"column":0},"generated":{"line":2419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2419,"column":0},"generated":{"line":2420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2420,"column":0},"generated":{"line":2421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2421,"column":0},"generated":{"line":2422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2422,"column":0},"generated":{"line":2423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2423,"column":0},"generated":{"line":2424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2424,"column":0},"generated":{"line":2425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2425,"column":0},"generated":{"line":2426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2426,"column":0},"generated":{"line":2427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2427,"column":0},"generated":{"line":2428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2428,"column":0},"generated":{"line":2429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2429,"column":0},"generated":{"line":2430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2430,"column":0},"generated":{"line":2431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2431,"column":0},"generated":{"line":2432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2432,"column":0},"generated":{"line":2433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2433,"column":0},"generated":{"line":2434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2434,"column":0},"generated":{"line":2435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2435,"column":0},"generated":{"line":2436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2436,"column":0},"generated":{"line":2437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2437,"column":0},"generated":{"line":2438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2438,"column":0},"generated":{"line":2439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2439,"column":0},"generated":{"line":2440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2440,"column":0},"generated":{"line":2441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2441,"column":0},"generated":{"line":2442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2442,"column":0},"generated":{"line":2443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2443,"column":0},"generated":{"line":2444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2444,"column":0},"generated":{"line":2445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2445,"column":0},"generated":{"line":2446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2446,"column":0},"generated":{"line":2447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2447,"column":0},"generated":{"line":2448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2448,"column":0},"generated":{"line":2449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2449,"column":0},"generated":{"line":2450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2450,"column":0},"generated":{"line":2451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2451,"column":0},"generated":{"line":2452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2452,"column":0},"generated":{"line":2453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2453,"column":0},"generated":{"line":2454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2454,"column":0},"generated":{"line":2455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2455,"column":0},"generated":{"line":2456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2456,"column":0},"generated":{"line":2457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2457,"column":0},"generated":{"line":2458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2458,"column":0},"generated":{"line":2459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2459,"column":0},"generated":{"line":2460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2460,"column":0},"generated":{"line":2461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2461,"column":0},"generated":{"line":2462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2462,"column":0},"generated":{"line":2463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2463,"column":0},"generated":{"line":2464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2464,"column":0},"generated":{"line":2465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2465,"column":0},"generated":{"line":2466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2466,"column":0},"generated":{"line":2467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2467,"column":0},"generated":{"line":2468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2468,"column":0},"generated":{"line":2469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2469,"column":0},"generated":{"line":2470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2470,"column":0},"generated":{"line":2471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2471,"column":0},"generated":{"line":2472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2472,"column":0},"generated":{"line":2473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2473,"column":0},"generated":{"line":2474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2474,"column":0},"generated":{"line":2475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2475,"column":0},"generated":{"line":2476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2476,"column":0},"generated":{"line":2477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2477,"column":0},"generated":{"line":2478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2478,"column":0},"generated":{"line":2479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2479,"column":0},"generated":{"line":2480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2480,"column":0},"generated":{"line":2481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2481,"column":0},"generated":{"line":2482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2482,"column":0},"generated":{"line":2483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2483,"column":0},"generated":{"line":2484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2484,"column":0},"generated":{"line":2485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2485,"column":0},"generated":{"line":2486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2486,"column":0},"generated":{"line":2487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2487,"column":0},"generated":{"line":2488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2488,"column":0},"generated":{"line":2489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2489,"column":0},"generated":{"line":2490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2490,"column":0},"generated":{"line":2491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2491,"column":0},"generated":{"line":2492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2492,"column":0},"generated":{"line":2493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2493,"column":0},"generated":{"line":2494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2494,"column":0},"generated":{"line":2495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2495,"column":0},"generated":{"line":2496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2496,"column":0},"generated":{"line":2497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2497,"column":0},"generated":{"line":2498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2498,"column":0},"generated":{"line":2499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2499,"column":0},"generated":{"line":2500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2500,"column":0},"generated":{"line":2501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2501,"column":0},"generated":{"line":2502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2502,"column":0},"generated":{"line":2503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2503,"column":0},"generated":{"line":2504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2504,"column":0},"generated":{"line":2505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2505,"column":0},"generated":{"line":2506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2506,"column":0},"generated":{"line":2507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2507,"column":0},"generated":{"line":2508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2508,"column":0},"generated":{"line":2509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2509,"column":0},"generated":{"line":2510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2510,"column":0},"generated":{"line":2511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2511,"column":0},"generated":{"line":2512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2512,"column":0},"generated":{"line":2513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2513,"column":0},"generated":{"line":2514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2514,"column":0},"generated":{"line":2515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2515,"column":0},"generated":{"line":2516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2516,"column":0},"generated":{"line":2517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2517,"column":0},"generated":{"line":2518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2518,"column":0},"generated":{"line":2519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2519,"column":0},"generated":{"line":2520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2520,"column":0},"generated":{"line":2521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2521,"column":0},"generated":{"line":2522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2522,"column":0},"generated":{"line":2523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2523,"column":0},"generated":{"line":2524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2524,"column":0},"generated":{"line":2525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2525,"column":0},"generated":{"line":2526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2526,"column":0},"generated":{"line":2527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2527,"column":0},"generated":{"line":2528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2528,"column":0},"generated":{"line":2529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2529,"column":0},"generated":{"line":2530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2530,"column":0},"generated":{"line":2531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2531,"column":0},"generated":{"line":2532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2532,"column":0},"generated":{"line":2533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2533,"column":0},"generated":{"line":2534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2534,"column":0},"generated":{"line":2535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2535,"column":0},"generated":{"line":2536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2536,"column":0},"generated":{"line":2537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2537,"column":0},"generated":{"line":2538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2538,"column":0},"generated":{"line":2539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2539,"column":0},"generated":{"line":2540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2540,"column":0},"generated":{"line":2541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2541,"column":0},"generated":{"line":2542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2542,"column":0},"generated":{"line":2543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2543,"column":0},"generated":{"line":2544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2544,"column":0},"generated":{"line":2545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2545,"column":0},"generated":{"line":2546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2546,"column":0},"generated":{"line":2547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2547,"column":0},"generated":{"line":2548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2548,"column":0},"generated":{"line":2549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2549,"column":0},"generated":{"line":2550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2550,"column":0},"generated":{"line":2551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2551,"column":0},"generated":{"line":2552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2552,"column":0},"generated":{"line":2553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2553,"column":0},"generated":{"line":2554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2554,"column":0},"generated":{"line":2555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2555,"column":0},"generated":{"line":2556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2556,"column":0},"generated":{"line":2557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2557,"column":0},"generated":{"line":2558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2558,"column":0},"generated":{"line":2559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2559,"column":0},"generated":{"line":2560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2560,"column":0},"generated":{"line":2561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2561,"column":0},"generated":{"line":2562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2562,"column":0},"generated":{"line":2563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2563,"column":0},"generated":{"line":2564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2564,"column":0},"generated":{"line":2565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2565,"column":0},"generated":{"line":2566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2566,"column":0},"generated":{"line":2567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2567,"column":0},"generated":{"line":2568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2568,"column":0},"generated":{"line":2569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2569,"column":0},"generated":{"line":2570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2570,"column":0},"generated":{"line":2571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2571,"column":0},"generated":{"line":2572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2572,"column":0},"generated":{"line":2573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2573,"column":0},"generated":{"line":2574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2574,"column":0},"generated":{"line":2575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2575,"column":0},"generated":{"line":2576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2576,"column":0},"generated":{"line":2577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2577,"column":0},"generated":{"line":2578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2578,"column":0},"generated":{"line":2579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2579,"column":0},"generated":{"line":2580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2580,"column":0},"generated":{"line":2581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2581,"column":0},"generated":{"line":2582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2582,"column":0},"generated":{"line":2583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2583,"column":0},"generated":{"line":2584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2584,"column":0},"generated":{"line":2585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2585,"column":0},"generated":{"line":2586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2586,"column":0},"generated":{"line":2587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2587,"column":0},"generated":{"line":2588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2588,"column":0},"generated":{"line":2589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2589,"column":0},"generated":{"line":2590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2590,"column":0},"generated":{"line":2591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2591,"column":0},"generated":{"line":2592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2592,"column":0},"generated":{"line":2593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2593,"column":0},"generated":{"line":2594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2594,"column":0},"generated":{"line":2595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2595,"column":0},"generated":{"line":2596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2596,"column":0},"generated":{"line":2597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2597,"column":0},"generated":{"line":2598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2598,"column":0},"generated":{"line":2599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2599,"column":0},"generated":{"line":2600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2600,"column":0},"generated":{"line":2601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2601,"column":0},"generated":{"line":2602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2602,"column":0},"generated":{"line":2603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2603,"column":0},"generated":{"line":2604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2604,"column":0},"generated":{"line":2605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2605,"column":0},"generated":{"line":2606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2606,"column":0},"generated":{"line":2607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2607,"column":0},"generated":{"line":2608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2608,"column":0},"generated":{"line":2609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2609,"column":0},"generated":{"line":2610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2610,"column":0},"generated":{"line":2611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2611,"column":0},"generated":{"line":2612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2612,"column":0},"generated":{"line":2613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2613,"column":0},"generated":{"line":2614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2614,"column":0},"generated":{"line":2615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2615,"column":0},"generated":{"line":2616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2616,"column":0},"generated":{"line":2617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2617,"column":0},"generated":{"line":2618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2618,"column":0},"generated":{"line":2619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2619,"column":0},"generated":{"line":2620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2620,"column":0},"generated":{"line":2621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2621,"column":0},"generated":{"line":2622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2622,"column":0},"generated":{"line":2623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2623,"column":0},"generated":{"line":2624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2624,"column":0},"generated":{"line":2625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2625,"column":0},"generated":{"line":2626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2626,"column":0},"generated":{"line":2627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2627,"column":0},"generated":{"line":2628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2628,"column":0},"generated":{"line":2629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2629,"column":0},"generated":{"line":2630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2630,"column":0},"generated":{"line":2631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2631,"column":0},"generated":{"line":2632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2632,"column":0},"generated":{"line":2633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2633,"column":0},"generated":{"line":2634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2634,"column":0},"generated":{"line":2635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2635,"column":0},"generated":{"line":2636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2636,"column":0},"generated":{"line":2637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2637,"column":0},"generated":{"line":2638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2638,"column":0},"generated":{"line":2639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2639,"column":0},"generated":{"line":2640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2640,"column":0},"generated":{"line":2641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2641,"column":0},"generated":{"line":2642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2642,"column":0},"generated":{"line":2643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2643,"column":0},"generated":{"line":2644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2644,"column":0},"generated":{"line":2645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2645,"column":0},"generated":{"line":2646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2646,"column":0},"generated":{"line":2647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2647,"column":0},"generated":{"line":2648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2648,"column":0},"generated":{"line":2649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2649,"column":0},"generated":{"line":2650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2650,"column":0},"generated":{"line":2651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2651,"column":0},"generated":{"line":2652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2652,"column":0},"generated":{"line":2653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2653,"column":0},"generated":{"line":2654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2654,"column":0},"generated":{"line":2655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2655,"column":0},"generated":{"line":2656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2656,"column":0},"generated":{"line":2657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2657,"column":0},"generated":{"line":2658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2658,"column":0},"generated":{"line":2659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2659,"column":0},"generated":{"line":2660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2660,"column":0},"generated":{"line":2661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2661,"column":0},"generated":{"line":2662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2662,"column":0},"generated":{"line":2663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2663,"column":0},"generated":{"line":2664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2664,"column":0},"generated":{"line":2665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2665,"column":0},"generated":{"line":2666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2666,"column":0},"generated":{"line":2667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2667,"column":0},"generated":{"line":2668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2668,"column":0},"generated":{"line":2669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2669,"column":0},"generated":{"line":2670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2670,"column":0},"generated":{"line":2671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2671,"column":0},"generated":{"line":2672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2672,"column":0},"generated":{"line":2673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2673,"column":0},"generated":{"line":2674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2674,"column":0},"generated":{"line":2675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2675,"column":0},"generated":{"line":2676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2676,"column":0},"generated":{"line":2677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2677,"column":0},"generated":{"line":2678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2678,"column":0},"generated":{"line":2679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2679,"column":0},"generated":{"line":2680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2680,"column":0},"generated":{"line":2681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2681,"column":0},"generated":{"line":2682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2682,"column":0},"generated":{"line":2683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2683,"column":0},"generated":{"line":2684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2684,"column":0},"generated":{"line":2685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2685,"column":0},"generated":{"line":2686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2686,"column":0},"generated":{"line":2687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2687,"column":0},"generated":{"line":2688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2688,"column":0},"generated":{"line":2689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2689,"column":0},"generated":{"line":2690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2690,"column":0},"generated":{"line":2691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2691,"column":0},"generated":{"line":2692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2692,"column":0},"generated":{"line":2693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2693,"column":0},"generated":{"line":2694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2694,"column":0},"generated":{"line":2695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2695,"column":0},"generated":{"line":2696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2696,"column":0},"generated":{"line":2697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2697,"column":0},"generated":{"line":2698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2698,"column":0},"generated":{"line":2699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2699,"column":0},"generated":{"line":2700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2700,"column":0},"generated":{"line":2701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2701,"column":0},"generated":{"line":2702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2702,"column":0},"generated":{"line":2703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2703,"column":0},"generated":{"line":2704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2704,"column":0},"generated":{"line":2705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2705,"column":0},"generated":{"line":2706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2706,"column":0},"generated":{"line":2707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2707,"column":0},"generated":{"line":2708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2708,"column":0},"generated":{"line":2709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2709,"column":0},"generated":{"line":2710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2710,"column":0},"generated":{"line":2711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2711,"column":0},"generated":{"line":2712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2712,"column":0},"generated":{"line":2713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2713,"column":0},"generated":{"line":2714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2714,"column":0},"generated":{"line":2715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2715,"column":0},"generated":{"line":2716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2716,"column":0},"generated":{"line":2717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2717,"column":0},"generated":{"line":2718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2718,"column":0},"generated":{"line":2719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2719,"column":0},"generated":{"line":2720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2720,"column":0},"generated":{"line":2721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2721,"column":0},"generated":{"line":2722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2722,"column":0},"generated":{"line":2723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2723,"column":0},"generated":{"line":2724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2724,"column":0},"generated":{"line":2725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2725,"column":0},"generated":{"line":2726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2726,"column":0},"generated":{"line":2727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2727,"column":0},"generated":{"line":2728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2728,"column":0},"generated":{"line":2729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2729,"column":0},"generated":{"line":2730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2730,"column":0},"generated":{"line":2731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2731,"column":0},"generated":{"line":2732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2732,"column":0},"generated":{"line":2733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2733,"column":0},"generated":{"line":2734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2734,"column":0},"generated":{"line":2735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2735,"column":0},"generated":{"line":2736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2736,"column":0},"generated":{"line":2737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2737,"column":0},"generated":{"line":2738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2738,"column":0},"generated":{"line":2739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2739,"column":0},"generated":{"line":2740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2740,"column":0},"generated":{"line":2741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2741,"column":0},"generated":{"line":2742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2742,"column":0},"generated":{"line":2743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2743,"column":0},"generated":{"line":2744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2744,"column":0},"generated":{"line":2745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2745,"column":0},"generated":{"line":2746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2746,"column":0},"generated":{"line":2747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2747,"column":0},"generated":{"line":2748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2748,"column":0},"generated":{"line":2749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2749,"column":0},"generated":{"line":2750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2750,"column":0},"generated":{"line":2751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2751,"column":0},"generated":{"line":2752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2752,"column":0},"generated":{"line":2753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2753,"column":0},"generated":{"line":2754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2754,"column":0},"generated":{"line":2755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2755,"column":0},"generated":{"line":2756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2756,"column":0},"generated":{"line":2757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2757,"column":0},"generated":{"line":2758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2758,"column":0},"generated":{"line":2759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2759,"column":0},"generated":{"line":2760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2760,"column":0},"generated":{"line":2761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2761,"column":0},"generated":{"line":2762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2762,"column":0},"generated":{"line":2763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2763,"column":0},"generated":{"line":2764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2764,"column":0},"generated":{"line":2765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2765,"column":0},"generated":{"line":2766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2766,"column":0},"generated":{"line":2767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2767,"column":0},"generated":{"line":2768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2768,"column":0},"generated":{"line":2769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2769,"column":0},"generated":{"line":2770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2770,"column":0},"generated":{"line":2771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2771,"column":0},"generated":{"line":2772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2772,"column":0},"generated":{"line":2773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2773,"column":0},"generated":{"line":2774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2774,"column":0},"generated":{"line":2775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2775,"column":0},"generated":{"line":2776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2776,"column":0},"generated":{"line":2777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2777,"column":0},"generated":{"line":2778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2778,"column":0},"generated":{"line":2779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2779,"column":0},"generated":{"line":2780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2780,"column":0},"generated":{"line":2781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2781,"column":0},"generated":{"line":2782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2782,"column":0},"generated":{"line":2783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2783,"column":0},"generated":{"line":2784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2784,"column":0},"generated":{"line":2785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2785,"column":0},"generated":{"line":2786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2786,"column":0},"generated":{"line":2787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2787,"column":0},"generated":{"line":2788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2788,"column":0},"generated":{"line":2789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2789,"column":0},"generated":{"line":2790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2790,"column":0},"generated":{"line":2791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2791,"column":0},"generated":{"line":2792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2792,"column":0},"generated":{"line":2793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2793,"column":0},"generated":{"line":2794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2794,"column":0},"generated":{"line":2795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2795,"column":0},"generated":{"line":2796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2796,"column":0},"generated":{"line":2797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2797,"column":0},"generated":{"line":2798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2798,"column":0},"generated":{"line":2799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2799,"column":0},"generated":{"line":2800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2800,"column":0},"generated":{"line":2801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2801,"column":0},"generated":{"line":2802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2802,"column":0},"generated":{"line":2803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2803,"column":0},"generated":{"line":2804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2804,"column":0},"generated":{"line":2805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2805,"column":0},"generated":{"line":2806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2806,"column":0},"generated":{"line":2807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2807,"column":0},"generated":{"line":2808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2808,"column":0},"generated":{"line":2809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2809,"column":0},"generated":{"line":2810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2810,"column":0},"generated":{"line":2811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2811,"column":0},"generated":{"line":2812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2812,"column":0},"generated":{"line":2813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2813,"column":0},"generated":{"line":2814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2814,"column":0},"generated":{"line":2815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2815,"column":0},"generated":{"line":2816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2816,"column":0},"generated":{"line":2817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2817,"column":0},"generated":{"line":2818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2818,"column":0},"generated":{"line":2819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2819,"column":0},"generated":{"line":2820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2820,"column":0},"generated":{"line":2821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2821,"column":0},"generated":{"line":2822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2822,"column":0},"generated":{"line":2823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2823,"column":0},"generated":{"line":2824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2824,"column":0},"generated":{"line":2825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2825,"column":0},"generated":{"line":2826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2826,"column":0},"generated":{"line":2827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2827,"column":0},"generated":{"line":2828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2828,"column":0},"generated":{"line":2829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2829,"column":0},"generated":{"line":2830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2830,"column":0},"generated":{"line":2831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2831,"column":0},"generated":{"line":2832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2832,"column":0},"generated":{"line":2833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2833,"column":0},"generated":{"line":2834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2834,"column":0},"generated":{"line":2835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2835,"column":0},"generated":{"line":2836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2836,"column":0},"generated":{"line":2837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2837,"column":0},"generated":{"line":2838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2838,"column":0},"generated":{"line":2839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2839,"column":0},"generated":{"line":2840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2840,"column":0},"generated":{"line":2841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2841,"column":0},"generated":{"line":2842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2842,"column":0},"generated":{"line":2843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2843,"column":0},"generated":{"line":2844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2844,"column":0},"generated":{"line":2845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2845,"column":0},"generated":{"line":2846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2846,"column":0},"generated":{"line":2847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2847,"column":0},"generated":{"line":2848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2848,"column":0},"generated":{"line":2849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2849,"column":0},"generated":{"line":2850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2850,"column":0},"generated":{"line":2851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2851,"column":0},"generated":{"line":2852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2852,"column":0},"generated":{"line":2853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2853,"column":0},"generated":{"line":2854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2854,"column":0},"generated":{"line":2855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2855,"column":0},"generated":{"line":2856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2856,"column":0},"generated":{"line":2857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2857,"column":0},"generated":{"line":2858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2858,"column":0},"generated":{"line":2859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2859,"column":0},"generated":{"line":2860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2860,"column":0},"generated":{"line":2861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2861,"column":0},"generated":{"line":2862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2862,"column":0},"generated":{"line":2863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2863,"column":0},"generated":{"line":2864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2864,"column":0},"generated":{"line":2865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2865,"column":0},"generated":{"line":2866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2866,"column":0},"generated":{"line":2867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2867,"column":0},"generated":{"line":2868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2868,"column":0},"generated":{"line":2869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2869,"column":0},"generated":{"line":2870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2870,"column":0},"generated":{"line":2871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2871,"column":0},"generated":{"line":2872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2872,"column":0},"generated":{"line":2873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2873,"column":0},"generated":{"line":2874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2874,"column":0},"generated":{"line":2875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2875,"column":0},"generated":{"line":2876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2876,"column":0},"generated":{"line":2877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2877,"column":0},"generated":{"line":2878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2878,"column":0},"generated":{"line":2879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2879,"column":0},"generated":{"line":2880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2880,"column":0},"generated":{"line":2881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2881,"column":0},"generated":{"line":2882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2882,"column":0},"generated":{"line":2883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2883,"column":0},"generated":{"line":2884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2884,"column":0},"generated":{"line":2885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2885,"column":0},"generated":{"line":2886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2886,"column":0},"generated":{"line":2887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2887,"column":0},"generated":{"line":2888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2888,"column":0},"generated":{"line":2889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2889,"column":0},"generated":{"line":2890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2890,"column":0},"generated":{"line":2891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2891,"column":0},"generated":{"line":2892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2892,"column":0},"generated":{"line":2893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2893,"column":0},"generated":{"line":2894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2894,"column":0},"generated":{"line":2895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2895,"column":0},"generated":{"line":2896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2896,"column":0},"generated":{"line":2897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2897,"column":0},"generated":{"line":2898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2898,"column":0},"generated":{"line":2899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2899,"column":0},"generated":{"line":2900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2900,"column":0},"generated":{"line":2901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2901,"column":0},"generated":{"line":2902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2902,"column":0},"generated":{"line":2903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2903,"column":0},"generated":{"line":2904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2904,"column":0},"generated":{"line":2905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2905,"column":0},"generated":{"line":2906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2906,"column":0},"generated":{"line":2907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2907,"column":0},"generated":{"line":2908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2908,"column":0},"generated":{"line":2909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2909,"column":0},"generated":{"line":2910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2910,"column":0},"generated":{"line":2911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2911,"column":0},"generated":{"line":2912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2912,"column":0},"generated":{"line":2913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2913,"column":0},"generated":{"line":2914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2914,"column":0},"generated":{"line":2915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2915,"column":0},"generated":{"line":2916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2916,"column":0},"generated":{"line":2917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2917,"column":0},"generated":{"line":2918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2918,"column":0},"generated":{"line":2919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2919,"column":0},"generated":{"line":2920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2920,"column":0},"generated":{"line":2921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2921,"column":0},"generated":{"line":2922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2922,"column":0},"generated":{"line":2923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2923,"column":0},"generated":{"line":2924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2924,"column":0},"generated":{"line":2925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2925,"column":0},"generated":{"line":2926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2926,"column":0},"generated":{"line":2927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2927,"column":0},"generated":{"line":2928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2928,"column":0},"generated":{"line":2929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2929,"column":0},"generated":{"line":2930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2930,"column":0},"generated":{"line":2931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2931,"column":0},"generated":{"line":2932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2932,"column":0},"generated":{"line":2933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2933,"column":0},"generated":{"line":2934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2934,"column":0},"generated":{"line":2935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2935,"column":0},"generated":{"line":2936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2936,"column":0},"generated":{"line":2937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2937,"column":0},"generated":{"line":2938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2938,"column":0},"generated":{"line":2939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2939,"column":0},"generated":{"line":2940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2940,"column":0},"generated":{"line":2941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2941,"column":0},"generated":{"line":2942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2942,"column":0},"generated":{"line":2943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2943,"column":0},"generated":{"line":2944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2944,"column":0},"generated":{"line":2945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2945,"column":0},"generated":{"line":2946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2946,"column":0},"generated":{"line":2947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2947,"column":0},"generated":{"line":2948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2948,"column":0},"generated":{"line":2949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2949,"column":0},"generated":{"line":2950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2950,"column":0},"generated":{"line":2951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2951,"column":0},"generated":{"line":2952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2952,"column":0},"generated":{"line":2953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2953,"column":0},"generated":{"line":2954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2954,"column":0},"generated":{"line":2955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2955,"column":0},"generated":{"line":2956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2956,"column":0},"generated":{"line":2957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2957,"column":0},"generated":{"line":2958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2958,"column":0},"generated":{"line":2959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2959,"column":0},"generated":{"line":2960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2960,"column":0},"generated":{"line":2961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2961,"column":0},"generated":{"line":2962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2962,"column":0},"generated":{"line":2963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2963,"column":0},"generated":{"line":2964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2964,"column":0},"generated":{"line":2965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2965,"column":0},"generated":{"line":2966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2966,"column":0},"generated":{"line":2967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2967,"column":0},"generated":{"line":2968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2968,"column":0},"generated":{"line":2969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2969,"column":0},"generated":{"line":2970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2970,"column":0},"generated":{"line":2971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2971,"column":0},"generated":{"line":2972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2972,"column":0},"generated":{"line":2973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2973,"column":0},"generated":{"line":2974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2974,"column":0},"generated":{"line":2975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2975,"column":0},"generated":{"line":2976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2976,"column":0},"generated":{"line":2977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2977,"column":0},"generated":{"line":2978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2978,"column":0},"generated":{"line":2979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2979,"column":0},"generated":{"line":2980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2980,"column":0},"generated":{"line":2981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2981,"column":0},"generated":{"line":2982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2982,"column":0},"generated":{"line":2983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2983,"column":0},"generated":{"line":2984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2984,"column":0},"generated":{"line":2985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2985,"column":0},"generated":{"line":2986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2986,"column":0},"generated":{"line":2987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2987,"column":0},"generated":{"line":2988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2988,"column":0},"generated":{"line":2989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2989,"column":0},"generated":{"line":2990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2990,"column":0},"generated":{"line":2991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2991,"column":0},"generated":{"line":2992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2992,"column":0},"generated":{"line":2993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2993,"column":0},"generated":{"line":2994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2994,"column":0},"generated":{"line":2995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2995,"column":0},"generated":{"line":2996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2996,"column":0},"generated":{"line":2997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2997,"column":0},"generated":{"line":2998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2998,"column":0},"generated":{"line":2999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":2999,"column":0},"generated":{"line":3000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3000,"column":0},"generated":{"line":3001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3001,"column":0},"generated":{"line":3002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3002,"column":0},"generated":{"line":3003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3003,"column":0},"generated":{"line":3004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3004,"column":0},"generated":{"line":3005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3005,"column":0},"generated":{"line":3006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3006,"column":0},"generated":{"line":3007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3007,"column":0},"generated":{"line":3008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3008,"column":0},"generated":{"line":3009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3009,"column":0},"generated":{"line":3010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3010,"column":0},"generated":{"line":3011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3011,"column":0},"generated":{"line":3012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3012,"column":0},"generated":{"line":3013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3013,"column":0},"generated":{"line":3014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3014,"column":0},"generated":{"line":3015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3015,"column":0},"generated":{"line":3016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3016,"column":0},"generated":{"line":3017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3017,"column":0},"generated":{"line":3018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3018,"column":0},"generated":{"line":3019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3019,"column":0},"generated":{"line":3020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3020,"column":0},"generated":{"line":3021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3021,"column":0},"generated":{"line":3022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3022,"column":0},"generated":{"line":3023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3023,"column":0},"generated":{"line":3024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3024,"column":0},"generated":{"line":3025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3025,"column":0},"generated":{"line":3026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3026,"column":0},"generated":{"line":3027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3027,"column":0},"generated":{"line":3028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3028,"column":0},"generated":{"line":3029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3029,"column":0},"generated":{"line":3030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3030,"column":0},"generated":{"line":3031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3031,"column":0},"generated":{"line":3032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3032,"column":0},"generated":{"line":3033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3033,"column":0},"generated":{"line":3034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3034,"column":0},"generated":{"line":3035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3035,"column":0},"generated":{"line":3036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3036,"column":0},"generated":{"line":3037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3037,"column":0},"generated":{"line":3038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3038,"column":0},"generated":{"line":3039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3039,"column":0},"generated":{"line":3040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3040,"column":0},"generated":{"line":3041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3041,"column":0},"generated":{"line":3042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3042,"column":0},"generated":{"line":3043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3043,"column":0},"generated":{"line":3044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3044,"column":0},"generated":{"line":3045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3045,"column":0},"generated":{"line":3046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3046,"column":0},"generated":{"line":3047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3047,"column":0},"generated":{"line":3048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3048,"column":0},"generated":{"line":3049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3049,"column":0},"generated":{"line":3050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3050,"column":0},"generated":{"line":3051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3051,"column":0},"generated":{"line":3052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3052,"column":0},"generated":{"line":3053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3053,"column":0},"generated":{"line":3054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3054,"column":0},"generated":{"line":3055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3055,"column":0},"generated":{"line":3056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3056,"column":0},"generated":{"line":3057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3057,"column":0},"generated":{"line":3058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3058,"column":0},"generated":{"line":3059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3059,"column":0},"generated":{"line":3060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3060,"column":0},"generated":{"line":3061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3061,"column":0},"generated":{"line":3062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3062,"column":0},"generated":{"line":3063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3063,"column":0},"generated":{"line":3064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3064,"column":0},"generated":{"line":3065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3065,"column":0},"generated":{"line":3066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3066,"column":0},"generated":{"line":3067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3067,"column":0},"generated":{"line":3068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3068,"column":0},"generated":{"line":3069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3069,"column":0},"generated":{"line":3070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3070,"column":0},"generated":{"line":3071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3071,"column":0},"generated":{"line":3072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3072,"column":0},"generated":{"line":3073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3073,"column":0},"generated":{"line":3074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3074,"column":0},"generated":{"line":3075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3075,"column":0},"generated":{"line":3076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3076,"column":0},"generated":{"line":3077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3077,"column":0},"generated":{"line":3078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3078,"column":0},"generated":{"line":3079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3079,"column":0},"generated":{"line":3080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3080,"column":0},"generated":{"line":3081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3081,"column":0},"generated":{"line":3082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3082,"column":0},"generated":{"line":3083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3083,"column":0},"generated":{"line":3084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3084,"column":0},"generated":{"line":3085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3085,"column":0},"generated":{"line":3086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3086,"column":0},"generated":{"line":3087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3087,"column":0},"generated":{"line":3088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3088,"column":0},"generated":{"line":3089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3089,"column":0},"generated":{"line":3090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3090,"column":0},"generated":{"line":3091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3091,"column":0},"generated":{"line":3092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3092,"column":0},"generated":{"line":3093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3093,"column":0},"generated":{"line":3094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3094,"column":0},"generated":{"line":3095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3095,"column":0},"generated":{"line":3096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3096,"column":0},"generated":{"line":3097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3097,"column":0},"generated":{"line":3098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3098,"column":0},"generated":{"line":3099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3099,"column":0},"generated":{"line":3100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3100,"column":0},"generated":{"line":3101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3101,"column":0},"generated":{"line":3102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3102,"column":0},"generated":{"line":3103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3103,"column":0},"generated":{"line":3104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3104,"column":0},"generated":{"line":3105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3105,"column":0},"generated":{"line":3106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3106,"column":0},"generated":{"line":3107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3107,"column":0},"generated":{"line":3108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3108,"column":0},"generated":{"line":3109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3109,"column":0},"generated":{"line":3110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3110,"column":0},"generated":{"line":3111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3111,"column":0},"generated":{"line":3112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3112,"column":0},"generated":{"line":3113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3113,"column":0},"generated":{"line":3114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3114,"column":0},"generated":{"line":3115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3115,"column":0},"generated":{"line":3116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3116,"column":0},"generated":{"line":3117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3117,"column":0},"generated":{"line":3118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3118,"column":0},"generated":{"line":3119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3119,"column":0},"generated":{"line":3120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3120,"column":0},"generated":{"line":3121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3121,"column":0},"generated":{"line":3122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3122,"column":0},"generated":{"line":3123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3123,"column":0},"generated":{"line":3124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3124,"column":0},"generated":{"line":3125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3125,"column":0},"generated":{"line":3126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3126,"column":0},"generated":{"line":3127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3127,"column":0},"generated":{"line":3128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3128,"column":0},"generated":{"line":3129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3129,"column":0},"generated":{"line":3130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3130,"column":0},"generated":{"line":3131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3131,"column":0},"generated":{"line":3132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3132,"column":0},"generated":{"line":3133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3133,"column":0},"generated":{"line":3134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3134,"column":0},"generated":{"line":3135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3135,"column":0},"generated":{"line":3136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3136,"column":0},"generated":{"line":3137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3137,"column":0},"generated":{"line":3138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3138,"column":0},"generated":{"line":3139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3139,"column":0},"generated":{"line":3140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3140,"column":0},"generated":{"line":3141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3141,"column":0},"generated":{"line":3142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3142,"column":0},"generated":{"line":3143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3143,"column":0},"generated":{"line":3144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3144,"column":0},"generated":{"line":3145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3145,"column":0},"generated":{"line":3146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3146,"column":0},"generated":{"line":3147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3147,"column":0},"generated":{"line":3148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3148,"column":0},"generated":{"line":3149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3149,"column":0},"generated":{"line":3150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3150,"column":0},"generated":{"line":3151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3151,"column":0},"generated":{"line":3152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3152,"column":0},"generated":{"line":3153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3153,"column":0},"generated":{"line":3154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3154,"column":0},"generated":{"line":3155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3155,"column":0},"generated":{"line":3156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3156,"column":0},"generated":{"line":3157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3157,"column":0},"generated":{"line":3158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3158,"column":0},"generated":{"line":3159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3159,"column":0},"generated":{"line":3160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3160,"column":0},"generated":{"line":3161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3161,"column":0},"generated":{"line":3162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3162,"column":0},"generated":{"line":3163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3163,"column":0},"generated":{"line":3164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3164,"column":0},"generated":{"line":3165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3165,"column":0},"generated":{"line":3166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3166,"column":0},"generated":{"line":3167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3167,"column":0},"generated":{"line":3168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3168,"column":0},"generated":{"line":3169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3169,"column":0},"generated":{"line":3170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3170,"column":0},"generated":{"line":3171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3171,"column":0},"generated":{"line":3172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3172,"column":0},"generated":{"line":3173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3173,"column":0},"generated":{"line":3174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3174,"column":0},"generated":{"line":3175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3175,"column":0},"generated":{"line":3176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3176,"column":0},"generated":{"line":3177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3177,"column":0},"generated":{"line":3178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3178,"column":0},"generated":{"line":3179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3179,"column":0},"generated":{"line":3180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3180,"column":0},"generated":{"line":3181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3181,"column":0},"generated":{"line":3182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3182,"column":0},"generated":{"line":3183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3183,"column":0},"generated":{"line":3184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3184,"column":0},"generated":{"line":3185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3185,"column":0},"generated":{"line":3186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3186,"column":0},"generated":{"line":3187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3187,"column":0},"generated":{"line":3188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3188,"column":0},"generated":{"line":3189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3189,"column":0},"generated":{"line":3190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3190,"column":0},"generated":{"line":3191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3191,"column":0},"generated":{"line":3192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3192,"column":0},"generated":{"line":3193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3193,"column":0},"generated":{"line":3194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3194,"column":0},"generated":{"line":3195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3195,"column":0},"generated":{"line":3196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3196,"column":0},"generated":{"line":3197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3197,"column":0},"generated":{"line":3198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3198,"column":0},"generated":{"line":3199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3199,"column":0},"generated":{"line":3200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3200,"column":0},"generated":{"line":3201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3201,"column":0},"generated":{"line":3202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3202,"column":0},"generated":{"line":3203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3203,"column":0},"generated":{"line":3204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3204,"column":0},"generated":{"line":3205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3205,"column":0},"generated":{"line":3206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3206,"column":0},"generated":{"line":3207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3207,"column":0},"generated":{"line":3208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3208,"column":0},"generated":{"line":3209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3209,"column":0},"generated":{"line":3210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3210,"column":0},"generated":{"line":3211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3211,"column":0},"generated":{"line":3212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3212,"column":0},"generated":{"line":3213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3213,"column":0},"generated":{"line":3214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3214,"column":0},"generated":{"line":3215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3215,"column":0},"generated":{"line":3216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3216,"column":0},"generated":{"line":3217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3217,"column":0},"generated":{"line":3218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3218,"column":0},"generated":{"line":3219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3219,"column":0},"generated":{"line":3220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3220,"column":0},"generated":{"line":3221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3221,"column":0},"generated":{"line":3222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3222,"column":0},"generated":{"line":3223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3223,"column":0},"generated":{"line":3224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3224,"column":0},"generated":{"line":3225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3225,"column":0},"generated":{"line":3226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3226,"column":0},"generated":{"line":3227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3227,"column":0},"generated":{"line":3228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3228,"column":0},"generated":{"line":3229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3229,"column":0},"generated":{"line":3230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3230,"column":0},"generated":{"line":3231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3231,"column":0},"generated":{"line":3232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3232,"column":0},"generated":{"line":3233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3233,"column":0},"generated":{"line":3234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3234,"column":0},"generated":{"line":3235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3235,"column":0},"generated":{"line":3236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3236,"column":0},"generated":{"line":3237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3237,"column":0},"generated":{"line":3238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3238,"column":0},"generated":{"line":3239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3239,"column":0},"generated":{"line":3240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3240,"column":0},"generated":{"line":3241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3241,"column":0},"generated":{"line":3242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3242,"column":0},"generated":{"line":3243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3243,"column":0},"generated":{"line":3244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3244,"column":0},"generated":{"line":3245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3245,"column":0},"generated":{"line":3246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3246,"column":0},"generated":{"line":3247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3247,"column":0},"generated":{"line":3248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3248,"column":0},"generated":{"line":3249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3249,"column":0},"generated":{"line":3250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3250,"column":0},"generated":{"line":3251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3251,"column":0},"generated":{"line":3252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3252,"column":0},"generated":{"line":3253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3253,"column":0},"generated":{"line":3254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3254,"column":0},"generated":{"line":3255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3255,"column":0},"generated":{"line":3256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3256,"column":0},"generated":{"line":3257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3257,"column":0},"generated":{"line":3258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3258,"column":0},"generated":{"line":3259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3259,"column":0},"generated":{"line":3260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3260,"column":0},"generated":{"line":3261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3261,"column":0},"generated":{"line":3262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3262,"column":0},"generated":{"line":3263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3263,"column":0},"generated":{"line":3264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3264,"column":0},"generated":{"line":3265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3265,"column":0},"generated":{"line":3266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3266,"column":0},"generated":{"line":3267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3267,"column":0},"generated":{"line":3268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3268,"column":0},"generated":{"line":3269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3269,"column":0},"generated":{"line":3270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3270,"column":0},"generated":{"line":3271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3271,"column":0},"generated":{"line":3272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3272,"column":0},"generated":{"line":3273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3273,"column":0},"generated":{"line":3274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3274,"column":0},"generated":{"line":3275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3275,"column":0},"generated":{"line":3276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3276,"column":0},"generated":{"line":3277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3277,"column":0},"generated":{"line":3278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3278,"column":0},"generated":{"line":3279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3279,"column":0},"generated":{"line":3280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3280,"column":0},"generated":{"line":3281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3281,"column":0},"generated":{"line":3282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3282,"column":0},"generated":{"line":3283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3283,"column":0},"generated":{"line":3284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3284,"column":0},"generated":{"line":3285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3285,"column":0},"generated":{"line":3286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3286,"column":0},"generated":{"line":3287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3287,"column":0},"generated":{"line":3288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3288,"column":0},"generated":{"line":3289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3289,"column":0},"generated":{"line":3290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3290,"column":0},"generated":{"line":3291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3291,"column":0},"generated":{"line":3292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3292,"column":0},"generated":{"line":3293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3293,"column":0},"generated":{"line":3294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3294,"column":0},"generated":{"line":3295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3295,"column":0},"generated":{"line":3296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3296,"column":0},"generated":{"line":3297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3297,"column":0},"generated":{"line":3298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3298,"column":0},"generated":{"line":3299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3299,"column":0},"generated":{"line":3300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3300,"column":0},"generated":{"line":3301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3301,"column":0},"generated":{"line":3302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3302,"column":0},"generated":{"line":3303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3303,"column":0},"generated":{"line":3304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3304,"column":0},"generated":{"line":3305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3305,"column":0},"generated":{"line":3306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3306,"column":0},"generated":{"line":3307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3307,"column":0},"generated":{"line":3308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3308,"column":0},"generated":{"line":3309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3309,"column":0},"generated":{"line":3310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3310,"column":0},"generated":{"line":3311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3311,"column":0},"generated":{"line":3312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3312,"column":0},"generated":{"line":3313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3313,"column":0},"generated":{"line":3314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3314,"column":0},"generated":{"line":3315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3315,"column":0},"generated":{"line":3316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3316,"column":0},"generated":{"line":3317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3317,"column":0},"generated":{"line":3318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3318,"column":0},"generated":{"line":3319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3319,"column":0},"generated":{"line":3320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3320,"column":0},"generated":{"line":3321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3321,"column":0},"generated":{"line":3322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3322,"column":0},"generated":{"line":3323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3323,"column":0},"generated":{"line":3324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3324,"column":0},"generated":{"line":3325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3325,"column":0},"generated":{"line":3326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3326,"column":0},"generated":{"line":3327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3327,"column":0},"generated":{"line":3328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3328,"column":0},"generated":{"line":3329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3329,"column":0},"generated":{"line":3330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3330,"column":0},"generated":{"line":3331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3331,"column":0},"generated":{"line":3332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3332,"column":0},"generated":{"line":3333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3333,"column":0},"generated":{"line":3334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3334,"column":0},"generated":{"line":3335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3335,"column":0},"generated":{"line":3336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3336,"column":0},"generated":{"line":3337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3337,"column":0},"generated":{"line":3338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3338,"column":0},"generated":{"line":3339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3339,"column":0},"generated":{"line":3340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3340,"column":0},"generated":{"line":3341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3341,"column":0},"generated":{"line":3342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3342,"column":0},"generated":{"line":3343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3343,"column":0},"generated":{"line":3344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3344,"column":0},"generated":{"line":3345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3345,"column":0},"generated":{"line":3346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3346,"column":0},"generated":{"line":3347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3347,"column":0},"generated":{"line":3348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3348,"column":0},"generated":{"line":3349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3349,"column":0},"generated":{"line":3350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3350,"column":0},"generated":{"line":3351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3351,"column":0},"generated":{"line":3352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3352,"column":0},"generated":{"line":3353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3353,"column":0},"generated":{"line":3354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3354,"column":0},"generated":{"line":3355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3355,"column":0},"generated":{"line":3356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3356,"column":0},"generated":{"line":3357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3357,"column":0},"generated":{"line":3358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3358,"column":0},"generated":{"line":3359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3359,"column":0},"generated":{"line":3360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3360,"column":0},"generated":{"line":3361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3361,"column":0},"generated":{"line":3362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3362,"column":0},"generated":{"line":3363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3363,"column":0},"generated":{"line":3364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3364,"column":0},"generated":{"line":3365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3365,"column":0},"generated":{"line":3366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3366,"column":0},"generated":{"line":3367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3367,"column":0},"generated":{"line":3368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3368,"column":0},"generated":{"line":3369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3369,"column":0},"generated":{"line":3370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3370,"column":0},"generated":{"line":3371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3371,"column":0},"generated":{"line":3372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3372,"column":0},"generated":{"line":3373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3373,"column":0},"generated":{"line":3374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3374,"column":0},"generated":{"line":3375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3375,"column":0},"generated":{"line":3376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3376,"column":0},"generated":{"line":3377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3377,"column":0},"generated":{"line":3378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3378,"column":0},"generated":{"line":3379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3379,"column":0},"generated":{"line":3380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3380,"column":0},"generated":{"line":3381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3381,"column":0},"generated":{"line":3382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3382,"column":0},"generated":{"line":3383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3383,"column":0},"generated":{"line":3384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3384,"column":0},"generated":{"line":3385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3385,"column":0},"generated":{"line":3386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3386,"column":0},"generated":{"line":3387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3387,"column":0},"generated":{"line":3388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3388,"column":0},"generated":{"line":3389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3389,"column":0},"generated":{"line":3390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3390,"column":0},"generated":{"line":3391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3391,"column":0},"generated":{"line":3392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3392,"column":0},"generated":{"line":3393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3393,"column":0},"generated":{"line":3394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3394,"column":0},"generated":{"line":3395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3395,"column":0},"generated":{"line":3396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3396,"column":0},"generated":{"line":3397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3397,"column":0},"generated":{"line":3398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3398,"column":0},"generated":{"line":3399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3399,"column":0},"generated":{"line":3400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3400,"column":0},"generated":{"line":3401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3401,"column":0},"generated":{"line":3402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3402,"column":0},"generated":{"line":3403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3403,"column":0},"generated":{"line":3404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3404,"column":0},"generated":{"line":3405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3405,"column":0},"generated":{"line":3406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3406,"column":0},"generated":{"line":3407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3407,"column":0},"generated":{"line":3408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3408,"column":0},"generated":{"line":3409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3409,"column":0},"generated":{"line":3410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3410,"column":0},"generated":{"line":3411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3411,"column":0},"generated":{"line":3412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3412,"column":0},"generated":{"line":3413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3413,"column":0},"generated":{"line":3414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3414,"column":0},"generated":{"line":3415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3415,"column":0},"generated":{"line":3416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3416,"column":0},"generated":{"line":3417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3417,"column":0},"generated":{"line":3418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3418,"column":0},"generated":{"line":3419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3419,"column":0},"generated":{"line":3420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3420,"column":0},"generated":{"line":3421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3421,"column":0},"generated":{"line":3422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3422,"column":0},"generated":{"line":3423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3423,"column":0},"generated":{"line":3424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3424,"column":0},"generated":{"line":3425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3425,"column":0},"generated":{"line":3426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3426,"column":0},"generated":{"line":3427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3427,"column":0},"generated":{"line":3428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3428,"column":0},"generated":{"line":3429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3429,"column":0},"generated":{"line":3430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3430,"column":0},"generated":{"line":3431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3431,"column":0},"generated":{"line":3432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3432,"column":0},"generated":{"line":3433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3433,"column":0},"generated":{"line":3434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3434,"column":0},"generated":{"line":3435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3435,"column":0},"generated":{"line":3436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3436,"column":0},"generated":{"line":3437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3437,"column":0},"generated":{"line":3438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3438,"column":0},"generated":{"line":3439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3439,"column":0},"generated":{"line":3440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3440,"column":0},"generated":{"line":3441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3441,"column":0},"generated":{"line":3442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3442,"column":0},"generated":{"line":3443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3443,"column":0},"generated":{"line":3444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3444,"column":0},"generated":{"line":3445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3445,"column":0},"generated":{"line":3446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3446,"column":0},"generated":{"line":3447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3447,"column":0},"generated":{"line":3448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3448,"column":0},"generated":{"line":3449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3449,"column":0},"generated":{"line":3450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3450,"column":0},"generated":{"line":3451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3451,"column":0},"generated":{"line":3452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3452,"column":0},"generated":{"line":3453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3453,"column":0},"generated":{"line":3454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3454,"column":0},"generated":{"line":3455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3455,"column":0},"generated":{"line":3456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3456,"column":0},"generated":{"line":3457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3457,"column":0},"generated":{"line":3458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3458,"column":0},"generated":{"line":3459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3459,"column":0},"generated":{"line":3460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3460,"column":0},"generated":{"line":3461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3461,"column":0},"generated":{"line":3462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3462,"column":0},"generated":{"line":3463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3463,"column":0},"generated":{"line":3464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3464,"column":0},"generated":{"line":3465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3465,"column":0},"generated":{"line":3466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3466,"column":0},"generated":{"line":3467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3467,"column":0},"generated":{"line":3468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3468,"column":0},"generated":{"line":3469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3469,"column":0},"generated":{"line":3470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3470,"column":0},"generated":{"line":3471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3471,"column":0},"generated":{"line":3472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3472,"column":0},"generated":{"line":3473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3473,"column":0},"generated":{"line":3474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3474,"column":0},"generated":{"line":3475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3475,"column":0},"generated":{"line":3476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3476,"column":0},"generated":{"line":3477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3477,"column":0},"generated":{"line":3478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3478,"column":0},"generated":{"line":3479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3479,"column":0},"generated":{"line":3480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3480,"column":0},"generated":{"line":3481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3481,"column":0},"generated":{"line":3482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3482,"column":0},"generated":{"line":3483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3483,"column":0},"generated":{"line":3484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3484,"column":0},"generated":{"line":3485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3485,"column":0},"generated":{"line":3486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3486,"column":0},"generated":{"line":3487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3487,"column":0},"generated":{"line":3488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3488,"column":0},"generated":{"line":3489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3489,"column":0},"generated":{"line":3490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3490,"column":0},"generated":{"line":3491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3491,"column":0},"generated":{"line":3492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3492,"column":0},"generated":{"line":3493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3493,"column":0},"generated":{"line":3494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3494,"column":0},"generated":{"line":3495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3495,"column":0},"generated":{"line":3496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3496,"column":0},"generated":{"line":3497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3497,"column":0},"generated":{"line":3498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3498,"column":0},"generated":{"line":3499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3499,"column":0},"generated":{"line":3500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3500,"column":0},"generated":{"line":3501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3501,"column":0},"generated":{"line":3502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3502,"column":0},"generated":{"line":3503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3503,"column":0},"generated":{"line":3504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3504,"column":0},"generated":{"line":3505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3505,"column":0},"generated":{"line":3506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3506,"column":0},"generated":{"line":3507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3507,"column":0},"generated":{"line":3508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3508,"column":0},"generated":{"line":3509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3509,"column":0},"generated":{"line":3510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3510,"column":0},"generated":{"line":3511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3511,"column":0},"generated":{"line":3512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3512,"column":0},"generated":{"line":3513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3513,"column":0},"generated":{"line":3514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3514,"column":0},"generated":{"line":3515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3515,"column":0},"generated":{"line":3516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3516,"column":0},"generated":{"line":3517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3517,"column":0},"generated":{"line":3518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3518,"column":0},"generated":{"line":3519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3519,"column":0},"generated":{"line":3520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3520,"column":0},"generated":{"line":3521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3521,"column":0},"generated":{"line":3522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3522,"column":0},"generated":{"line":3523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3523,"column":0},"generated":{"line":3524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3524,"column":0},"generated":{"line":3525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3525,"column":0},"generated":{"line":3526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3526,"column":0},"generated":{"line":3527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3527,"column":0},"generated":{"line":3528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3528,"column":0},"generated":{"line":3529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3529,"column":0},"generated":{"line":3530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3530,"column":0},"generated":{"line":3531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3531,"column":0},"generated":{"line":3532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3532,"column":0},"generated":{"line":3533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3533,"column":0},"generated":{"line":3534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3534,"column":0},"generated":{"line":3535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3535,"column":0},"generated":{"line":3536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3536,"column":0},"generated":{"line":3537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3537,"column":0},"generated":{"line":3538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3538,"column":0},"generated":{"line":3539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3539,"column":0},"generated":{"line":3540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3540,"column":0},"generated":{"line":3541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3541,"column":0},"generated":{"line":3542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3542,"column":0},"generated":{"line":3543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3543,"column":0},"generated":{"line":3544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3544,"column":0},"generated":{"line":3545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3545,"column":0},"generated":{"line":3546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3546,"column":0},"generated":{"line":3547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3547,"column":0},"generated":{"line":3548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3548,"column":0},"generated":{"line":3549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3549,"column":0},"generated":{"line":3550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3550,"column":0},"generated":{"line":3551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3551,"column":0},"generated":{"line":3552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3552,"column":0},"generated":{"line":3553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3553,"column":0},"generated":{"line":3554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3554,"column":0},"generated":{"line":3555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3555,"column":0},"generated":{"line":3556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3556,"column":0},"generated":{"line":3557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3557,"column":0},"generated":{"line":3558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3558,"column":0},"generated":{"line":3559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3559,"column":0},"generated":{"line":3560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3560,"column":0},"generated":{"line":3561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3561,"column":0},"generated":{"line":3562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3562,"column":0},"generated":{"line":3563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3563,"column":0},"generated":{"line":3564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3564,"column":0},"generated":{"line":3565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3565,"column":0},"generated":{"line":3566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3566,"column":0},"generated":{"line":3567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3567,"column":0},"generated":{"line":3568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3568,"column":0},"generated":{"line":3569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3569,"column":0},"generated":{"line":3570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3570,"column":0},"generated":{"line":3571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3571,"column":0},"generated":{"line":3572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3572,"column":0},"generated":{"line":3573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3573,"column":0},"generated":{"line":3574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3574,"column":0},"generated":{"line":3575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3575,"column":0},"generated":{"line":3576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3576,"column":0},"generated":{"line":3577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3577,"column":0},"generated":{"line":3578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3578,"column":0},"generated":{"line":3579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3579,"column":0},"generated":{"line":3580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3580,"column":0},"generated":{"line":3581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3581,"column":0},"generated":{"line":3582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3582,"column":0},"generated":{"line":3583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3583,"column":0},"generated":{"line":3584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3584,"column":0},"generated":{"line":3585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3585,"column":0},"generated":{"line":3586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3586,"column":0},"generated":{"line":3587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3587,"column":0},"generated":{"line":3588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3588,"column":0},"generated":{"line":3589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3589,"column":0},"generated":{"line":3590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3590,"column":0},"generated":{"line":3591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3591,"column":0},"generated":{"line":3592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3592,"column":0},"generated":{"line":3593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3593,"column":0},"generated":{"line":3594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3594,"column":0},"generated":{"line":3595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3595,"column":0},"generated":{"line":3596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3596,"column":0},"generated":{"line":3597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3597,"column":0},"generated":{"line":3598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3598,"column":0},"generated":{"line":3599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3599,"column":0},"generated":{"line":3600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3600,"column":0},"generated":{"line":3601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3601,"column":0},"generated":{"line":3602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3602,"column":0},"generated":{"line":3603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3603,"column":0},"generated":{"line":3604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3604,"column":0},"generated":{"line":3605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3605,"column":0},"generated":{"line":3606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3606,"column":0},"generated":{"line":3607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3607,"column":0},"generated":{"line":3608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3608,"column":0},"generated":{"line":3609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3609,"column":0},"generated":{"line":3610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3610,"column":0},"generated":{"line":3611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3611,"column":0},"generated":{"line":3612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3612,"column":0},"generated":{"line":3613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3613,"column":0},"generated":{"line":3614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3614,"column":0},"generated":{"line":3615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3615,"column":0},"generated":{"line":3616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3616,"column":0},"generated":{"line":3617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3617,"column":0},"generated":{"line":3618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3618,"column":0},"generated":{"line":3619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3619,"column":0},"generated":{"line":3620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3620,"column":0},"generated":{"line":3621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3621,"column":0},"generated":{"line":3622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3622,"column":0},"generated":{"line":3623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3623,"column":0},"generated":{"line":3624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3624,"column":0},"generated":{"line":3625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3625,"column":0},"generated":{"line":3626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3626,"column":0},"generated":{"line":3627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3627,"column":0},"generated":{"line":3628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3628,"column":0},"generated":{"line":3629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3629,"column":0},"generated":{"line":3630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3630,"column":0},"generated":{"line":3631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3631,"column":0},"generated":{"line":3632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3632,"column":0},"generated":{"line":3633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3633,"column":0},"generated":{"line":3634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3634,"column":0},"generated":{"line":3635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3635,"column":0},"generated":{"line":3636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3636,"column":0},"generated":{"line":3637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3637,"column":0},"generated":{"line":3638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3638,"column":0},"generated":{"line":3639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3639,"column":0},"generated":{"line":3640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3640,"column":0},"generated":{"line":3641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3641,"column":0},"generated":{"line":3642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3642,"column":0},"generated":{"line":3643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3643,"column":0},"generated":{"line":3644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3644,"column":0},"generated":{"line":3645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3645,"column":0},"generated":{"line":3646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3646,"column":0},"generated":{"line":3647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3647,"column":0},"generated":{"line":3648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3648,"column":0},"generated":{"line":3649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3649,"column":0},"generated":{"line":3650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3650,"column":0},"generated":{"line":3651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3651,"column":0},"generated":{"line":3652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3652,"column":0},"generated":{"line":3653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3653,"column":0},"generated":{"line":3654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3654,"column":0},"generated":{"line":3655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3655,"column":0},"generated":{"line":3656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3656,"column":0},"generated":{"line":3657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3657,"column":0},"generated":{"line":3658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3658,"column":0},"generated":{"line":3659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3659,"column":0},"generated":{"line":3660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3660,"column":0},"generated":{"line":3661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3661,"column":0},"generated":{"line":3662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3662,"column":0},"generated":{"line":3663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3663,"column":0},"generated":{"line":3664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3664,"column":0},"generated":{"line":3665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3665,"column":0},"generated":{"line":3666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3666,"column":0},"generated":{"line":3667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3667,"column":0},"generated":{"line":3668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3668,"column":0},"generated":{"line":3669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3669,"column":0},"generated":{"line":3670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3670,"column":0},"generated":{"line":3671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3671,"column":0},"generated":{"line":3672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3672,"column":0},"generated":{"line":3673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3673,"column":0},"generated":{"line":3674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3674,"column":0},"generated":{"line":3675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3675,"column":0},"generated":{"line":3676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3676,"column":0},"generated":{"line":3677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3677,"column":0},"generated":{"line":3678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3678,"column":0},"generated":{"line":3679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3679,"column":0},"generated":{"line":3680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3680,"column":0},"generated":{"line":3681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3681,"column":0},"generated":{"line":3682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3682,"column":0},"generated":{"line":3683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3683,"column":0},"generated":{"line":3684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3684,"column":0},"generated":{"line":3685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3685,"column":0},"generated":{"line":3686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3686,"column":0},"generated":{"line":3687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3687,"column":0},"generated":{"line":3688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3688,"column":0},"generated":{"line":3689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3689,"column":0},"generated":{"line":3690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3690,"column":0},"generated":{"line":3691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3691,"column":0},"generated":{"line":3692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3692,"column":0},"generated":{"line":3693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3693,"column":0},"generated":{"line":3694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3694,"column":0},"generated":{"line":3695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3695,"column":0},"generated":{"line":3696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3696,"column":0},"generated":{"line":3697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3697,"column":0},"generated":{"line":3698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3698,"column":0},"generated":{"line":3699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3699,"column":0},"generated":{"line":3700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3700,"column":0},"generated":{"line":3701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3701,"column":0},"generated":{"line":3702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3702,"column":0},"generated":{"line":3703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3703,"column":0},"generated":{"line":3704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3704,"column":0},"generated":{"line":3705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3705,"column":0},"generated":{"line":3706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3706,"column":0},"generated":{"line":3707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3707,"column":0},"generated":{"line":3708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3708,"column":0},"generated":{"line":3709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3709,"column":0},"generated":{"line":3710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3710,"column":0},"generated":{"line":3711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3711,"column":0},"generated":{"line":3712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3712,"column":0},"generated":{"line":3713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3713,"column":0},"generated":{"line":3714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3714,"column":0},"generated":{"line":3715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3715,"column":0},"generated":{"line":3716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3716,"column":0},"generated":{"line":3717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3717,"column":0},"generated":{"line":3718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3718,"column":0},"generated":{"line":3719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3719,"column":0},"generated":{"line":3720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3720,"column":0},"generated":{"line":3721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3721,"column":0},"generated":{"line":3722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3722,"column":0},"generated":{"line":3723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3723,"column":0},"generated":{"line":3724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3724,"column":0},"generated":{"line":3725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3725,"column":0},"generated":{"line":3726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3726,"column":0},"generated":{"line":3727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3727,"column":0},"generated":{"line":3728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3728,"column":0},"generated":{"line":3729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3729,"column":0},"generated":{"line":3730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3730,"column":0},"generated":{"line":3731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3731,"column":0},"generated":{"line":3732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3732,"column":0},"generated":{"line":3733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3733,"column":0},"generated":{"line":3734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3734,"column":0},"generated":{"line":3735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3735,"column":0},"generated":{"line":3736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3736,"column":0},"generated":{"line":3737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3737,"column":0},"generated":{"line":3738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3738,"column":0},"generated":{"line":3739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3739,"column":0},"generated":{"line":3740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3740,"column":0},"generated":{"line":3741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3741,"column":0},"generated":{"line":3742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3742,"column":0},"generated":{"line":3743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3743,"column":0},"generated":{"line":3744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3744,"column":0},"generated":{"line":3745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3745,"column":0},"generated":{"line":3746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3746,"column":0},"generated":{"line":3747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3747,"column":0},"generated":{"line":3748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3748,"column":0},"generated":{"line":3749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3749,"column":0},"generated":{"line":3750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3750,"column":0},"generated":{"line":3751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3751,"column":0},"generated":{"line":3752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3752,"column":0},"generated":{"line":3753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3753,"column":0},"generated":{"line":3754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3754,"column":0},"generated":{"line":3755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3755,"column":0},"generated":{"line":3756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3756,"column":0},"generated":{"line":3757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3757,"column":0},"generated":{"line":3758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3758,"column":0},"generated":{"line":3759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3759,"column":0},"generated":{"line":3760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3760,"column":0},"generated":{"line":3761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3761,"column":0},"generated":{"line":3762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3762,"column":0},"generated":{"line":3763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3763,"column":0},"generated":{"line":3764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3764,"column":0},"generated":{"line":3765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3765,"column":0},"generated":{"line":3766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3766,"column":0},"generated":{"line":3767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3767,"column":0},"generated":{"line":3768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3768,"column":0},"generated":{"line":3769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3769,"column":0},"generated":{"line":3770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3770,"column":0},"generated":{"line":3771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3771,"column":0},"generated":{"line":3772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3772,"column":0},"generated":{"line":3773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3773,"column":0},"generated":{"line":3774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3774,"column":0},"generated":{"line":3775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3775,"column":0},"generated":{"line":3776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3776,"column":0},"generated":{"line":3777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3777,"column":0},"generated":{"line":3778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3778,"column":0},"generated":{"line":3779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3779,"column":0},"generated":{"line":3780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3780,"column":0},"generated":{"line":3781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3781,"column":0},"generated":{"line":3782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3782,"column":0},"generated":{"line":3783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3783,"column":0},"generated":{"line":3784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3784,"column":0},"generated":{"line":3785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3785,"column":0},"generated":{"line":3786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3786,"column":0},"generated":{"line":3787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3787,"column":0},"generated":{"line":3788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3788,"column":0},"generated":{"line":3789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3789,"column":0},"generated":{"line":3790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3790,"column":0},"generated":{"line":3791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3791,"column":0},"generated":{"line":3792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3792,"column":0},"generated":{"line":3793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3793,"column":0},"generated":{"line":3794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3794,"column":0},"generated":{"line":3795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3795,"column":0},"generated":{"line":3796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3796,"column":0},"generated":{"line":3797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3797,"column":0},"generated":{"line":3798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3798,"column":0},"generated":{"line":3799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3799,"column":0},"generated":{"line":3800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3800,"column":0},"generated":{"line":3801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3801,"column":0},"generated":{"line":3802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3802,"column":0},"generated":{"line":3803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3803,"column":0},"generated":{"line":3804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3804,"column":0},"generated":{"line":3805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3805,"column":0},"generated":{"line":3806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3806,"column":0},"generated":{"line":3807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3807,"column":0},"generated":{"line":3808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3808,"column":0},"generated":{"line":3809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3809,"column":0},"generated":{"line":3810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3810,"column":0},"generated":{"line":3811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3811,"column":0},"generated":{"line":3812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3812,"column":0},"generated":{"line":3813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3813,"column":0},"generated":{"line":3814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3814,"column":0},"generated":{"line":3815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3815,"column":0},"generated":{"line":3816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3816,"column":0},"generated":{"line":3817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3817,"column":0},"generated":{"line":3818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3818,"column":0},"generated":{"line":3819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3819,"column":0},"generated":{"line":3820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3820,"column":0},"generated":{"line":3821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3821,"column":0},"generated":{"line":3822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3822,"column":0},"generated":{"line":3823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3823,"column":0},"generated":{"line":3824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3824,"column":0},"generated":{"line":3825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3825,"column":0},"generated":{"line":3826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3826,"column":0},"generated":{"line":3827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3827,"column":0},"generated":{"line":3828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3828,"column":0},"generated":{"line":3829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3829,"column":0},"generated":{"line":3830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3830,"column":0},"generated":{"line":3831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3831,"column":0},"generated":{"line":3832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3832,"column":0},"generated":{"line":3833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3833,"column":0},"generated":{"line":3834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3834,"column":0},"generated":{"line":3835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3835,"column":0},"generated":{"line":3836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3836,"column":0},"generated":{"line":3837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3837,"column":0},"generated":{"line":3838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3838,"column":0},"generated":{"line":3839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3839,"column":0},"generated":{"line":3840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3840,"column":0},"generated":{"line":3841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3841,"column":0},"generated":{"line":3842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3842,"column":0},"generated":{"line":3843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3843,"column":0},"generated":{"line":3844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3844,"column":0},"generated":{"line":3845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3845,"column":0},"generated":{"line":3846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3846,"column":0},"generated":{"line":3847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3847,"column":0},"generated":{"line":3848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3848,"column":0},"generated":{"line":3849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3849,"column":0},"generated":{"line":3850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3850,"column":0},"generated":{"line":3851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3851,"column":0},"generated":{"line":3852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3852,"column":0},"generated":{"line":3853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3853,"column":0},"generated":{"line":3854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3854,"column":0},"generated":{"line":3855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3855,"column":0},"generated":{"line":3856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3856,"column":0},"generated":{"line":3857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3857,"column":0},"generated":{"line":3858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3858,"column":0},"generated":{"line":3859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3859,"column":0},"generated":{"line":3860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3860,"column":0},"generated":{"line":3861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3861,"column":0},"generated":{"line":3862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3862,"column":0},"generated":{"line":3863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3863,"column":0},"generated":{"line":3864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3864,"column":0},"generated":{"line":3865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3865,"column":0},"generated":{"line":3866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3866,"column":0},"generated":{"line":3867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3867,"column":0},"generated":{"line":3868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3868,"column":0},"generated":{"line":3869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3869,"column":0},"generated":{"line":3870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3870,"column":0},"generated":{"line":3871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3871,"column":0},"generated":{"line":3872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3872,"column":0},"generated":{"line":3873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3873,"column":0},"generated":{"line":3874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3874,"column":0},"generated":{"line":3875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3875,"column":0},"generated":{"line":3876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3876,"column":0},"generated":{"line":3877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3877,"column":0},"generated":{"line":3878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3878,"column":0},"generated":{"line":3879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3879,"column":0},"generated":{"line":3880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3880,"column":0},"generated":{"line":3881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3881,"column":0},"generated":{"line":3882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3882,"column":0},"generated":{"line":3883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3883,"column":0},"generated":{"line":3884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3884,"column":0},"generated":{"line":3885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3885,"column":0},"generated":{"line":3886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3886,"column":0},"generated":{"line":3887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3887,"column":0},"generated":{"line":3888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3888,"column":0},"generated":{"line":3889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3889,"column":0},"generated":{"line":3890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3890,"column":0},"generated":{"line":3891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3891,"column":0},"generated":{"line":3892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3892,"column":0},"generated":{"line":3893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3893,"column":0},"generated":{"line":3894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3894,"column":0},"generated":{"line":3895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3895,"column":0},"generated":{"line":3896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3896,"column":0},"generated":{"line":3897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3897,"column":0},"generated":{"line":3898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3898,"column":0},"generated":{"line":3899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3899,"column":0},"generated":{"line":3900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3900,"column":0},"generated":{"line":3901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3901,"column":0},"generated":{"line":3902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3902,"column":0},"generated":{"line":3903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3903,"column":0},"generated":{"line":3904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3904,"column":0},"generated":{"line":3905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3905,"column":0},"generated":{"line":3906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3906,"column":0},"generated":{"line":3907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3907,"column":0},"generated":{"line":3908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3908,"column":0},"generated":{"line":3909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3909,"column":0},"generated":{"line":3910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3910,"column":0},"generated":{"line":3911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3911,"column":0},"generated":{"line":3912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3912,"column":0},"generated":{"line":3913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3913,"column":0},"generated":{"line":3914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3914,"column":0},"generated":{"line":3915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3915,"column":0},"generated":{"line":3916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3916,"column":0},"generated":{"line":3917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3917,"column":0},"generated":{"line":3918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3918,"column":0},"generated":{"line":3919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3919,"column":0},"generated":{"line":3920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3920,"column":0},"generated":{"line":3921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3921,"column":0},"generated":{"line":3922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3922,"column":0},"generated":{"line":3923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3923,"column":0},"generated":{"line":3924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3924,"column":0},"generated":{"line":3925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3925,"column":0},"generated":{"line":3926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3926,"column":0},"generated":{"line":3927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3927,"column":0},"generated":{"line":3928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3928,"column":0},"generated":{"line":3929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3929,"column":0},"generated":{"line":3930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3930,"column":0},"generated":{"line":3931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3931,"column":0},"generated":{"line":3932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3932,"column":0},"generated":{"line":3933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3933,"column":0},"generated":{"line":3934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3934,"column":0},"generated":{"line":3935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3935,"column":0},"generated":{"line":3936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3936,"column":0},"generated":{"line":3937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3937,"column":0},"generated":{"line":3938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3938,"column":0},"generated":{"line":3939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3939,"column":0},"generated":{"line":3940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3940,"column":0},"generated":{"line":3941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3941,"column":0},"generated":{"line":3942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3942,"column":0},"generated":{"line":3943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3943,"column":0},"generated":{"line":3944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3944,"column":0},"generated":{"line":3945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3945,"column":0},"generated":{"line":3946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3946,"column":0},"generated":{"line":3947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3947,"column":0},"generated":{"line":3948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3948,"column":0},"generated":{"line":3949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3949,"column":0},"generated":{"line":3950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3950,"column":0},"generated":{"line":3951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3951,"column":0},"generated":{"line":3952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3952,"column":0},"generated":{"line":3953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3953,"column":0},"generated":{"line":3954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3954,"column":0},"generated":{"line":3955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3955,"column":0},"generated":{"line":3956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3956,"column":0},"generated":{"line":3957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3957,"column":0},"generated":{"line":3958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3958,"column":0},"generated":{"line":3959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3959,"column":0},"generated":{"line":3960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3960,"column":0},"generated":{"line":3961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3961,"column":0},"generated":{"line":3962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3962,"column":0},"generated":{"line":3963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3963,"column":0},"generated":{"line":3964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3964,"column":0},"generated":{"line":3965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3965,"column":0},"generated":{"line":3966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3966,"column":0},"generated":{"line":3967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3967,"column":0},"generated":{"line":3968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3968,"column":0},"generated":{"line":3969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3969,"column":0},"generated":{"line":3970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3970,"column":0},"generated":{"line":3971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3971,"column":0},"generated":{"line":3972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3972,"column":0},"generated":{"line":3973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3973,"column":0},"generated":{"line":3974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3974,"column":0},"generated":{"line":3975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3975,"column":0},"generated":{"line":3976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3976,"column":0},"generated":{"line":3977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3977,"column":0},"generated":{"line":3978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3978,"column":0},"generated":{"line":3979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3979,"column":0},"generated":{"line":3980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3980,"column":0},"generated":{"line":3981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3981,"column":0},"generated":{"line":3982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3982,"column":0},"generated":{"line":3983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3983,"column":0},"generated":{"line":3984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3984,"column":0},"generated":{"line":3985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3985,"column":0},"generated":{"line":3986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3986,"column":0},"generated":{"line":3987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3987,"column":0},"generated":{"line":3988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3988,"column":0},"generated":{"line":3989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3989,"column":0},"generated":{"line":3990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3990,"column":0},"generated":{"line":3991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3991,"column":0},"generated":{"line":3992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3992,"column":0},"generated":{"line":3993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3993,"column":0},"generated":{"line":3994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3994,"column":0},"generated":{"line":3995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3995,"column":0},"generated":{"line":3996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3996,"column":0},"generated":{"line":3997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3997,"column":0},"generated":{"line":3998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3998,"column":0},"generated":{"line":3999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":3999,"column":0},"generated":{"line":4000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4000,"column":0},"generated":{"line":4001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4001,"column":0},"generated":{"line":4002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4002,"column":0},"generated":{"line":4003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4003,"column":0},"generated":{"line":4004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4004,"column":0},"generated":{"line":4005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4005,"column":0},"generated":{"line":4006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4006,"column":0},"generated":{"line":4007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4007,"column":0},"generated":{"line":4008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4008,"column":0},"generated":{"line":4009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4009,"column":0},"generated":{"line":4010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4010,"column":0},"generated":{"line":4011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4011,"column":0},"generated":{"line":4012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4012,"column":0},"generated":{"line":4013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4013,"column":0},"generated":{"line":4014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4014,"column":0},"generated":{"line":4015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4015,"column":0},"generated":{"line":4016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4016,"column":0},"generated":{"line":4017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4017,"column":0},"generated":{"line":4018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4018,"column":0},"generated":{"line":4019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4019,"column":0},"generated":{"line":4020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4020,"column":0},"generated":{"line":4021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4021,"column":0},"generated":{"line":4022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4022,"column":0},"generated":{"line":4023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4023,"column":0},"generated":{"line":4024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4024,"column":0},"generated":{"line":4025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4025,"column":0},"generated":{"line":4026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4026,"column":0},"generated":{"line":4027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4027,"column":0},"generated":{"line":4028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4028,"column":0},"generated":{"line":4029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4029,"column":0},"generated":{"line":4030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4030,"column":0},"generated":{"line":4031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4031,"column":0},"generated":{"line":4032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4032,"column":0},"generated":{"line":4033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4033,"column":0},"generated":{"line":4034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4034,"column":0},"generated":{"line":4035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4035,"column":0},"generated":{"line":4036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4036,"column":0},"generated":{"line":4037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4037,"column":0},"generated":{"line":4038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4038,"column":0},"generated":{"line":4039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4039,"column":0},"generated":{"line":4040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4040,"column":0},"generated":{"line":4041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4041,"column":0},"generated":{"line":4042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4042,"column":0},"generated":{"line":4043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4043,"column":0},"generated":{"line":4044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4044,"column":0},"generated":{"line":4045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4045,"column":0},"generated":{"line":4046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4046,"column":0},"generated":{"line":4047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4047,"column":0},"generated":{"line":4048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4048,"column":0},"generated":{"line":4049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4049,"column":0},"generated":{"line":4050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4050,"column":0},"generated":{"line":4051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4051,"column":0},"generated":{"line":4052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4052,"column":0},"generated":{"line":4053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4053,"column":0},"generated":{"line":4054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4054,"column":0},"generated":{"line":4055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4055,"column":0},"generated":{"line":4056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4056,"column":0},"generated":{"line":4057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4057,"column":0},"generated":{"line":4058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4058,"column":0},"generated":{"line":4059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4059,"column":0},"generated":{"line":4060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4060,"column":0},"generated":{"line":4061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4061,"column":0},"generated":{"line":4062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4062,"column":0},"generated":{"line":4063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4063,"column":0},"generated":{"line":4064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4064,"column":0},"generated":{"line":4065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4065,"column":0},"generated":{"line":4066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4066,"column":0},"generated":{"line":4067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4067,"column":0},"generated":{"line":4068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4068,"column":0},"generated":{"line":4069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4069,"column":0},"generated":{"line":4070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4070,"column":0},"generated":{"line":4071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4071,"column":0},"generated":{"line":4072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4072,"column":0},"generated":{"line":4073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4073,"column":0},"generated":{"line":4074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4074,"column":0},"generated":{"line":4075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4075,"column":0},"generated":{"line":4076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4076,"column":0},"generated":{"line":4077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4077,"column":0},"generated":{"line":4078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4078,"column":0},"generated":{"line":4079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4079,"column":0},"generated":{"line":4080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4080,"column":0},"generated":{"line":4081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4081,"column":0},"generated":{"line":4082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4082,"column":0},"generated":{"line":4083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4083,"column":0},"generated":{"line":4084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4084,"column":0},"generated":{"line":4085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4085,"column":0},"generated":{"line":4086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4086,"column":0},"generated":{"line":4087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4087,"column":0},"generated":{"line":4088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4088,"column":0},"generated":{"line":4089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4089,"column":0},"generated":{"line":4090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4090,"column":0},"generated":{"line":4091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4091,"column":0},"generated":{"line":4092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4092,"column":0},"generated":{"line":4093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4093,"column":0},"generated":{"line":4094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4094,"column":0},"generated":{"line":4095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4095,"column":0},"generated":{"line":4096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4096,"column":0},"generated":{"line":4097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4097,"column":0},"generated":{"line":4098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4098,"column":0},"generated":{"line":4099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4099,"column":0},"generated":{"line":4100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4100,"column":0},"generated":{"line":4101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4101,"column":0},"generated":{"line":4102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4102,"column":0},"generated":{"line":4103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4103,"column":0},"generated":{"line":4104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4104,"column":0},"generated":{"line":4105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4105,"column":0},"generated":{"line":4106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4106,"column":0},"generated":{"line":4107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4107,"column":0},"generated":{"line":4108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4108,"column":0},"generated":{"line":4109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4109,"column":0},"generated":{"line":4110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4110,"column":0},"generated":{"line":4111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4111,"column":0},"generated":{"line":4112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4112,"column":0},"generated":{"line":4113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4113,"column":0},"generated":{"line":4114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4114,"column":0},"generated":{"line":4115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4115,"column":0},"generated":{"line":4116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4116,"column":0},"generated":{"line":4117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4117,"column":0},"generated":{"line":4118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4118,"column":0},"generated":{"line":4119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4119,"column":0},"generated":{"line":4120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4120,"column":0},"generated":{"line":4121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4121,"column":0},"generated":{"line":4122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4122,"column":0},"generated":{"line":4123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4123,"column":0},"generated":{"line":4124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4124,"column":0},"generated":{"line":4125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4125,"column":0},"generated":{"line":4126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4126,"column":0},"generated":{"line":4127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4127,"column":0},"generated":{"line":4128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4128,"column":0},"generated":{"line":4129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4129,"column":0},"generated":{"line":4130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4130,"column":0},"generated":{"line":4131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4131,"column":0},"generated":{"line":4132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4132,"column":0},"generated":{"line":4133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4133,"column":0},"generated":{"line":4134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4134,"column":0},"generated":{"line":4135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4135,"column":0},"generated":{"line":4136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4136,"column":0},"generated":{"line":4137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4137,"column":0},"generated":{"line":4138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4138,"column":0},"generated":{"line":4139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4139,"column":0},"generated":{"line":4140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4140,"column":0},"generated":{"line":4141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4141,"column":0},"generated":{"line":4142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4142,"column":0},"generated":{"line":4143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4143,"column":0},"generated":{"line":4144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4144,"column":0},"generated":{"line":4145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4145,"column":0},"generated":{"line":4146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4146,"column":0},"generated":{"line":4147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4147,"column":0},"generated":{"line":4148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4148,"column":0},"generated":{"line":4149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4149,"column":0},"generated":{"line":4150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4150,"column":0},"generated":{"line":4151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4151,"column":0},"generated":{"line":4152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4152,"column":0},"generated":{"line":4153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4153,"column":0},"generated":{"line":4154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4154,"column":0},"generated":{"line":4155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4155,"column":0},"generated":{"line":4156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4156,"column":0},"generated":{"line":4157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4157,"column":0},"generated":{"line":4158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4158,"column":0},"generated":{"line":4159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4159,"column":0},"generated":{"line":4160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4160,"column":0},"generated":{"line":4161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4161,"column":0},"generated":{"line":4162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4162,"column":0},"generated":{"line":4163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4163,"column":0},"generated":{"line":4164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4164,"column":0},"generated":{"line":4165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4165,"column":0},"generated":{"line":4166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4166,"column":0},"generated":{"line":4167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4167,"column":0},"generated":{"line":4168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4168,"column":0},"generated":{"line":4169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4169,"column":0},"generated":{"line":4170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4170,"column":0},"generated":{"line":4171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4171,"column":0},"generated":{"line":4172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4172,"column":0},"generated":{"line":4173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4173,"column":0},"generated":{"line":4174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4174,"column":0},"generated":{"line":4175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4175,"column":0},"generated":{"line":4176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4176,"column":0},"generated":{"line":4177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4177,"column":0},"generated":{"line":4178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4178,"column":0},"generated":{"line":4179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4179,"column":0},"generated":{"line":4180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4180,"column":0},"generated":{"line":4181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4181,"column":0},"generated":{"line":4182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4182,"column":0},"generated":{"line":4183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4183,"column":0},"generated":{"line":4184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4184,"column":0},"generated":{"line":4185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4185,"column":0},"generated":{"line":4186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4186,"column":0},"generated":{"line":4187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4187,"column":0},"generated":{"line":4188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4188,"column":0},"generated":{"line":4189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4189,"column":0},"generated":{"line":4190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4190,"column":0},"generated":{"line":4191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4191,"column":0},"generated":{"line":4192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4192,"column":0},"generated":{"line":4193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4193,"column":0},"generated":{"line":4194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4194,"column":0},"generated":{"line":4195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4195,"column":0},"generated":{"line":4196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4196,"column":0},"generated":{"line":4197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4197,"column":0},"generated":{"line":4198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4198,"column":0},"generated":{"line":4199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4199,"column":0},"generated":{"line":4200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4200,"column":0},"generated":{"line":4201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4201,"column":0},"generated":{"line":4202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4202,"column":0},"generated":{"line":4203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4203,"column":0},"generated":{"line":4204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4204,"column":0},"generated":{"line":4205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4205,"column":0},"generated":{"line":4206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4206,"column":0},"generated":{"line":4207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4207,"column":0},"generated":{"line":4208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4208,"column":0},"generated":{"line":4209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4209,"column":0},"generated":{"line":4210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4210,"column":0},"generated":{"line":4211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4211,"column":0},"generated":{"line":4212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4212,"column":0},"generated":{"line":4213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4213,"column":0},"generated":{"line":4214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4214,"column":0},"generated":{"line":4215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4215,"column":0},"generated":{"line":4216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4216,"column":0},"generated":{"line":4217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4217,"column":0},"generated":{"line":4218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4218,"column":0},"generated":{"line":4219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4219,"column":0},"generated":{"line":4220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4220,"column":0},"generated":{"line":4221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4221,"column":0},"generated":{"line":4222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4222,"column":0},"generated":{"line":4223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4223,"column":0},"generated":{"line":4224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4224,"column":0},"generated":{"line":4225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4225,"column":0},"generated":{"line":4226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4226,"column":0},"generated":{"line":4227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4227,"column":0},"generated":{"line":4228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4228,"column":0},"generated":{"line":4229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4229,"column":0},"generated":{"line":4230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4230,"column":0},"generated":{"line":4231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4231,"column":0},"generated":{"line":4232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4232,"column":0},"generated":{"line":4233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4233,"column":0},"generated":{"line":4234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4234,"column":0},"generated":{"line":4235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4235,"column":0},"generated":{"line":4236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4236,"column":0},"generated":{"line":4237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4237,"column":0},"generated":{"line":4238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4238,"column":0},"generated":{"line":4239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4239,"column":0},"generated":{"line":4240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4240,"column":0},"generated":{"line":4241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4241,"column":0},"generated":{"line":4242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4242,"column":0},"generated":{"line":4243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4243,"column":0},"generated":{"line":4244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4244,"column":0},"generated":{"line":4245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4245,"column":0},"generated":{"line":4246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4246,"column":0},"generated":{"line":4247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4247,"column":0},"generated":{"line":4248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4248,"column":0},"generated":{"line":4249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4249,"column":0},"generated":{"line":4250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4250,"column":0},"generated":{"line":4251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4251,"column":0},"generated":{"line":4252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4252,"column":0},"generated":{"line":4253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4253,"column":0},"generated":{"line":4254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4254,"column":0},"generated":{"line":4255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4255,"column":0},"generated":{"line":4256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4256,"column":0},"generated":{"line":4257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4257,"column":0},"generated":{"line":4258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4258,"column":0},"generated":{"line":4259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4259,"column":0},"generated":{"line":4260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4260,"column":0},"generated":{"line":4261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4261,"column":0},"generated":{"line":4262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4262,"column":0},"generated":{"line":4263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4263,"column":0},"generated":{"line":4264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4264,"column":0},"generated":{"line":4265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4265,"column":0},"generated":{"line":4266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4266,"column":0},"generated":{"line":4267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4267,"column":0},"generated":{"line":4268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4268,"column":0},"generated":{"line":4269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4269,"column":0},"generated":{"line":4270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4270,"column":0},"generated":{"line":4271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4271,"column":0},"generated":{"line":4272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4272,"column":0},"generated":{"line":4273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4273,"column":0},"generated":{"line":4274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4274,"column":0},"generated":{"line":4275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4275,"column":0},"generated":{"line":4276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4276,"column":0},"generated":{"line":4277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4277,"column":0},"generated":{"line":4278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4278,"column":0},"generated":{"line":4279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4279,"column":0},"generated":{"line":4280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4280,"column":0},"generated":{"line":4281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4281,"column":0},"generated":{"line":4282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4282,"column":0},"generated":{"line":4283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4283,"column":0},"generated":{"line":4284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4284,"column":0},"generated":{"line":4285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4285,"column":0},"generated":{"line":4286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4286,"column":0},"generated":{"line":4287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4287,"column":0},"generated":{"line":4288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4288,"column":0},"generated":{"line":4289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4289,"column":0},"generated":{"line":4290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4290,"column":0},"generated":{"line":4291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4291,"column":0},"generated":{"line":4292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4292,"column":0},"generated":{"line":4293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4293,"column":0},"generated":{"line":4294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4294,"column":0},"generated":{"line":4295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4295,"column":0},"generated":{"line":4296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4296,"column":0},"generated":{"line":4297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4297,"column":0},"generated":{"line":4298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4298,"column":0},"generated":{"line":4299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4299,"column":0},"generated":{"line":4300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4300,"column":0},"generated":{"line":4301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4301,"column":0},"generated":{"line":4302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4302,"column":0},"generated":{"line":4303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4303,"column":0},"generated":{"line":4304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4304,"column":0},"generated":{"line":4305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4305,"column":0},"generated":{"line":4306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4306,"column":0},"generated":{"line":4307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4307,"column":0},"generated":{"line":4308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4308,"column":0},"generated":{"line":4309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4309,"column":0},"generated":{"line":4310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4310,"column":0},"generated":{"line":4311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4311,"column":0},"generated":{"line":4312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4312,"column":0},"generated":{"line":4313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4313,"column":0},"generated":{"line":4314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4314,"column":0},"generated":{"line":4315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4315,"column":0},"generated":{"line":4316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4316,"column":0},"generated":{"line":4317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4317,"column":0},"generated":{"line":4318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4318,"column":0},"generated":{"line":4319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4319,"column":0},"generated":{"line":4320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4320,"column":0},"generated":{"line":4321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4321,"column":0},"generated":{"line":4322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4322,"column":0},"generated":{"line":4323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4323,"column":0},"generated":{"line":4324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4324,"column":0},"generated":{"line":4325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4325,"column":0},"generated":{"line":4326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4326,"column":0},"generated":{"line":4327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4327,"column":0},"generated":{"line":4328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4328,"column":0},"generated":{"line":4329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4329,"column":0},"generated":{"line":4330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4330,"column":0},"generated":{"line":4331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4331,"column":0},"generated":{"line":4332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4332,"column":0},"generated":{"line":4333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4333,"column":0},"generated":{"line":4334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4334,"column":0},"generated":{"line":4335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4335,"column":0},"generated":{"line":4336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4336,"column":0},"generated":{"line":4337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4337,"column":0},"generated":{"line":4338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4338,"column":0},"generated":{"line":4339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4339,"column":0},"generated":{"line":4340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4340,"column":0},"generated":{"line":4341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4341,"column":0},"generated":{"line":4342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4342,"column":0},"generated":{"line":4343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4343,"column":0},"generated":{"line":4344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4344,"column":0},"generated":{"line":4345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4345,"column":0},"generated":{"line":4346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4346,"column":0},"generated":{"line":4347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4347,"column":0},"generated":{"line":4348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4348,"column":0},"generated":{"line":4349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4349,"column":0},"generated":{"line":4350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4350,"column":0},"generated":{"line":4351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4351,"column":0},"generated":{"line":4352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4352,"column":0},"generated":{"line":4353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4353,"column":0},"generated":{"line":4354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4354,"column":0},"generated":{"line":4355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4355,"column":0},"generated":{"line":4356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4356,"column":0},"generated":{"line":4357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4357,"column":0},"generated":{"line":4358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4358,"column":0},"generated":{"line":4359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4359,"column":0},"generated":{"line":4360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4360,"column":0},"generated":{"line":4361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4361,"column":0},"generated":{"line":4362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4362,"column":0},"generated":{"line":4363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4363,"column":0},"generated":{"line":4364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4364,"column":0},"generated":{"line":4365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4365,"column":0},"generated":{"line":4366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4366,"column":0},"generated":{"line":4367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4367,"column":0},"generated":{"line":4368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4368,"column":0},"generated":{"line":4369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4369,"column":0},"generated":{"line":4370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4370,"column":0},"generated":{"line":4371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4371,"column":0},"generated":{"line":4372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4372,"column":0},"generated":{"line":4373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4373,"column":0},"generated":{"line":4374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4374,"column":0},"generated":{"line":4375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4375,"column":0},"generated":{"line":4376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4376,"column":0},"generated":{"line":4377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4377,"column":0},"generated":{"line":4378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4378,"column":0},"generated":{"line":4379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4379,"column":0},"generated":{"line":4380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4380,"column":0},"generated":{"line":4381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4381,"column":0},"generated":{"line":4382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4382,"column":0},"generated":{"line":4383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4383,"column":0},"generated":{"line":4384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4384,"column":0},"generated":{"line":4385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4385,"column":0},"generated":{"line":4386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4386,"column":0},"generated":{"line":4387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4387,"column":0},"generated":{"line":4388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4388,"column":0},"generated":{"line":4389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4389,"column":0},"generated":{"line":4390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4390,"column":0},"generated":{"line":4391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4391,"column":0},"generated":{"line":4392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4392,"column":0},"generated":{"line":4393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4393,"column":0},"generated":{"line":4394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4394,"column":0},"generated":{"line":4395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4395,"column":0},"generated":{"line":4396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4396,"column":0},"generated":{"line":4397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4397,"column":0},"generated":{"line":4398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4398,"column":0},"generated":{"line":4399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4399,"column":0},"generated":{"line":4400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4400,"column":0},"generated":{"line":4401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4401,"column":0},"generated":{"line":4402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4402,"column":0},"generated":{"line":4403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4403,"column":0},"generated":{"line":4404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4404,"column":0},"generated":{"line":4405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4405,"column":0},"generated":{"line":4406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4406,"column":0},"generated":{"line":4407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4407,"column":0},"generated":{"line":4408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4408,"column":0},"generated":{"line":4409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4409,"column":0},"generated":{"line":4410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4410,"column":0},"generated":{"line":4411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4411,"column":0},"generated":{"line":4412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4412,"column":0},"generated":{"line":4413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4413,"column":0},"generated":{"line":4414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4414,"column":0},"generated":{"line":4415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4415,"column":0},"generated":{"line":4416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4416,"column":0},"generated":{"line":4417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4417,"column":0},"generated":{"line":4418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4418,"column":0},"generated":{"line":4419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4419,"column":0},"generated":{"line":4420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4420,"column":0},"generated":{"line":4421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4421,"column":0},"generated":{"line":4422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4422,"column":0},"generated":{"line":4423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4423,"column":0},"generated":{"line":4424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4424,"column":0},"generated":{"line":4425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4425,"column":0},"generated":{"line":4426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4426,"column":0},"generated":{"line":4427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4427,"column":0},"generated":{"line":4428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4428,"column":0},"generated":{"line":4429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4429,"column":0},"generated":{"line":4430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4430,"column":0},"generated":{"line":4431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4431,"column":0},"generated":{"line":4432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4432,"column":0},"generated":{"line":4433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4433,"column":0},"generated":{"line":4434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4434,"column":0},"generated":{"line":4435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4435,"column":0},"generated":{"line":4436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4436,"column":0},"generated":{"line":4437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4437,"column":0},"generated":{"line":4438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4438,"column":0},"generated":{"line":4439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4439,"column":0},"generated":{"line":4440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4440,"column":0},"generated":{"line":4441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4441,"column":0},"generated":{"line":4442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4442,"column":0},"generated":{"line":4443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4443,"column":0},"generated":{"line":4444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4444,"column":0},"generated":{"line":4445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4445,"column":0},"generated":{"line":4446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4446,"column":0},"generated":{"line":4447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4447,"column":0},"generated":{"line":4448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4448,"column":0},"generated":{"line":4449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4449,"column":0},"generated":{"line":4450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4450,"column":0},"generated":{"line":4451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4451,"column":0},"generated":{"line":4452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4452,"column":0},"generated":{"line":4453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4453,"column":0},"generated":{"line":4454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4454,"column":0},"generated":{"line":4455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4455,"column":0},"generated":{"line":4456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4456,"column":0},"generated":{"line":4457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4457,"column":0},"generated":{"line":4458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4458,"column":0},"generated":{"line":4459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4459,"column":0},"generated":{"line":4460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4460,"column":0},"generated":{"line":4461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4461,"column":0},"generated":{"line":4462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4462,"column":0},"generated":{"line":4463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4463,"column":0},"generated":{"line":4464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4464,"column":0},"generated":{"line":4465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4465,"column":0},"generated":{"line":4466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4466,"column":0},"generated":{"line":4467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4467,"column":0},"generated":{"line":4468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4468,"column":0},"generated":{"line":4469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4469,"column":0},"generated":{"line":4470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4470,"column":0},"generated":{"line":4471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4471,"column":0},"generated":{"line":4472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4472,"column":0},"generated":{"line":4473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4473,"column":0},"generated":{"line":4474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4474,"column":0},"generated":{"line":4475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4475,"column":0},"generated":{"line":4476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4476,"column":0},"generated":{"line":4477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4477,"column":0},"generated":{"line":4478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4478,"column":0},"generated":{"line":4479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4479,"column":0},"generated":{"line":4480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4480,"column":0},"generated":{"line":4481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4481,"column":0},"generated":{"line":4482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4482,"column":0},"generated":{"line":4483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4483,"column":0},"generated":{"line":4484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4484,"column":0},"generated":{"line":4485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4485,"column":0},"generated":{"line":4486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4486,"column":0},"generated":{"line":4487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4487,"column":0},"generated":{"line":4488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4488,"column":0},"generated":{"line":4489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4489,"column":0},"generated":{"line":4490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4490,"column":0},"generated":{"line":4491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4491,"column":0},"generated":{"line":4492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4492,"column":0},"generated":{"line":4493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4493,"column":0},"generated":{"line":4494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4494,"column":0},"generated":{"line":4495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4495,"column":0},"generated":{"line":4496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4496,"column":0},"generated":{"line":4497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4497,"column":0},"generated":{"line":4498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4498,"column":0},"generated":{"line":4499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4499,"column":0},"generated":{"line":4500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4500,"column":0},"generated":{"line":4501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4501,"column":0},"generated":{"line":4502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4502,"column":0},"generated":{"line":4503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4503,"column":0},"generated":{"line":4504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4504,"column":0},"generated":{"line":4505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4505,"column":0},"generated":{"line":4506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4506,"column":0},"generated":{"line":4507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4507,"column":0},"generated":{"line":4508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4508,"column":0},"generated":{"line":4509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4509,"column":0},"generated":{"line":4510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4510,"column":0},"generated":{"line":4511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4511,"column":0},"generated":{"line":4512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4512,"column":0},"generated":{"line":4513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4513,"column":0},"generated":{"line":4514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4514,"column":0},"generated":{"line":4515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4515,"column":0},"generated":{"line":4516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4516,"column":0},"generated":{"line":4517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4517,"column":0},"generated":{"line":4518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4518,"column":0},"generated":{"line":4519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4519,"column":0},"generated":{"line":4520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4520,"column":0},"generated":{"line":4521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4521,"column":0},"generated":{"line":4522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4522,"column":0},"generated":{"line":4523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4523,"column":0},"generated":{"line":4524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4524,"column":0},"generated":{"line":4525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4525,"column":0},"generated":{"line":4526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4526,"column":0},"generated":{"line":4527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4527,"column":0},"generated":{"line":4528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4528,"column":0},"generated":{"line":4529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4529,"column":0},"generated":{"line":4530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4530,"column":0},"generated":{"line":4531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4531,"column":0},"generated":{"line":4532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4532,"column":0},"generated":{"line":4533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4533,"column":0},"generated":{"line":4534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4534,"column":0},"generated":{"line":4535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4535,"column":0},"generated":{"line":4536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4536,"column":0},"generated":{"line":4537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4537,"column":0},"generated":{"line":4538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4538,"column":0},"generated":{"line":4539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4539,"column":0},"generated":{"line":4540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4540,"column":0},"generated":{"line":4541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4541,"column":0},"generated":{"line":4542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4542,"column":0},"generated":{"line":4543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4543,"column":0},"generated":{"line":4544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4544,"column":0},"generated":{"line":4545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4545,"column":0},"generated":{"line":4546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4546,"column":0},"generated":{"line":4547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4547,"column":0},"generated":{"line":4548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4548,"column":0},"generated":{"line":4549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4549,"column":0},"generated":{"line":4550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4550,"column":0},"generated":{"line":4551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4551,"column":0},"generated":{"line":4552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4552,"column":0},"generated":{"line":4553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4553,"column":0},"generated":{"line":4554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4554,"column":0},"generated":{"line":4555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4555,"column":0},"generated":{"line":4556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4556,"column":0},"generated":{"line":4557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4557,"column":0},"generated":{"line":4558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4558,"column":0},"generated":{"line":4559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4559,"column":0},"generated":{"line":4560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4560,"column":0},"generated":{"line":4561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4561,"column":0},"generated":{"line":4562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4562,"column":0},"generated":{"line":4563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4563,"column":0},"generated":{"line":4564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4564,"column":0},"generated":{"line":4565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4565,"column":0},"generated":{"line":4566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4566,"column":0},"generated":{"line":4567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4567,"column":0},"generated":{"line":4568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4568,"column":0},"generated":{"line":4569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4569,"column":0},"generated":{"line":4570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4570,"column":0},"generated":{"line":4571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4571,"column":0},"generated":{"line":4572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4572,"column":0},"generated":{"line":4573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4573,"column":0},"generated":{"line":4574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4574,"column":0},"generated":{"line":4575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4575,"column":0},"generated":{"line":4576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4576,"column":0},"generated":{"line":4577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4577,"column":0},"generated":{"line":4578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4578,"column":0},"generated":{"line":4579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4579,"column":0},"generated":{"line":4580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4580,"column":0},"generated":{"line":4581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4581,"column":0},"generated":{"line":4582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4582,"column":0},"generated":{"line":4583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4583,"column":0},"generated":{"line":4584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4584,"column":0},"generated":{"line":4585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4585,"column":0},"generated":{"line":4586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4586,"column":0},"generated":{"line":4587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4587,"column":0},"generated":{"line":4588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4588,"column":0},"generated":{"line":4589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4589,"column":0},"generated":{"line":4590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4590,"column":0},"generated":{"line":4591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4591,"column":0},"generated":{"line":4592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4592,"column":0},"generated":{"line":4593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4593,"column":0},"generated":{"line":4594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4594,"column":0},"generated":{"line":4595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4595,"column":0},"generated":{"line":4596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4596,"column":0},"generated":{"line":4597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4597,"column":0},"generated":{"line":4598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4598,"column":0},"generated":{"line":4599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4599,"column":0},"generated":{"line":4600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4600,"column":0},"generated":{"line":4601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4601,"column":0},"generated":{"line":4602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4602,"column":0},"generated":{"line":4603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4603,"column":0},"generated":{"line":4604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4604,"column":0},"generated":{"line":4605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4605,"column":0},"generated":{"line":4606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4606,"column":0},"generated":{"line":4607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4607,"column":0},"generated":{"line":4608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4608,"column":0},"generated":{"line":4609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4609,"column":0},"generated":{"line":4610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4610,"column":0},"generated":{"line":4611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4611,"column":0},"generated":{"line":4612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4612,"column":0},"generated":{"line":4613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4613,"column":0},"generated":{"line":4614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4614,"column":0},"generated":{"line":4615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4615,"column":0},"generated":{"line":4616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4616,"column":0},"generated":{"line":4617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4617,"column":0},"generated":{"line":4618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4618,"column":0},"generated":{"line":4619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4619,"column":0},"generated":{"line":4620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4620,"column":0},"generated":{"line":4621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4621,"column":0},"generated":{"line":4622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4622,"column":0},"generated":{"line":4623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4623,"column":0},"generated":{"line":4624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4624,"column":0},"generated":{"line":4625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4625,"column":0},"generated":{"line":4626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4626,"column":0},"generated":{"line":4627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4627,"column":0},"generated":{"line":4628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4628,"column":0},"generated":{"line":4629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4629,"column":0},"generated":{"line":4630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4630,"column":0},"generated":{"line":4631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4631,"column":0},"generated":{"line":4632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4632,"column":0},"generated":{"line":4633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4633,"column":0},"generated":{"line":4634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4634,"column":0},"generated":{"line":4635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4635,"column":0},"generated":{"line":4636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4636,"column":0},"generated":{"line":4637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4637,"column":0},"generated":{"line":4638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4638,"column":0},"generated":{"line":4639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4639,"column":0},"generated":{"line":4640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4640,"column":0},"generated":{"line":4641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4641,"column":0},"generated":{"line":4642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4642,"column":0},"generated":{"line":4643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4643,"column":0},"generated":{"line":4644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4644,"column":0},"generated":{"line":4645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4645,"column":0},"generated":{"line":4646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4646,"column":0},"generated":{"line":4647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4647,"column":0},"generated":{"line":4648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4648,"column":0},"generated":{"line":4649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4649,"column":0},"generated":{"line":4650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4650,"column":0},"generated":{"line":4651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4651,"column":0},"generated":{"line":4652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4652,"column":0},"generated":{"line":4653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4653,"column":0},"generated":{"line":4654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4654,"column":0},"generated":{"line":4655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4655,"column":0},"generated":{"line":4656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4656,"column":0},"generated":{"line":4657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4657,"column":0},"generated":{"line":4658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4658,"column":0},"generated":{"line":4659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4659,"column":0},"generated":{"line":4660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4660,"column":0},"generated":{"line":4661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4661,"column":0},"generated":{"line":4662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4662,"column":0},"generated":{"line":4663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4663,"column":0},"generated":{"line":4664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4664,"column":0},"generated":{"line":4665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4665,"column":0},"generated":{"line":4666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4666,"column":0},"generated":{"line":4667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4667,"column":0},"generated":{"line":4668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4668,"column":0},"generated":{"line":4669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4669,"column":0},"generated":{"line":4670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4670,"column":0},"generated":{"line":4671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4671,"column":0},"generated":{"line":4672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4672,"column":0},"generated":{"line":4673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4673,"column":0},"generated":{"line":4674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4674,"column":0},"generated":{"line":4675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4675,"column":0},"generated":{"line":4676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4676,"column":0},"generated":{"line":4677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4677,"column":0},"generated":{"line":4678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4678,"column":0},"generated":{"line":4679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4679,"column":0},"generated":{"line":4680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4680,"column":0},"generated":{"line":4681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4681,"column":0},"generated":{"line":4682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4682,"column":0},"generated":{"line":4683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4683,"column":0},"generated":{"line":4684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4684,"column":0},"generated":{"line":4685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4685,"column":0},"generated":{"line":4686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4686,"column":0},"generated":{"line":4687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4687,"column":0},"generated":{"line":4688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4688,"column":0},"generated":{"line":4689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4689,"column":0},"generated":{"line":4690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4690,"column":0},"generated":{"line":4691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4691,"column":0},"generated":{"line":4692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4692,"column":0},"generated":{"line":4693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4693,"column":0},"generated":{"line":4694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4694,"column":0},"generated":{"line":4695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4695,"column":0},"generated":{"line":4696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4696,"column":0},"generated":{"line":4697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4697,"column":0},"generated":{"line":4698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4698,"column":0},"generated":{"line":4699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4699,"column":0},"generated":{"line":4700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4700,"column":0},"generated":{"line":4701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4701,"column":0},"generated":{"line":4702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4702,"column":0},"generated":{"line":4703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4703,"column":0},"generated":{"line":4704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4704,"column":0},"generated":{"line":4705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4705,"column":0},"generated":{"line":4706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4706,"column":0},"generated":{"line":4707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4707,"column":0},"generated":{"line":4708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4708,"column":0},"generated":{"line":4709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4709,"column":0},"generated":{"line":4710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4710,"column":0},"generated":{"line":4711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4711,"column":0},"generated":{"line":4712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4712,"column":0},"generated":{"line":4713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4713,"column":0},"generated":{"line":4714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4714,"column":0},"generated":{"line":4715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4715,"column":0},"generated":{"line":4716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4716,"column":0},"generated":{"line":4717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4717,"column":0},"generated":{"line":4718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4718,"column":0},"generated":{"line":4719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4719,"column":0},"generated":{"line":4720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4720,"column":0},"generated":{"line":4721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4721,"column":0},"generated":{"line":4722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4722,"column":0},"generated":{"line":4723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4723,"column":0},"generated":{"line":4724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4724,"column":0},"generated":{"line":4725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4725,"column":0},"generated":{"line":4726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4726,"column":0},"generated":{"line":4727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4727,"column":0},"generated":{"line":4728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4728,"column":0},"generated":{"line":4729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4729,"column":0},"generated":{"line":4730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4730,"column":0},"generated":{"line":4731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4731,"column":0},"generated":{"line":4732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4732,"column":0},"generated":{"line":4733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4733,"column":0},"generated":{"line":4734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4734,"column":0},"generated":{"line":4735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4735,"column":0},"generated":{"line":4736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4736,"column":0},"generated":{"line":4737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4737,"column":0},"generated":{"line":4738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4738,"column":0},"generated":{"line":4739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4739,"column":0},"generated":{"line":4740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4740,"column":0},"generated":{"line":4741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4741,"column":0},"generated":{"line":4742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4742,"column":0},"generated":{"line":4743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4743,"column":0},"generated":{"line":4744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4744,"column":0},"generated":{"line":4745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4745,"column":0},"generated":{"line":4746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4746,"column":0},"generated":{"line":4747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4747,"column":0},"generated":{"line":4748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4748,"column":0},"generated":{"line":4749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4749,"column":0},"generated":{"line":4750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4750,"column":0},"generated":{"line":4751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4751,"column":0},"generated":{"line":4752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4752,"column":0},"generated":{"line":4753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4753,"column":0},"generated":{"line":4754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4754,"column":0},"generated":{"line":4755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4755,"column":0},"generated":{"line":4756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4756,"column":0},"generated":{"line":4757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4757,"column":0},"generated":{"line":4758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4758,"column":0},"generated":{"line":4759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4759,"column":0},"generated":{"line":4760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4760,"column":0},"generated":{"line":4761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4761,"column":0},"generated":{"line":4762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4762,"column":0},"generated":{"line":4763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4763,"column":0},"generated":{"line":4764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4764,"column":0},"generated":{"line":4765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4765,"column":0},"generated":{"line":4766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4766,"column":0},"generated":{"line":4767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4767,"column":0},"generated":{"line":4768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4768,"column":0},"generated":{"line":4769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4769,"column":0},"generated":{"line":4770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4770,"column":0},"generated":{"line":4771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4771,"column":0},"generated":{"line":4772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4772,"column":0},"generated":{"line":4773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4773,"column":0},"generated":{"line":4774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4774,"column":0},"generated":{"line":4775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4775,"column":0},"generated":{"line":4776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4776,"column":0},"generated":{"line":4777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4777,"column":0},"generated":{"line":4778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4778,"column":0},"generated":{"line":4779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4779,"column":0},"generated":{"line":4780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4780,"column":0},"generated":{"line":4781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4781,"column":0},"generated":{"line":4782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4782,"column":0},"generated":{"line":4783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4783,"column":0},"generated":{"line":4784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4784,"column":0},"generated":{"line":4785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4785,"column":0},"generated":{"line":4786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4786,"column":0},"generated":{"line":4787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4787,"column":0},"generated":{"line":4788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4788,"column":0},"generated":{"line":4789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4789,"column":0},"generated":{"line":4790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4790,"column":0},"generated":{"line":4791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4791,"column":0},"generated":{"line":4792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4792,"column":0},"generated":{"line":4793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4793,"column":0},"generated":{"line":4794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4794,"column":0},"generated":{"line":4795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4795,"column":0},"generated":{"line":4796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4796,"column":0},"generated":{"line":4797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4797,"column":0},"generated":{"line":4798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4798,"column":0},"generated":{"line":4799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4799,"column":0},"generated":{"line":4800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4800,"column":0},"generated":{"line":4801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4801,"column":0},"generated":{"line":4802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4802,"column":0},"generated":{"line":4803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4803,"column":0},"generated":{"line":4804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4804,"column":0},"generated":{"line":4805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4805,"column":0},"generated":{"line":4806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4806,"column":0},"generated":{"line":4807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4807,"column":0},"generated":{"line":4808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4808,"column":0},"generated":{"line":4809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4809,"column":0},"generated":{"line":4810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4810,"column":0},"generated":{"line":4811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4811,"column":0},"generated":{"line":4812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4812,"column":0},"generated":{"line":4813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4813,"column":0},"generated":{"line":4814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4814,"column":0},"generated":{"line":4815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4815,"column":0},"generated":{"line":4816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4816,"column":0},"generated":{"line":4817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4817,"column":0},"generated":{"line":4818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4818,"column":0},"generated":{"line":4819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4819,"column":0},"generated":{"line":4820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4820,"column":0},"generated":{"line":4821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4821,"column":0},"generated":{"line":4822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4822,"column":0},"generated":{"line":4823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4823,"column":0},"generated":{"line":4824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4824,"column":0},"generated":{"line":4825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4825,"column":0},"generated":{"line":4826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4826,"column":0},"generated":{"line":4827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4827,"column":0},"generated":{"line":4828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4828,"column":0},"generated":{"line":4829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4829,"column":0},"generated":{"line":4830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4830,"column":0},"generated":{"line":4831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4831,"column":0},"generated":{"line":4832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4832,"column":0},"generated":{"line":4833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4833,"column":0},"generated":{"line":4834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4834,"column":0},"generated":{"line":4835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4835,"column":0},"generated":{"line":4836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4836,"column":0},"generated":{"line":4837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4837,"column":0},"generated":{"line":4838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4838,"column":0},"generated":{"line":4839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4839,"column":0},"generated":{"line":4840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4840,"column":0},"generated":{"line":4841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4841,"column":0},"generated":{"line":4842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4842,"column":0},"generated":{"line":4843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4843,"column":0},"generated":{"line":4844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4844,"column":0},"generated":{"line":4845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4845,"column":0},"generated":{"line":4846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4846,"column":0},"generated":{"line":4847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4847,"column":0},"generated":{"line":4848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4848,"column":0},"generated":{"line":4849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4849,"column":0},"generated":{"line":4850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4850,"column":0},"generated":{"line":4851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4851,"column":0},"generated":{"line":4852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4852,"column":0},"generated":{"line":4853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4853,"column":0},"generated":{"line":4854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4854,"column":0},"generated":{"line":4855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4855,"column":0},"generated":{"line":4856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4856,"column":0},"generated":{"line":4857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4857,"column":0},"generated":{"line":4858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4858,"column":0},"generated":{"line":4859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4859,"column":0},"generated":{"line":4860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4860,"column":0},"generated":{"line":4861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4861,"column":0},"generated":{"line":4862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4862,"column":0},"generated":{"line":4863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4863,"column":0},"generated":{"line":4864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4864,"column":0},"generated":{"line":4865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4865,"column":0},"generated":{"line":4866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4866,"column":0},"generated":{"line":4867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4867,"column":0},"generated":{"line":4868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4868,"column":0},"generated":{"line":4869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4869,"column":0},"generated":{"line":4870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4870,"column":0},"generated":{"line":4871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4871,"column":0},"generated":{"line":4872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4872,"column":0},"generated":{"line":4873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4873,"column":0},"generated":{"line":4874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4874,"column":0},"generated":{"line":4875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4875,"column":0},"generated":{"line":4876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4876,"column":0},"generated":{"line":4877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4877,"column":0},"generated":{"line":4878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4878,"column":0},"generated":{"line":4879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4879,"column":0},"generated":{"line":4880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4880,"column":0},"generated":{"line":4881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4881,"column":0},"generated":{"line":4882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4882,"column":0},"generated":{"line":4883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4883,"column":0},"generated":{"line":4884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4884,"column":0},"generated":{"line":4885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4885,"column":0},"generated":{"line":4886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4886,"column":0},"generated":{"line":4887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4887,"column":0},"generated":{"line":4888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4888,"column":0},"generated":{"line":4889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4889,"column":0},"generated":{"line":4890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4890,"column":0},"generated":{"line":4891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4891,"column":0},"generated":{"line":4892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4892,"column":0},"generated":{"line":4893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4893,"column":0},"generated":{"line":4894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4894,"column":0},"generated":{"line":4895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4895,"column":0},"generated":{"line":4896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4896,"column":0},"generated":{"line":4897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4897,"column":0},"generated":{"line":4898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4898,"column":0},"generated":{"line":4899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4899,"column":0},"generated":{"line":4900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4900,"column":0},"generated":{"line":4901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4901,"column":0},"generated":{"line":4902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4902,"column":0},"generated":{"line":4903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4903,"column":0},"generated":{"line":4904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4904,"column":0},"generated":{"line":4905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4905,"column":0},"generated":{"line":4906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4906,"column":0},"generated":{"line":4907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4907,"column":0},"generated":{"line":4908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4908,"column":0},"generated":{"line":4909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4909,"column":0},"generated":{"line":4910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4910,"column":0},"generated":{"line":4911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4911,"column":0},"generated":{"line":4912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4912,"column":0},"generated":{"line":4913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4913,"column":0},"generated":{"line":4914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4914,"column":0},"generated":{"line":4915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4915,"column":0},"generated":{"line":4916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4916,"column":0},"generated":{"line":4917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4917,"column":0},"generated":{"line":4918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4918,"column":0},"generated":{"line":4919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4919,"column":0},"generated":{"line":4920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4920,"column":0},"generated":{"line":4921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4921,"column":0},"generated":{"line":4922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4922,"column":0},"generated":{"line":4923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4923,"column":0},"generated":{"line":4924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4924,"column":0},"generated":{"line":4925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4925,"column":0},"generated":{"line":4926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4926,"column":0},"generated":{"line":4927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4927,"column":0},"generated":{"line":4928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4928,"column":0},"generated":{"line":4929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4929,"column":0},"generated":{"line":4930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4930,"column":0},"generated":{"line":4931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4931,"column":0},"generated":{"line":4932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4932,"column":0},"generated":{"line":4933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4933,"column":0},"generated":{"line":4934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4934,"column":0},"generated":{"line":4935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4935,"column":0},"generated":{"line":4936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4936,"column":0},"generated":{"line":4937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4937,"column":0},"generated":{"line":4938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4938,"column":0},"generated":{"line":4939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4939,"column":0},"generated":{"line":4940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4940,"column":0},"generated":{"line":4941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4941,"column":0},"generated":{"line":4942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4942,"column":0},"generated":{"line":4943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4943,"column":0},"generated":{"line":4944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4944,"column":0},"generated":{"line":4945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4945,"column":0},"generated":{"line":4946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4946,"column":0},"generated":{"line":4947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4947,"column":0},"generated":{"line":4948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4948,"column":0},"generated":{"line":4949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4949,"column":0},"generated":{"line":4950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4950,"column":0},"generated":{"line":4951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4951,"column":0},"generated":{"line":4952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4952,"column":0},"generated":{"line":4953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4953,"column":0},"generated":{"line":4954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4954,"column":0},"generated":{"line":4955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4955,"column":0},"generated":{"line":4956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4956,"column":0},"generated":{"line":4957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4957,"column":0},"generated":{"line":4958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4958,"column":0},"generated":{"line":4959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4959,"column":0},"generated":{"line":4960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4960,"column":0},"generated":{"line":4961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4961,"column":0},"generated":{"line":4962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4962,"column":0},"generated":{"line":4963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4963,"column":0},"generated":{"line":4964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4964,"column":0},"generated":{"line":4965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4965,"column":0},"generated":{"line":4966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4966,"column":0},"generated":{"line":4967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4967,"column":0},"generated":{"line":4968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4968,"column":0},"generated":{"line":4969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4969,"column":0},"generated":{"line":4970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4970,"column":0},"generated":{"line":4971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4971,"column":0},"generated":{"line":4972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4972,"column":0},"generated":{"line":4973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4973,"column":0},"generated":{"line":4974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4974,"column":0},"generated":{"line":4975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4975,"column":0},"generated":{"line":4976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4976,"column":0},"generated":{"line":4977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4977,"column":0},"generated":{"line":4978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4978,"column":0},"generated":{"line":4979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4979,"column":0},"generated":{"line":4980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4980,"column":0},"generated":{"line":4981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4981,"column":0},"generated":{"line":4982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4982,"column":0},"generated":{"line":4983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4983,"column":0},"generated":{"line":4984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4984,"column":0},"generated":{"line":4985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4985,"column":0},"generated":{"line":4986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4986,"column":0},"generated":{"line":4987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4987,"column":0},"generated":{"line":4988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4988,"column":0},"generated":{"line":4989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4989,"column":0},"generated":{"line":4990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4990,"column":0},"generated":{"line":4991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4991,"column":0},"generated":{"line":4992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4992,"column":0},"generated":{"line":4993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4993,"column":0},"generated":{"line":4994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4994,"column":0},"generated":{"line":4995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4995,"column":0},"generated":{"line":4996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4996,"column":0},"generated":{"line":4997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4997,"column":0},"generated":{"line":4998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4998,"column":0},"generated":{"line":4999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":4999,"column":0},"generated":{"line":5000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5000,"column":0},"generated":{"line":5001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5001,"column":0},"generated":{"line":5002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5002,"column":0},"generated":{"line":5003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5003,"column":0},"generated":{"line":5004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5004,"column":0},"generated":{"line":5005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5005,"column":0},"generated":{"line":5006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5006,"column":0},"generated":{"line":5007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5007,"column":0},"generated":{"line":5008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5008,"column":0},"generated":{"line":5009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5009,"column":0},"generated":{"line":5010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5010,"column":0},"generated":{"line":5011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5011,"column":0},"generated":{"line":5012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5012,"column":0},"generated":{"line":5013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5013,"column":0},"generated":{"line":5014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5014,"column":0},"generated":{"line":5015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5015,"column":0},"generated":{"line":5016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5016,"column":0},"generated":{"line":5017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5017,"column":0},"generated":{"line":5018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5018,"column":0},"generated":{"line":5019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5019,"column":0},"generated":{"line":5020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5020,"column":0},"generated":{"line":5021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5021,"column":0},"generated":{"line":5022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5022,"column":0},"generated":{"line":5023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5023,"column":0},"generated":{"line":5024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5024,"column":0},"generated":{"line":5025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5025,"column":0},"generated":{"line":5026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5026,"column":0},"generated":{"line":5027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5027,"column":0},"generated":{"line":5028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5028,"column":0},"generated":{"line":5029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5029,"column":0},"generated":{"line":5030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5030,"column":0},"generated":{"line":5031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5031,"column":0},"generated":{"line":5032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5032,"column":0},"generated":{"line":5033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5033,"column":0},"generated":{"line":5034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5034,"column":0},"generated":{"line":5035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5035,"column":0},"generated":{"line":5036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5036,"column":0},"generated":{"line":5037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5037,"column":0},"generated":{"line":5038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5038,"column":0},"generated":{"line":5039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5039,"column":0},"generated":{"line":5040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5040,"column":0},"generated":{"line":5041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5041,"column":0},"generated":{"line":5042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5042,"column":0},"generated":{"line":5043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5043,"column":0},"generated":{"line":5044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5044,"column":0},"generated":{"line":5045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5045,"column":0},"generated":{"line":5046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5046,"column":0},"generated":{"line":5047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5047,"column":0},"generated":{"line":5048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5048,"column":0},"generated":{"line":5049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5049,"column":0},"generated":{"line":5050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5050,"column":0},"generated":{"line":5051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5051,"column":0},"generated":{"line":5052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5052,"column":0},"generated":{"line":5053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5053,"column":0},"generated":{"line":5054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5054,"column":0},"generated":{"line":5055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5055,"column":0},"generated":{"line":5056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5056,"column":0},"generated":{"line":5057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5057,"column":0},"generated":{"line":5058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5058,"column":0},"generated":{"line":5059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5059,"column":0},"generated":{"line":5060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5060,"column":0},"generated":{"line":5061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5061,"column":0},"generated":{"line":5062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5062,"column":0},"generated":{"line":5063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5063,"column":0},"generated":{"line":5064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5064,"column":0},"generated":{"line":5065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5065,"column":0},"generated":{"line":5066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5066,"column":0},"generated":{"line":5067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5067,"column":0},"generated":{"line":5068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5068,"column":0},"generated":{"line":5069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5069,"column":0},"generated":{"line":5070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5070,"column":0},"generated":{"line":5071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5071,"column":0},"generated":{"line":5072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5072,"column":0},"generated":{"line":5073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5073,"column":0},"generated":{"line":5074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5074,"column":0},"generated":{"line":5075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5075,"column":0},"generated":{"line":5076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5076,"column":0},"generated":{"line":5077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5077,"column":0},"generated":{"line":5078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5078,"column":0},"generated":{"line":5079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5079,"column":0},"generated":{"line":5080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5080,"column":0},"generated":{"line":5081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5081,"column":0},"generated":{"line":5082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5082,"column":0},"generated":{"line":5083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5083,"column":0},"generated":{"line":5084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5084,"column":0},"generated":{"line":5085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5085,"column":0},"generated":{"line":5086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5086,"column":0},"generated":{"line":5087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5087,"column":0},"generated":{"line":5088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5088,"column":0},"generated":{"line":5089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5089,"column":0},"generated":{"line":5090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5090,"column":0},"generated":{"line":5091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5091,"column":0},"generated":{"line":5092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5092,"column":0},"generated":{"line":5093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5093,"column":0},"generated":{"line":5094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5094,"column":0},"generated":{"line":5095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5095,"column":0},"generated":{"line":5096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5096,"column":0},"generated":{"line":5097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5097,"column":0},"generated":{"line":5098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5098,"column":0},"generated":{"line":5099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5099,"column":0},"generated":{"line":5100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5100,"column":0},"generated":{"line":5101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5101,"column":0},"generated":{"line":5102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5102,"column":0},"generated":{"line":5103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5103,"column":0},"generated":{"line":5104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5104,"column":0},"generated":{"line":5105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5105,"column":0},"generated":{"line":5106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5106,"column":0},"generated":{"line":5107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5107,"column":0},"generated":{"line":5108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5108,"column":0},"generated":{"line":5109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5109,"column":0},"generated":{"line":5110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5110,"column":0},"generated":{"line":5111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5111,"column":0},"generated":{"line":5112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5112,"column":0},"generated":{"line":5113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5113,"column":0},"generated":{"line":5114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5114,"column":0},"generated":{"line":5115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5115,"column":0},"generated":{"line":5116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5116,"column":0},"generated":{"line":5117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5117,"column":0},"generated":{"line":5118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5118,"column":0},"generated":{"line":5119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5119,"column":0},"generated":{"line":5120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5120,"column":0},"generated":{"line":5121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5121,"column":0},"generated":{"line":5122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5122,"column":0},"generated":{"line":5123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5123,"column":0},"generated":{"line":5124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5124,"column":0},"generated":{"line":5125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5125,"column":0},"generated":{"line":5126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5126,"column":0},"generated":{"line":5127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5127,"column":0},"generated":{"line":5128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5128,"column":0},"generated":{"line":5129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5129,"column":0},"generated":{"line":5130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5130,"column":0},"generated":{"line":5131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5131,"column":0},"generated":{"line":5132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5132,"column":0},"generated":{"line":5133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5133,"column":0},"generated":{"line":5134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5134,"column":0},"generated":{"line":5135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5135,"column":0},"generated":{"line":5136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5136,"column":0},"generated":{"line":5137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5137,"column":0},"generated":{"line":5138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5138,"column":0},"generated":{"line":5139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5139,"column":0},"generated":{"line":5140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5140,"column":0},"generated":{"line":5141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5141,"column":0},"generated":{"line":5142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5142,"column":0},"generated":{"line":5143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5143,"column":0},"generated":{"line":5144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5144,"column":0},"generated":{"line":5145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5145,"column":0},"generated":{"line":5146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5146,"column":0},"generated":{"line":5147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5147,"column":0},"generated":{"line":5148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5148,"column":0},"generated":{"line":5149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5149,"column":0},"generated":{"line":5150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5150,"column":0},"generated":{"line":5151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5151,"column":0},"generated":{"line":5152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5152,"column":0},"generated":{"line":5153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5153,"column":0},"generated":{"line":5154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5154,"column":0},"generated":{"line":5155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5155,"column":0},"generated":{"line":5156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5156,"column":0},"generated":{"line":5157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5157,"column":0},"generated":{"line":5158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5158,"column":0},"generated":{"line":5159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5159,"column":0},"generated":{"line":5160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5160,"column":0},"generated":{"line":5161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5161,"column":0},"generated":{"line":5162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5162,"column":0},"generated":{"line":5163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5163,"column":0},"generated":{"line":5164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5164,"column":0},"generated":{"line":5165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5165,"column":0},"generated":{"line":5166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5166,"column":0},"generated":{"line":5167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5167,"column":0},"generated":{"line":5168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5168,"column":0},"generated":{"line":5169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5169,"column":0},"generated":{"line":5170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5170,"column":0},"generated":{"line":5171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5171,"column":0},"generated":{"line":5172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5172,"column":0},"generated":{"line":5173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5173,"column":0},"generated":{"line":5174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5174,"column":0},"generated":{"line":5175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5175,"column":0},"generated":{"line":5176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5176,"column":0},"generated":{"line":5177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5177,"column":0},"generated":{"line":5178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5178,"column":0},"generated":{"line":5179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5179,"column":0},"generated":{"line":5180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5180,"column":0},"generated":{"line":5181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5181,"column":0},"generated":{"line":5182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5182,"column":0},"generated":{"line":5183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5183,"column":0},"generated":{"line":5184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5184,"column":0},"generated":{"line":5185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5185,"column":0},"generated":{"line":5186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5186,"column":0},"generated":{"line":5187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5187,"column":0},"generated":{"line":5188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5188,"column":0},"generated":{"line":5189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5189,"column":0},"generated":{"line":5190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5190,"column":0},"generated":{"line":5191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5191,"column":0},"generated":{"line":5192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5192,"column":0},"generated":{"line":5193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5193,"column":0},"generated":{"line":5194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5194,"column":0},"generated":{"line":5195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5195,"column":0},"generated":{"line":5196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5196,"column":0},"generated":{"line":5197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5197,"column":0},"generated":{"line":5198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5198,"column":0},"generated":{"line":5199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5199,"column":0},"generated":{"line":5200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5200,"column":0},"generated":{"line":5201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5201,"column":0},"generated":{"line":5202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5202,"column":0},"generated":{"line":5203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5203,"column":0},"generated":{"line":5204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5204,"column":0},"generated":{"line":5205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5205,"column":0},"generated":{"line":5206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5206,"column":0},"generated":{"line":5207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5207,"column":0},"generated":{"line":5208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5208,"column":0},"generated":{"line":5209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5209,"column":0},"generated":{"line":5210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5210,"column":0},"generated":{"line":5211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5211,"column":0},"generated":{"line":5212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5212,"column":0},"generated":{"line":5213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5213,"column":0},"generated":{"line":5214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5214,"column":0},"generated":{"line":5215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5215,"column":0},"generated":{"line":5216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5216,"column":0},"generated":{"line":5217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5217,"column":0},"generated":{"line":5218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5218,"column":0},"generated":{"line":5219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5219,"column":0},"generated":{"line":5220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5220,"column":0},"generated":{"line":5221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5221,"column":0},"generated":{"line":5222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5222,"column":0},"generated":{"line":5223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5223,"column":0},"generated":{"line":5224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5224,"column":0},"generated":{"line":5225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5225,"column":0},"generated":{"line":5226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5226,"column":0},"generated":{"line":5227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5227,"column":0},"generated":{"line":5228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5228,"column":0},"generated":{"line":5229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5229,"column":0},"generated":{"line":5230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5230,"column":0},"generated":{"line":5231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5231,"column":0},"generated":{"line":5232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5232,"column":0},"generated":{"line":5233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5233,"column":0},"generated":{"line":5234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5234,"column":0},"generated":{"line":5235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5235,"column":0},"generated":{"line":5236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5236,"column":0},"generated":{"line":5237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5237,"column":0},"generated":{"line":5238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5238,"column":0},"generated":{"line":5239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5239,"column":0},"generated":{"line":5240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5240,"column":0},"generated":{"line":5241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5241,"column":0},"generated":{"line":5242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5242,"column":0},"generated":{"line":5243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5243,"column":0},"generated":{"line":5244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5244,"column":0},"generated":{"line":5245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5245,"column":0},"generated":{"line":5246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5246,"column":0},"generated":{"line":5247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5247,"column":0},"generated":{"line":5248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5248,"column":0},"generated":{"line":5249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5249,"column":0},"generated":{"line":5250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5250,"column":0},"generated":{"line":5251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5251,"column":0},"generated":{"line":5252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5252,"column":0},"generated":{"line":5253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5253,"column":0},"generated":{"line":5254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5254,"column":0},"generated":{"line":5255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5255,"column":0},"generated":{"line":5256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5256,"column":0},"generated":{"line":5257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5257,"column":0},"generated":{"line":5258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5258,"column":0},"generated":{"line":5259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5259,"column":0},"generated":{"line":5260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5260,"column":0},"generated":{"line":5261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5261,"column":0},"generated":{"line":5262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5262,"column":0},"generated":{"line":5263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5263,"column":0},"generated":{"line":5264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5264,"column":0},"generated":{"line":5265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5265,"column":0},"generated":{"line":5266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5266,"column":0},"generated":{"line":5267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5267,"column":0},"generated":{"line":5268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5268,"column":0},"generated":{"line":5269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5269,"column":0},"generated":{"line":5270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5270,"column":0},"generated":{"line":5271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5271,"column":0},"generated":{"line":5272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5272,"column":0},"generated":{"line":5273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5273,"column":0},"generated":{"line":5274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5274,"column":0},"generated":{"line":5275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5275,"column":0},"generated":{"line":5276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5276,"column":0},"generated":{"line":5277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5277,"column":0},"generated":{"line":5278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5278,"column":0},"generated":{"line":5279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5279,"column":0},"generated":{"line":5280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5280,"column":0},"generated":{"line":5281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5281,"column":0},"generated":{"line":5282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5282,"column":0},"generated":{"line":5283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5283,"column":0},"generated":{"line":5284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5284,"column":0},"generated":{"line":5285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5285,"column":0},"generated":{"line":5286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5286,"column":0},"generated":{"line":5287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5287,"column":0},"generated":{"line":5288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5288,"column":0},"generated":{"line":5289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5289,"column":0},"generated":{"line":5290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5290,"column":0},"generated":{"line":5291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5291,"column":0},"generated":{"line":5292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5292,"column":0},"generated":{"line":5293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5293,"column":0},"generated":{"line":5294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5294,"column":0},"generated":{"line":5295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5295,"column":0},"generated":{"line":5296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5296,"column":0},"generated":{"line":5297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5297,"column":0},"generated":{"line":5298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5298,"column":0},"generated":{"line":5299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5299,"column":0},"generated":{"line":5300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5300,"column":0},"generated":{"line":5301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5301,"column":0},"generated":{"line":5302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5302,"column":0},"generated":{"line":5303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5303,"column":0},"generated":{"line":5304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5304,"column":0},"generated":{"line":5305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5305,"column":0},"generated":{"line":5306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5306,"column":0},"generated":{"line":5307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5307,"column":0},"generated":{"line":5308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5308,"column":0},"generated":{"line":5309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5309,"column":0},"generated":{"line":5310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5310,"column":0},"generated":{"line":5311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5311,"column":0},"generated":{"line":5312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5312,"column":0},"generated":{"line":5313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5313,"column":0},"generated":{"line":5314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5314,"column":0},"generated":{"line":5315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5315,"column":0},"generated":{"line":5316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5316,"column":0},"generated":{"line":5317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5317,"column":0},"generated":{"line":5318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5318,"column":0},"generated":{"line":5319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5319,"column":0},"generated":{"line":5320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5320,"column":0},"generated":{"line":5321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5321,"column":0},"generated":{"line":5322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5322,"column":0},"generated":{"line":5323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5323,"column":0},"generated":{"line":5324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5324,"column":0},"generated":{"line":5325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5325,"column":0},"generated":{"line":5326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5326,"column":0},"generated":{"line":5327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5327,"column":0},"generated":{"line":5328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5328,"column":0},"generated":{"line":5329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5329,"column":0},"generated":{"line":5330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5330,"column":0},"generated":{"line":5331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5331,"column":0},"generated":{"line":5332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5332,"column":0},"generated":{"line":5333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5333,"column":0},"generated":{"line":5334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5334,"column":0},"generated":{"line":5335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5335,"column":0},"generated":{"line":5336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5336,"column":0},"generated":{"line":5337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5337,"column":0},"generated":{"line":5338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5338,"column":0},"generated":{"line":5339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5339,"column":0},"generated":{"line":5340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5340,"column":0},"generated":{"line":5341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5341,"column":0},"generated":{"line":5342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5342,"column":0},"generated":{"line":5343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5343,"column":0},"generated":{"line":5344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5344,"column":0},"generated":{"line":5345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5345,"column":0},"generated":{"line":5346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5346,"column":0},"generated":{"line":5347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5347,"column":0},"generated":{"line":5348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5348,"column":0},"generated":{"line":5349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5349,"column":0},"generated":{"line":5350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5350,"column":0},"generated":{"line":5351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5351,"column":0},"generated":{"line":5352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5352,"column":0},"generated":{"line":5353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5353,"column":0},"generated":{"line":5354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5354,"column":0},"generated":{"line":5355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5355,"column":0},"generated":{"line":5356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5356,"column":0},"generated":{"line":5357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5357,"column":0},"generated":{"line":5358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5358,"column":0},"generated":{"line":5359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5359,"column":0},"generated":{"line":5360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5360,"column":0},"generated":{"line":5361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5361,"column":0},"generated":{"line":5362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5362,"column":0},"generated":{"line":5363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5363,"column":0},"generated":{"line":5364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5364,"column":0},"generated":{"line":5365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5365,"column":0},"generated":{"line":5366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5366,"column":0},"generated":{"line":5367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5367,"column":0},"generated":{"line":5368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5368,"column":0},"generated":{"line":5369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5369,"column":0},"generated":{"line":5370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5370,"column":0},"generated":{"line":5371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5371,"column":0},"generated":{"line":5372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5372,"column":0},"generated":{"line":5373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5373,"column":0},"generated":{"line":5374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5374,"column":0},"generated":{"line":5375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5375,"column":0},"generated":{"line":5376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5376,"column":0},"generated":{"line":5377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5377,"column":0},"generated":{"line":5378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5378,"column":0},"generated":{"line":5379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5379,"column":0},"generated":{"line":5380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5380,"column":0},"generated":{"line":5381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5381,"column":0},"generated":{"line":5382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5382,"column":0},"generated":{"line":5383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5383,"column":0},"generated":{"line":5384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5384,"column":0},"generated":{"line":5385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5385,"column":0},"generated":{"line":5386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5386,"column":0},"generated":{"line":5387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5387,"column":0},"generated":{"line":5388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5388,"column":0},"generated":{"line":5389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5389,"column":0},"generated":{"line":5390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5390,"column":0},"generated":{"line":5391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5391,"column":0},"generated":{"line":5392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5392,"column":0},"generated":{"line":5393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5393,"column":0},"generated":{"line":5394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5394,"column":0},"generated":{"line":5395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5395,"column":0},"generated":{"line":5396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5396,"column":0},"generated":{"line":5397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5397,"column":0},"generated":{"line":5398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5398,"column":0},"generated":{"line":5399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5399,"column":0},"generated":{"line":5400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5400,"column":0},"generated":{"line":5401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5401,"column":0},"generated":{"line":5402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5402,"column":0},"generated":{"line":5403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5403,"column":0},"generated":{"line":5404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5404,"column":0},"generated":{"line":5405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5405,"column":0},"generated":{"line":5406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5406,"column":0},"generated":{"line":5407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5407,"column":0},"generated":{"line":5408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5408,"column":0},"generated":{"line":5409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5409,"column":0},"generated":{"line":5410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5410,"column":0},"generated":{"line":5411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5411,"column":0},"generated":{"line":5412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5412,"column":0},"generated":{"line":5413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5413,"column":0},"generated":{"line":5414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5414,"column":0},"generated":{"line":5415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5415,"column":0},"generated":{"line":5416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5416,"column":0},"generated":{"line":5417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5417,"column":0},"generated":{"line":5418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5418,"column":0},"generated":{"line":5419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5419,"column":0},"generated":{"line":5420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5420,"column":0},"generated":{"line":5421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5421,"column":0},"generated":{"line":5422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5422,"column":0},"generated":{"line":5423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5423,"column":0},"generated":{"line":5424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5424,"column":0},"generated":{"line":5425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5425,"column":0},"generated":{"line":5426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5426,"column":0},"generated":{"line":5427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5427,"column":0},"generated":{"line":5428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5428,"column":0},"generated":{"line":5429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5429,"column":0},"generated":{"line":5430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5430,"column":0},"generated":{"line":5431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5431,"column":0},"generated":{"line":5432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5432,"column":0},"generated":{"line":5433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5433,"column":0},"generated":{"line":5434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5434,"column":0},"generated":{"line":5435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5435,"column":0},"generated":{"line":5436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5436,"column":0},"generated":{"line":5437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5437,"column":0},"generated":{"line":5438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5438,"column":0},"generated":{"line":5439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5439,"column":0},"generated":{"line":5440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5440,"column":0},"generated":{"line":5441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5441,"column":0},"generated":{"line":5442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5442,"column":0},"generated":{"line":5443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5443,"column":0},"generated":{"line":5444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5444,"column":0},"generated":{"line":5445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5445,"column":0},"generated":{"line":5446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5446,"column":0},"generated":{"line":5447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5447,"column":0},"generated":{"line":5448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5448,"column":0},"generated":{"line":5449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5449,"column":0},"generated":{"line":5450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5450,"column":0},"generated":{"line":5451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5451,"column":0},"generated":{"line":5452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5452,"column":0},"generated":{"line":5453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5453,"column":0},"generated":{"line":5454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5454,"column":0},"generated":{"line":5455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5455,"column":0},"generated":{"line":5456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5456,"column":0},"generated":{"line":5457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5457,"column":0},"generated":{"line":5458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5458,"column":0},"generated":{"line":5459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5459,"column":0},"generated":{"line":5460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5460,"column":0},"generated":{"line":5461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5461,"column":0},"generated":{"line":5462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5462,"column":0},"generated":{"line":5463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5463,"column":0},"generated":{"line":5464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5464,"column":0},"generated":{"line":5465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5465,"column":0},"generated":{"line":5466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5466,"column":0},"generated":{"line":5467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5467,"column":0},"generated":{"line":5468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5468,"column":0},"generated":{"line":5469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5469,"column":0},"generated":{"line":5470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5470,"column":0},"generated":{"line":5471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5471,"column":0},"generated":{"line":5472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5472,"column":0},"generated":{"line":5473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5473,"column":0},"generated":{"line":5474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5474,"column":0},"generated":{"line":5475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5475,"column":0},"generated":{"line":5476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5476,"column":0},"generated":{"line":5477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5477,"column":0},"generated":{"line":5478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5478,"column":0},"generated":{"line":5479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5479,"column":0},"generated":{"line":5480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5480,"column":0},"generated":{"line":5481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5481,"column":0},"generated":{"line":5482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5482,"column":0},"generated":{"line":5483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5483,"column":0},"generated":{"line":5484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5484,"column":0},"generated":{"line":5485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5485,"column":0},"generated":{"line":5486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5486,"column":0},"generated":{"line":5487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5487,"column":0},"generated":{"line":5488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5488,"column":0},"generated":{"line":5489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5489,"column":0},"generated":{"line":5490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5490,"column":0},"generated":{"line":5491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5491,"column":0},"generated":{"line":5492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5492,"column":0},"generated":{"line":5493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5493,"column":0},"generated":{"line":5494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5494,"column":0},"generated":{"line":5495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5495,"column":0},"generated":{"line":5496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5496,"column":0},"generated":{"line":5497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5497,"column":0},"generated":{"line":5498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5498,"column":0},"generated":{"line":5499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5499,"column":0},"generated":{"line":5500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5500,"column":0},"generated":{"line":5501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5501,"column":0},"generated":{"line":5502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5502,"column":0},"generated":{"line":5503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5503,"column":0},"generated":{"line":5504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5504,"column":0},"generated":{"line":5505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5505,"column":0},"generated":{"line":5506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5506,"column":0},"generated":{"line":5507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5507,"column":0},"generated":{"line":5508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5508,"column":0},"generated":{"line":5509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5509,"column":0},"generated":{"line":5510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5510,"column":0},"generated":{"line":5511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5511,"column":0},"generated":{"line":5512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5512,"column":0},"generated":{"line":5513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5513,"column":0},"generated":{"line":5514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5514,"column":0},"generated":{"line":5515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5515,"column":0},"generated":{"line":5516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5516,"column":0},"generated":{"line":5517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5517,"column":0},"generated":{"line":5518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5518,"column":0},"generated":{"line":5519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5519,"column":0},"generated":{"line":5520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5520,"column":0},"generated":{"line":5521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5521,"column":0},"generated":{"line":5522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5522,"column":0},"generated":{"line":5523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5523,"column":0},"generated":{"line":5524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5524,"column":0},"generated":{"line":5525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5525,"column":0},"generated":{"line":5526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5526,"column":0},"generated":{"line":5527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5527,"column":0},"generated":{"line":5528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5528,"column":0},"generated":{"line":5529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5529,"column":0},"generated":{"line":5530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5530,"column":0},"generated":{"line":5531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5531,"column":0},"generated":{"line":5532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5532,"column":0},"generated":{"line":5533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5533,"column":0},"generated":{"line":5534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5534,"column":0},"generated":{"line":5535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5535,"column":0},"generated":{"line":5536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5536,"column":0},"generated":{"line":5537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5537,"column":0},"generated":{"line":5538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5538,"column":0},"generated":{"line":5539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5539,"column":0},"generated":{"line":5540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5540,"column":0},"generated":{"line":5541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5541,"column":0},"generated":{"line":5542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5542,"column":0},"generated":{"line":5543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5543,"column":0},"generated":{"line":5544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5544,"column":0},"generated":{"line":5545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5545,"column":0},"generated":{"line":5546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5546,"column":0},"generated":{"line":5547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5547,"column":0},"generated":{"line":5548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5548,"column":0},"generated":{"line":5549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5549,"column":0},"generated":{"line":5550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5550,"column":0},"generated":{"line":5551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5551,"column":0},"generated":{"line":5552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5552,"column":0},"generated":{"line":5553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5553,"column":0},"generated":{"line":5554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5554,"column":0},"generated":{"line":5555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5555,"column":0},"generated":{"line":5556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5556,"column":0},"generated":{"line":5557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5557,"column":0},"generated":{"line":5558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5558,"column":0},"generated":{"line":5559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5559,"column":0},"generated":{"line":5560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5560,"column":0},"generated":{"line":5561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5561,"column":0},"generated":{"line":5562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5562,"column":0},"generated":{"line":5563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5563,"column":0},"generated":{"line":5564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5564,"column":0},"generated":{"line":5565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5565,"column":0},"generated":{"line":5566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5566,"column":0},"generated":{"line":5567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5567,"column":0},"generated":{"line":5568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5568,"column":0},"generated":{"line":5569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5569,"column":0},"generated":{"line":5570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5570,"column":0},"generated":{"line":5571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5571,"column":0},"generated":{"line":5572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5572,"column":0},"generated":{"line":5573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5573,"column":0},"generated":{"line":5574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5574,"column":0},"generated":{"line":5575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5575,"column":0},"generated":{"line":5576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5576,"column":0},"generated":{"line":5577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5577,"column":0},"generated":{"line":5578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5578,"column":0},"generated":{"line":5579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5579,"column":0},"generated":{"line":5580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5580,"column":0},"generated":{"line":5581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5581,"column":0},"generated":{"line":5582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5582,"column":0},"generated":{"line":5583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5583,"column":0},"generated":{"line":5584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5584,"column":0},"generated":{"line":5585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5585,"column":0},"generated":{"line":5586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5586,"column":0},"generated":{"line":5587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5587,"column":0},"generated":{"line":5588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5588,"column":0},"generated":{"line":5589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5589,"column":0},"generated":{"line":5590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5590,"column":0},"generated":{"line":5591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5591,"column":0},"generated":{"line":5592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5592,"column":0},"generated":{"line":5593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5593,"column":0},"generated":{"line":5594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5594,"column":0},"generated":{"line":5595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5595,"column":0},"generated":{"line":5596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5596,"column":0},"generated":{"line":5597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5597,"column":0},"generated":{"line":5598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5598,"column":0},"generated":{"line":5599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5599,"column":0},"generated":{"line":5600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5600,"column":0},"generated":{"line":5601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5601,"column":0},"generated":{"line":5602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5602,"column":0},"generated":{"line":5603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5603,"column":0},"generated":{"line":5604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5604,"column":0},"generated":{"line":5605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5605,"column":0},"generated":{"line":5606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5606,"column":0},"generated":{"line":5607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5607,"column":0},"generated":{"line":5608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5608,"column":0},"generated":{"line":5609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5609,"column":0},"generated":{"line":5610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5610,"column":0},"generated":{"line":5611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5611,"column":0},"generated":{"line":5612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5612,"column":0},"generated":{"line":5613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5613,"column":0},"generated":{"line":5614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5614,"column":0},"generated":{"line":5615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5615,"column":0},"generated":{"line":5616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5616,"column":0},"generated":{"line":5617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5617,"column":0},"generated":{"line":5618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5618,"column":0},"generated":{"line":5619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5619,"column":0},"generated":{"line":5620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5620,"column":0},"generated":{"line":5621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5621,"column":0},"generated":{"line":5622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5622,"column":0},"generated":{"line":5623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5623,"column":0},"generated":{"line":5624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5624,"column":0},"generated":{"line":5625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5625,"column":0},"generated":{"line":5626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5626,"column":0},"generated":{"line":5627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5627,"column":0},"generated":{"line":5628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5628,"column":0},"generated":{"line":5629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5629,"column":0},"generated":{"line":5630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5630,"column":0},"generated":{"line":5631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5631,"column":0},"generated":{"line":5632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5632,"column":0},"generated":{"line":5633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5633,"column":0},"generated":{"line":5634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5634,"column":0},"generated":{"line":5635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5635,"column":0},"generated":{"line":5636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5636,"column":0},"generated":{"line":5637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5637,"column":0},"generated":{"line":5638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5638,"column":0},"generated":{"line":5639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5639,"column":0},"generated":{"line":5640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5640,"column":0},"generated":{"line":5641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5641,"column":0},"generated":{"line":5642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5642,"column":0},"generated":{"line":5643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5643,"column":0},"generated":{"line":5644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5644,"column":0},"generated":{"line":5645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5645,"column":0},"generated":{"line":5646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5646,"column":0},"generated":{"line":5647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5647,"column":0},"generated":{"line":5648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5648,"column":0},"generated":{"line":5649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5649,"column":0},"generated":{"line":5650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5650,"column":0},"generated":{"line":5651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5651,"column":0},"generated":{"line":5652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5652,"column":0},"generated":{"line":5653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5653,"column":0},"generated":{"line":5654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5654,"column":0},"generated":{"line":5655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5655,"column":0},"generated":{"line":5656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5656,"column":0},"generated":{"line":5657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5657,"column":0},"generated":{"line":5658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5658,"column":0},"generated":{"line":5659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5659,"column":0},"generated":{"line":5660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5660,"column":0},"generated":{"line":5661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5661,"column":0},"generated":{"line":5662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5662,"column":0},"generated":{"line":5663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5663,"column":0},"generated":{"line":5664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5664,"column":0},"generated":{"line":5665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5665,"column":0},"generated":{"line":5666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5666,"column":0},"generated":{"line":5667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5667,"column":0},"generated":{"line":5668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5668,"column":0},"generated":{"line":5669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5669,"column":0},"generated":{"line":5670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5670,"column":0},"generated":{"line":5671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5671,"column":0},"generated":{"line":5672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5672,"column":0},"generated":{"line":5673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5673,"column":0},"generated":{"line":5674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5674,"column":0},"generated":{"line":5675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5675,"column":0},"generated":{"line":5676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5676,"column":0},"generated":{"line":5677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5677,"column":0},"generated":{"line":5678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5678,"column":0},"generated":{"line":5679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5679,"column":0},"generated":{"line":5680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5680,"column":0},"generated":{"line":5681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5681,"column":0},"generated":{"line":5682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5682,"column":0},"generated":{"line":5683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5683,"column":0},"generated":{"line":5684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5684,"column":0},"generated":{"line":5685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5685,"column":0},"generated":{"line":5686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5686,"column":0},"generated":{"line":5687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5687,"column":0},"generated":{"line":5688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5688,"column":0},"generated":{"line":5689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5689,"column":0},"generated":{"line":5690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5690,"column":0},"generated":{"line":5691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5691,"column":0},"generated":{"line":5692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5692,"column":0},"generated":{"line":5693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5693,"column":0},"generated":{"line":5694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5694,"column":0},"generated":{"line":5695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5695,"column":0},"generated":{"line":5696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5696,"column":0},"generated":{"line":5697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5697,"column":0},"generated":{"line":5698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5698,"column":0},"generated":{"line":5699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5699,"column":0},"generated":{"line":5700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5700,"column":0},"generated":{"line":5701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5701,"column":0},"generated":{"line":5702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5702,"column":0},"generated":{"line":5703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5703,"column":0},"generated":{"line":5704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5704,"column":0},"generated":{"line":5705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5705,"column":0},"generated":{"line":5706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5706,"column":0},"generated":{"line":5707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5707,"column":0},"generated":{"line":5708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5708,"column":0},"generated":{"line":5709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5709,"column":0},"generated":{"line":5710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5710,"column":0},"generated":{"line":5711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5711,"column":0},"generated":{"line":5712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5712,"column":0},"generated":{"line":5713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5713,"column":0},"generated":{"line":5714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5714,"column":0},"generated":{"line":5715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5715,"column":0},"generated":{"line":5716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5716,"column":0},"generated":{"line":5717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5717,"column":0},"generated":{"line":5718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5718,"column":0},"generated":{"line":5719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5719,"column":0},"generated":{"line":5720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5720,"column":0},"generated":{"line":5721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5721,"column":0},"generated":{"line":5722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5722,"column":0},"generated":{"line":5723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5723,"column":0},"generated":{"line":5724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5724,"column":0},"generated":{"line":5725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5725,"column":0},"generated":{"line":5726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5726,"column":0},"generated":{"line":5727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5727,"column":0},"generated":{"line":5728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5728,"column":0},"generated":{"line":5729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5729,"column":0},"generated":{"line":5730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5730,"column":0},"generated":{"line":5731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5731,"column":0},"generated":{"line":5732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5732,"column":0},"generated":{"line":5733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5733,"column":0},"generated":{"line":5734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5734,"column":0},"generated":{"line":5735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5735,"column":0},"generated":{"line":5736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5736,"column":0},"generated":{"line":5737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5737,"column":0},"generated":{"line":5738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5738,"column":0},"generated":{"line":5739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5739,"column":0},"generated":{"line":5740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5740,"column":0},"generated":{"line":5741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5741,"column":0},"generated":{"line":5742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5742,"column":0},"generated":{"line":5743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5743,"column":0},"generated":{"line":5744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5744,"column":0},"generated":{"line":5745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5745,"column":0},"generated":{"line":5746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5746,"column":0},"generated":{"line":5747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5747,"column":0},"generated":{"line":5748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5748,"column":0},"generated":{"line":5749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5749,"column":0},"generated":{"line":5750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5750,"column":0},"generated":{"line":5751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5751,"column":0},"generated":{"line":5752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5752,"column":0},"generated":{"line":5753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5753,"column":0},"generated":{"line":5754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5754,"column":0},"generated":{"line":5755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5755,"column":0},"generated":{"line":5756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5756,"column":0},"generated":{"line":5757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5757,"column":0},"generated":{"line":5758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5758,"column":0},"generated":{"line":5759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5759,"column":0},"generated":{"line":5760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5760,"column":0},"generated":{"line":5761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5761,"column":0},"generated":{"line":5762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5762,"column":0},"generated":{"line":5763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5763,"column":0},"generated":{"line":5764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5764,"column":0},"generated":{"line":5765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5765,"column":0},"generated":{"line":5766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5766,"column":0},"generated":{"line":5767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5767,"column":0},"generated":{"line":5768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5768,"column":0},"generated":{"line":5769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5769,"column":0},"generated":{"line":5770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5770,"column":0},"generated":{"line":5771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5771,"column":0},"generated":{"line":5772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5772,"column":0},"generated":{"line":5773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5773,"column":0},"generated":{"line":5774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5774,"column":0},"generated":{"line":5775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5775,"column":0},"generated":{"line":5776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5776,"column":0},"generated":{"line":5777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5777,"column":0},"generated":{"line":5778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5778,"column":0},"generated":{"line":5779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5779,"column":0},"generated":{"line":5780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5780,"column":0},"generated":{"line":5781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5781,"column":0},"generated":{"line":5782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5782,"column":0},"generated":{"line":5783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5783,"column":0},"generated":{"line":5784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5784,"column":0},"generated":{"line":5785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5785,"column":0},"generated":{"line":5786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5786,"column":0},"generated":{"line":5787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5787,"column":0},"generated":{"line":5788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5788,"column":0},"generated":{"line":5789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5789,"column":0},"generated":{"line":5790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5790,"column":0},"generated":{"line":5791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5791,"column":0},"generated":{"line":5792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5792,"column":0},"generated":{"line":5793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5793,"column":0},"generated":{"line":5794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5794,"column":0},"generated":{"line":5795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5795,"column":0},"generated":{"line":5796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5796,"column":0},"generated":{"line":5797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5797,"column":0},"generated":{"line":5798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5798,"column":0},"generated":{"line":5799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5799,"column":0},"generated":{"line":5800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5800,"column":0},"generated":{"line":5801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5801,"column":0},"generated":{"line":5802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5802,"column":0},"generated":{"line":5803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5803,"column":0},"generated":{"line":5804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5804,"column":0},"generated":{"line":5805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5805,"column":0},"generated":{"line":5806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5806,"column":0},"generated":{"line":5807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5807,"column":0},"generated":{"line":5808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5808,"column":0},"generated":{"line":5809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5809,"column":0},"generated":{"line":5810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5810,"column":0},"generated":{"line":5811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5811,"column":0},"generated":{"line":5812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5812,"column":0},"generated":{"line":5813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5813,"column":0},"generated":{"line":5814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5814,"column":0},"generated":{"line":5815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5815,"column":0},"generated":{"line":5816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5816,"column":0},"generated":{"line":5817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5817,"column":0},"generated":{"line":5818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5818,"column":0},"generated":{"line":5819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5819,"column":0},"generated":{"line":5820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5820,"column":0},"generated":{"line":5821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5821,"column":0},"generated":{"line":5822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5822,"column":0},"generated":{"line":5823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5823,"column":0},"generated":{"line":5824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5824,"column":0},"generated":{"line":5825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5825,"column":0},"generated":{"line":5826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5826,"column":0},"generated":{"line":5827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5827,"column":0},"generated":{"line":5828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5828,"column":0},"generated":{"line":5829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5829,"column":0},"generated":{"line":5830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5830,"column":0},"generated":{"line":5831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5831,"column":0},"generated":{"line":5832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5832,"column":0},"generated":{"line":5833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5833,"column":0},"generated":{"line":5834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5834,"column":0},"generated":{"line":5835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5835,"column":0},"generated":{"line":5836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5836,"column":0},"generated":{"line":5837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5837,"column":0},"generated":{"line":5838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5838,"column":0},"generated":{"line":5839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5839,"column":0},"generated":{"line":5840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5840,"column":0},"generated":{"line":5841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5841,"column":0},"generated":{"line":5842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5842,"column":0},"generated":{"line":5843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5843,"column":0},"generated":{"line":5844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5844,"column":0},"generated":{"line":5845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5845,"column":0},"generated":{"line":5846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5846,"column":0},"generated":{"line":5847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5847,"column":0},"generated":{"line":5848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5848,"column":0},"generated":{"line":5849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5849,"column":0},"generated":{"line":5850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5850,"column":0},"generated":{"line":5851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5851,"column":0},"generated":{"line":5852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5852,"column":0},"generated":{"line":5853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5853,"column":0},"generated":{"line":5854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5854,"column":0},"generated":{"line":5855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5855,"column":0},"generated":{"line":5856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5856,"column":0},"generated":{"line":5857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5857,"column":0},"generated":{"line":5858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5858,"column":0},"generated":{"line":5859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5859,"column":0},"generated":{"line":5860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5860,"column":0},"generated":{"line":5861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5861,"column":0},"generated":{"line":5862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5862,"column":0},"generated":{"line":5863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5863,"column":0},"generated":{"line":5864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5864,"column":0},"generated":{"line":5865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5865,"column":0},"generated":{"line":5866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5866,"column":0},"generated":{"line":5867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5867,"column":0},"generated":{"line":5868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5868,"column":0},"generated":{"line":5869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5869,"column":0},"generated":{"line":5870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5870,"column":0},"generated":{"line":5871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5871,"column":0},"generated":{"line":5872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5872,"column":0},"generated":{"line":5873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5873,"column":0},"generated":{"line":5874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5874,"column":0},"generated":{"line":5875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5875,"column":0},"generated":{"line":5876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5876,"column":0},"generated":{"line":5877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5877,"column":0},"generated":{"line":5878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5878,"column":0},"generated":{"line":5879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5879,"column":0},"generated":{"line":5880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5880,"column":0},"generated":{"line":5881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5881,"column":0},"generated":{"line":5882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5882,"column":0},"generated":{"line":5883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5883,"column":0},"generated":{"line":5884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5884,"column":0},"generated":{"line":5885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5885,"column":0},"generated":{"line":5886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5886,"column":0},"generated":{"line":5887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5887,"column":0},"generated":{"line":5888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5888,"column":0},"generated":{"line":5889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5889,"column":0},"generated":{"line":5890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5890,"column":0},"generated":{"line":5891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5891,"column":0},"generated":{"line":5892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5892,"column":0},"generated":{"line":5893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5893,"column":0},"generated":{"line":5894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5894,"column":0},"generated":{"line":5895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5895,"column":0},"generated":{"line":5896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5896,"column":0},"generated":{"line":5897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5897,"column":0},"generated":{"line":5898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5898,"column":0},"generated":{"line":5899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5899,"column":0},"generated":{"line":5900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5900,"column":0},"generated":{"line":5901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5901,"column":0},"generated":{"line":5902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5902,"column":0},"generated":{"line":5903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5903,"column":0},"generated":{"line":5904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5904,"column":0},"generated":{"line":5905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5905,"column":0},"generated":{"line":5906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5906,"column":0},"generated":{"line":5907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5907,"column":0},"generated":{"line":5908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5908,"column":0},"generated":{"line":5909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5909,"column":0},"generated":{"line":5910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5910,"column":0},"generated":{"line":5911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5911,"column":0},"generated":{"line":5912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5912,"column":0},"generated":{"line":5913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5913,"column":0},"generated":{"line":5914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5914,"column":0},"generated":{"line":5915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5915,"column":0},"generated":{"line":5916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5916,"column":0},"generated":{"line":5917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5917,"column":0},"generated":{"line":5918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5918,"column":0},"generated":{"line":5919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5919,"column":0},"generated":{"line":5920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5920,"column":0},"generated":{"line":5921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5921,"column":0},"generated":{"line":5922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5922,"column":0},"generated":{"line":5923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5923,"column":0},"generated":{"line":5924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5924,"column":0},"generated":{"line":5925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5925,"column":0},"generated":{"line":5926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5926,"column":0},"generated":{"line":5927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5927,"column":0},"generated":{"line":5928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5928,"column":0},"generated":{"line":5929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5929,"column":0},"generated":{"line":5930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5930,"column":0},"generated":{"line":5931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5931,"column":0},"generated":{"line":5932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5932,"column":0},"generated":{"line":5933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5933,"column":0},"generated":{"line":5934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5934,"column":0},"generated":{"line":5935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5935,"column":0},"generated":{"line":5936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5936,"column":0},"generated":{"line":5937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5937,"column":0},"generated":{"line":5938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5938,"column":0},"generated":{"line":5939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5939,"column":0},"generated":{"line":5940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5940,"column":0},"generated":{"line":5941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5941,"column":0},"generated":{"line":5942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5942,"column":0},"generated":{"line":5943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5943,"column":0},"generated":{"line":5944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5944,"column":0},"generated":{"line":5945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5945,"column":0},"generated":{"line":5946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5946,"column":0},"generated":{"line":5947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5947,"column":0},"generated":{"line":5948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5948,"column":0},"generated":{"line":5949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5949,"column":0},"generated":{"line":5950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5950,"column":0},"generated":{"line":5951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5951,"column":0},"generated":{"line":5952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5952,"column":0},"generated":{"line":5953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5953,"column":0},"generated":{"line":5954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5954,"column":0},"generated":{"line":5955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5955,"column":0},"generated":{"line":5956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5956,"column":0},"generated":{"line":5957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5957,"column":0},"generated":{"line":5958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5958,"column":0},"generated":{"line":5959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5959,"column":0},"generated":{"line":5960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5960,"column":0},"generated":{"line":5961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5961,"column":0},"generated":{"line":5962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5962,"column":0},"generated":{"line":5963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5963,"column":0},"generated":{"line":5964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5964,"column":0},"generated":{"line":5965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5965,"column":0},"generated":{"line":5966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5966,"column":0},"generated":{"line":5967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5967,"column":0},"generated":{"line":5968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5968,"column":0},"generated":{"line":5969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5969,"column":0},"generated":{"line":5970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5970,"column":0},"generated":{"line":5971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5971,"column":0},"generated":{"line":5972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5972,"column":0},"generated":{"line":5973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5973,"column":0},"generated":{"line":5974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5974,"column":0},"generated":{"line":5975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5975,"column":0},"generated":{"line":5976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5976,"column":0},"generated":{"line":5977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5977,"column":0},"generated":{"line":5978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5978,"column":0},"generated":{"line":5979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5979,"column":0},"generated":{"line":5980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5980,"column":0},"generated":{"line":5981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5981,"column":0},"generated":{"line":5982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5982,"column":0},"generated":{"line":5983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5983,"column":0},"generated":{"line":5984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5984,"column":0},"generated":{"line":5985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5985,"column":0},"generated":{"line":5986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5986,"column":0},"generated":{"line":5987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5987,"column":0},"generated":{"line":5988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5988,"column":0},"generated":{"line":5989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5989,"column":0},"generated":{"line":5990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5990,"column":0},"generated":{"line":5991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5991,"column":0},"generated":{"line":5992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5992,"column":0},"generated":{"line":5993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5993,"column":0},"generated":{"line":5994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5994,"column":0},"generated":{"line":5995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5995,"column":0},"generated":{"line":5996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5996,"column":0},"generated":{"line":5997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5997,"column":0},"generated":{"line":5998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5998,"column":0},"generated":{"line":5999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":5999,"column":0},"generated":{"line":6000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6000,"column":0},"generated":{"line":6001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6001,"column":0},"generated":{"line":6002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6002,"column":0},"generated":{"line":6003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6003,"column":0},"generated":{"line":6004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6004,"column":0},"generated":{"line":6005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6005,"column":0},"generated":{"line":6006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6006,"column":0},"generated":{"line":6007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6007,"column":0},"generated":{"line":6008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6008,"column":0},"generated":{"line":6009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6009,"column":0},"generated":{"line":6010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6010,"column":0},"generated":{"line":6011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6011,"column":0},"generated":{"line":6012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6012,"column":0},"generated":{"line":6013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6013,"column":0},"generated":{"line":6014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6014,"column":0},"generated":{"line":6015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6015,"column":0},"generated":{"line":6016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6016,"column":0},"generated":{"line":6017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6017,"column":0},"generated":{"line":6018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6018,"column":0},"generated":{"line":6019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6019,"column":0},"generated":{"line":6020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6020,"column":0},"generated":{"line":6021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6021,"column":0},"generated":{"line":6022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6022,"column":0},"generated":{"line":6023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6023,"column":0},"generated":{"line":6024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6024,"column":0},"generated":{"line":6025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6025,"column":0},"generated":{"line":6026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6026,"column":0},"generated":{"line":6027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6027,"column":0},"generated":{"line":6028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6028,"column":0},"generated":{"line":6029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6029,"column":0},"generated":{"line":6030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6030,"column":0},"generated":{"line":6031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6031,"column":0},"generated":{"line":6032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6032,"column":0},"generated":{"line":6033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6033,"column":0},"generated":{"line":6034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6034,"column":0},"generated":{"line":6035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6035,"column":0},"generated":{"line":6036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6036,"column":0},"generated":{"line":6037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6037,"column":0},"generated":{"line":6038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6038,"column":0},"generated":{"line":6039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6039,"column":0},"generated":{"line":6040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6040,"column":0},"generated":{"line":6041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6041,"column":0},"generated":{"line":6042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6042,"column":0},"generated":{"line":6043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6043,"column":0},"generated":{"line":6044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6044,"column":0},"generated":{"line":6045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6045,"column":0},"generated":{"line":6046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6046,"column":0},"generated":{"line":6047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6047,"column":0},"generated":{"line":6048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6048,"column":0},"generated":{"line":6049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6049,"column":0},"generated":{"line":6050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6050,"column":0},"generated":{"line":6051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6051,"column":0},"generated":{"line":6052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6052,"column":0},"generated":{"line":6053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6053,"column":0},"generated":{"line":6054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6054,"column":0},"generated":{"line":6055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6055,"column":0},"generated":{"line":6056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6056,"column":0},"generated":{"line":6057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6057,"column":0},"generated":{"line":6058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6058,"column":0},"generated":{"line":6059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6059,"column":0},"generated":{"line":6060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6060,"column":0},"generated":{"line":6061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6061,"column":0},"generated":{"line":6062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6062,"column":0},"generated":{"line":6063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6063,"column":0},"generated":{"line":6064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6064,"column":0},"generated":{"line":6065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6065,"column":0},"generated":{"line":6066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6066,"column":0},"generated":{"line":6067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6067,"column":0},"generated":{"line":6068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6068,"column":0},"generated":{"line":6069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6069,"column":0},"generated":{"line":6070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6070,"column":0},"generated":{"line":6071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6071,"column":0},"generated":{"line":6072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6072,"column":0},"generated":{"line":6073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6073,"column":0},"generated":{"line":6074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6074,"column":0},"generated":{"line":6075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6075,"column":0},"generated":{"line":6076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6076,"column":0},"generated":{"line":6077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6077,"column":0},"generated":{"line":6078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6078,"column":0},"generated":{"line":6079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6079,"column":0},"generated":{"line":6080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6080,"column":0},"generated":{"line":6081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6081,"column":0},"generated":{"line":6082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6082,"column":0},"generated":{"line":6083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6083,"column":0},"generated":{"line":6084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6084,"column":0},"generated":{"line":6085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6085,"column":0},"generated":{"line":6086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6086,"column":0},"generated":{"line":6087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6087,"column":0},"generated":{"line":6088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6088,"column":0},"generated":{"line":6089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6089,"column":0},"generated":{"line":6090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6090,"column":0},"generated":{"line":6091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6091,"column":0},"generated":{"line":6092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6092,"column":0},"generated":{"line":6093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6093,"column":0},"generated":{"line":6094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6094,"column":0},"generated":{"line":6095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6095,"column":0},"generated":{"line":6096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6096,"column":0},"generated":{"line":6097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6097,"column":0},"generated":{"line":6098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6098,"column":0},"generated":{"line":6099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6099,"column":0},"generated":{"line":6100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6100,"column":0},"generated":{"line":6101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6101,"column":0},"generated":{"line":6102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6102,"column":0},"generated":{"line":6103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6103,"column":0},"generated":{"line":6104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6104,"column":0},"generated":{"line":6105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6105,"column":0},"generated":{"line":6106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6106,"column":0},"generated":{"line":6107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6107,"column":0},"generated":{"line":6108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6108,"column":0},"generated":{"line":6109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6109,"column":0},"generated":{"line":6110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6110,"column":0},"generated":{"line":6111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6111,"column":0},"generated":{"line":6112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6112,"column":0},"generated":{"line":6113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6113,"column":0},"generated":{"line":6114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6114,"column":0},"generated":{"line":6115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6115,"column":0},"generated":{"line":6116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6116,"column":0},"generated":{"line":6117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6117,"column":0},"generated":{"line":6118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6118,"column":0},"generated":{"line":6119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6119,"column":0},"generated":{"line":6120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6120,"column":0},"generated":{"line":6121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6121,"column":0},"generated":{"line":6122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6122,"column":0},"generated":{"line":6123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6123,"column":0},"generated":{"line":6124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6124,"column":0},"generated":{"line":6125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6125,"column":0},"generated":{"line":6126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6126,"column":0},"generated":{"line":6127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6127,"column":0},"generated":{"line":6128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6128,"column":0},"generated":{"line":6129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6129,"column":0},"generated":{"line":6130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6130,"column":0},"generated":{"line":6131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6131,"column":0},"generated":{"line":6132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6132,"column":0},"generated":{"line":6133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6133,"column":0},"generated":{"line":6134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6134,"column":0},"generated":{"line":6135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6135,"column":0},"generated":{"line":6136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6136,"column":0},"generated":{"line":6137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6137,"column":0},"generated":{"line":6138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6138,"column":0},"generated":{"line":6139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6139,"column":0},"generated":{"line":6140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6140,"column":0},"generated":{"line":6141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6141,"column":0},"generated":{"line":6142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6142,"column":0},"generated":{"line":6143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6143,"column":0},"generated":{"line":6144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6144,"column":0},"generated":{"line":6145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6145,"column":0},"generated":{"line":6146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6146,"column":0},"generated":{"line":6147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6147,"column":0},"generated":{"line":6148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6148,"column":0},"generated":{"line":6149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6149,"column":0},"generated":{"line":6150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6150,"column":0},"generated":{"line":6151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6151,"column":0},"generated":{"line":6152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6152,"column":0},"generated":{"line":6153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6153,"column":0},"generated":{"line":6154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6154,"column":0},"generated":{"line":6155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6155,"column":0},"generated":{"line":6156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6156,"column":0},"generated":{"line":6157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6157,"column":0},"generated":{"line":6158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6158,"column":0},"generated":{"line":6159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6159,"column":0},"generated":{"line":6160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6160,"column":0},"generated":{"line":6161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6161,"column":0},"generated":{"line":6162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6162,"column":0},"generated":{"line":6163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6163,"column":0},"generated":{"line":6164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6164,"column":0},"generated":{"line":6165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6165,"column":0},"generated":{"line":6166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6166,"column":0},"generated":{"line":6167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6167,"column":0},"generated":{"line":6168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6168,"column":0},"generated":{"line":6169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6169,"column":0},"generated":{"line":6170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6170,"column":0},"generated":{"line":6171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6171,"column":0},"generated":{"line":6172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6172,"column":0},"generated":{"line":6173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6173,"column":0},"generated":{"line":6174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6174,"column":0},"generated":{"line":6175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6175,"column":0},"generated":{"line":6176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6176,"column":0},"generated":{"line":6177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6177,"column":0},"generated":{"line":6178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6178,"column":0},"generated":{"line":6179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6179,"column":0},"generated":{"line":6180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6180,"column":0},"generated":{"line":6181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6181,"column":0},"generated":{"line":6182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6182,"column":0},"generated":{"line":6183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6183,"column":0},"generated":{"line":6184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6184,"column":0},"generated":{"line":6185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6185,"column":0},"generated":{"line":6186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6186,"column":0},"generated":{"line":6187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6187,"column":0},"generated":{"line":6188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6188,"column":0},"generated":{"line":6189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6189,"column":0},"generated":{"line":6190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6190,"column":0},"generated":{"line":6191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6191,"column":0},"generated":{"line":6192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6192,"column":0},"generated":{"line":6193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6193,"column":0},"generated":{"line":6194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6194,"column":0},"generated":{"line":6195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6195,"column":0},"generated":{"line":6196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6196,"column":0},"generated":{"line":6197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6197,"column":0},"generated":{"line":6198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6198,"column":0},"generated":{"line":6199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6199,"column":0},"generated":{"line":6200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6200,"column":0},"generated":{"line":6201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6201,"column":0},"generated":{"line":6202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6202,"column":0},"generated":{"line":6203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6203,"column":0},"generated":{"line":6204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6204,"column":0},"generated":{"line":6205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6205,"column":0},"generated":{"line":6206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6206,"column":0},"generated":{"line":6207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6207,"column":0},"generated":{"line":6208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6208,"column":0},"generated":{"line":6209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6209,"column":0},"generated":{"line":6210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6210,"column":0},"generated":{"line":6211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6211,"column":0},"generated":{"line":6212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6212,"column":0},"generated":{"line":6213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6213,"column":0},"generated":{"line":6214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6214,"column":0},"generated":{"line":6215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6215,"column":0},"generated":{"line":6216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6216,"column":0},"generated":{"line":6217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6217,"column":0},"generated":{"line":6218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6218,"column":0},"generated":{"line":6219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6219,"column":0},"generated":{"line":6220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6220,"column":0},"generated":{"line":6221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6221,"column":0},"generated":{"line":6222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6222,"column":0},"generated":{"line":6223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6223,"column":0},"generated":{"line":6224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6224,"column":0},"generated":{"line":6225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6225,"column":0},"generated":{"line":6226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6226,"column":0},"generated":{"line":6227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6227,"column":0},"generated":{"line":6228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6228,"column":0},"generated":{"line":6229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6229,"column":0},"generated":{"line":6230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6230,"column":0},"generated":{"line":6231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6231,"column":0},"generated":{"line":6232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6232,"column":0},"generated":{"line":6233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6233,"column":0},"generated":{"line":6234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6234,"column":0},"generated":{"line":6235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6235,"column":0},"generated":{"line":6236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6236,"column":0},"generated":{"line":6237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6237,"column":0},"generated":{"line":6238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6238,"column":0},"generated":{"line":6239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6239,"column":0},"generated":{"line":6240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6240,"column":0},"generated":{"line":6241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6241,"column":0},"generated":{"line":6242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6242,"column":0},"generated":{"line":6243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6243,"column":0},"generated":{"line":6244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6244,"column":0},"generated":{"line":6245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6245,"column":0},"generated":{"line":6246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6246,"column":0},"generated":{"line":6247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6247,"column":0},"generated":{"line":6248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6248,"column":0},"generated":{"line":6249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6249,"column":0},"generated":{"line":6250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6250,"column":0},"generated":{"line":6251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6251,"column":0},"generated":{"line":6252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6252,"column":0},"generated":{"line":6253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6253,"column":0},"generated":{"line":6254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6254,"column":0},"generated":{"line":6255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6255,"column":0},"generated":{"line":6256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6256,"column":0},"generated":{"line":6257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6257,"column":0},"generated":{"line":6258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6258,"column":0},"generated":{"line":6259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6259,"column":0},"generated":{"line":6260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6260,"column":0},"generated":{"line":6261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6261,"column":0},"generated":{"line":6262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6262,"column":0},"generated":{"line":6263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6263,"column":0},"generated":{"line":6264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6264,"column":0},"generated":{"line":6265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6265,"column":0},"generated":{"line":6266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6266,"column":0},"generated":{"line":6267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6267,"column":0},"generated":{"line":6268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6268,"column":0},"generated":{"line":6269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6269,"column":0},"generated":{"line":6270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6270,"column":0},"generated":{"line":6271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6271,"column":0},"generated":{"line":6272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6272,"column":0},"generated":{"line":6273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6273,"column":0},"generated":{"line":6274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6274,"column":0},"generated":{"line":6275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6275,"column":0},"generated":{"line":6276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6276,"column":0},"generated":{"line":6277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6277,"column":0},"generated":{"line":6278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6278,"column":0},"generated":{"line":6279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6279,"column":0},"generated":{"line":6280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6280,"column":0},"generated":{"line":6281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6281,"column":0},"generated":{"line":6282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6282,"column":0},"generated":{"line":6283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6283,"column":0},"generated":{"line":6284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6284,"column":0},"generated":{"line":6285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6285,"column":0},"generated":{"line":6286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6286,"column":0},"generated":{"line":6287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6287,"column":0},"generated":{"line":6288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6288,"column":0},"generated":{"line":6289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6289,"column":0},"generated":{"line":6290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6290,"column":0},"generated":{"line":6291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6291,"column":0},"generated":{"line":6292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6292,"column":0},"generated":{"line":6293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6293,"column":0},"generated":{"line":6294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6294,"column":0},"generated":{"line":6295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6295,"column":0},"generated":{"line":6296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6296,"column":0},"generated":{"line":6297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6297,"column":0},"generated":{"line":6298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6298,"column":0},"generated":{"line":6299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6299,"column":0},"generated":{"line":6300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6300,"column":0},"generated":{"line":6301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6301,"column":0},"generated":{"line":6302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6302,"column":0},"generated":{"line":6303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6303,"column":0},"generated":{"line":6304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6304,"column":0},"generated":{"line":6305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6305,"column":0},"generated":{"line":6306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6306,"column":0},"generated":{"line":6307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6307,"column":0},"generated":{"line":6308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6308,"column":0},"generated":{"line":6309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6309,"column":0},"generated":{"line":6310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6310,"column":0},"generated":{"line":6311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6311,"column":0},"generated":{"line":6312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6312,"column":0},"generated":{"line":6313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6313,"column":0},"generated":{"line":6314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6314,"column":0},"generated":{"line":6315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6315,"column":0},"generated":{"line":6316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6316,"column":0},"generated":{"line":6317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6317,"column":0},"generated":{"line":6318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6318,"column":0},"generated":{"line":6319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6319,"column":0},"generated":{"line":6320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6320,"column":0},"generated":{"line":6321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6321,"column":0},"generated":{"line":6322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6322,"column":0},"generated":{"line":6323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6323,"column":0},"generated":{"line":6324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6324,"column":0},"generated":{"line":6325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6325,"column":0},"generated":{"line":6326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6326,"column":0},"generated":{"line":6327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6327,"column":0},"generated":{"line":6328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6328,"column":0},"generated":{"line":6329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6329,"column":0},"generated":{"line":6330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6330,"column":0},"generated":{"line":6331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6331,"column":0},"generated":{"line":6332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6332,"column":0},"generated":{"line":6333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6333,"column":0},"generated":{"line":6334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6334,"column":0},"generated":{"line":6335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6335,"column":0},"generated":{"line":6336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6336,"column":0},"generated":{"line":6337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6337,"column":0},"generated":{"line":6338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6338,"column":0},"generated":{"line":6339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6339,"column":0},"generated":{"line":6340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6340,"column":0},"generated":{"line":6341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6341,"column":0},"generated":{"line":6342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6342,"column":0},"generated":{"line":6343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6343,"column":0},"generated":{"line":6344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6344,"column":0},"generated":{"line":6345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6345,"column":0},"generated":{"line":6346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6346,"column":0},"generated":{"line":6347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6347,"column":0},"generated":{"line":6348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6348,"column":0},"generated":{"line":6349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6349,"column":0},"generated":{"line":6350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6350,"column":0},"generated":{"line":6351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6351,"column":0},"generated":{"line":6352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6352,"column":0},"generated":{"line":6353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6353,"column":0},"generated":{"line":6354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6354,"column":0},"generated":{"line":6355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6355,"column":0},"generated":{"line":6356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6356,"column":0},"generated":{"line":6357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6357,"column":0},"generated":{"line":6358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6358,"column":0},"generated":{"line":6359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6359,"column":0},"generated":{"line":6360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6360,"column":0},"generated":{"line":6361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6361,"column":0},"generated":{"line":6362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6362,"column":0},"generated":{"line":6363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6363,"column":0},"generated":{"line":6364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6364,"column":0},"generated":{"line":6365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6365,"column":0},"generated":{"line":6366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6366,"column":0},"generated":{"line":6367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6367,"column":0},"generated":{"line":6368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6368,"column":0},"generated":{"line":6369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6369,"column":0},"generated":{"line":6370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6370,"column":0},"generated":{"line":6371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6371,"column":0},"generated":{"line":6372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6372,"column":0},"generated":{"line":6373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6373,"column":0},"generated":{"line":6374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6374,"column":0},"generated":{"line":6375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6375,"column":0},"generated":{"line":6376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6376,"column":0},"generated":{"line":6377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6377,"column":0},"generated":{"line":6378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6378,"column":0},"generated":{"line":6379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6379,"column":0},"generated":{"line":6380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6380,"column":0},"generated":{"line":6381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6381,"column":0},"generated":{"line":6382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6382,"column":0},"generated":{"line":6383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6383,"column":0},"generated":{"line":6384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6384,"column":0},"generated":{"line":6385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6385,"column":0},"generated":{"line":6386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6386,"column":0},"generated":{"line":6387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6387,"column":0},"generated":{"line":6388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6388,"column":0},"generated":{"line":6389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6389,"column":0},"generated":{"line":6390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6390,"column":0},"generated":{"line":6391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6391,"column":0},"generated":{"line":6392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6392,"column":0},"generated":{"line":6393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6393,"column":0},"generated":{"line":6394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6394,"column":0},"generated":{"line":6395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6395,"column":0},"generated":{"line":6396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6396,"column":0},"generated":{"line":6397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6397,"column":0},"generated":{"line":6398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6398,"column":0},"generated":{"line":6399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6399,"column":0},"generated":{"line":6400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6400,"column":0},"generated":{"line":6401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6401,"column":0},"generated":{"line":6402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6402,"column":0},"generated":{"line":6403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6403,"column":0},"generated":{"line":6404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6404,"column":0},"generated":{"line":6405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6405,"column":0},"generated":{"line":6406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6406,"column":0},"generated":{"line":6407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6407,"column":0},"generated":{"line":6408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6408,"column":0},"generated":{"line":6409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6409,"column":0},"generated":{"line":6410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6410,"column":0},"generated":{"line":6411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6411,"column":0},"generated":{"line":6412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6412,"column":0},"generated":{"line":6413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6413,"column":0},"generated":{"line":6414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6414,"column":0},"generated":{"line":6415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6415,"column":0},"generated":{"line":6416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6416,"column":0},"generated":{"line":6417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6417,"column":0},"generated":{"line":6418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6418,"column":0},"generated":{"line":6419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6419,"column":0},"generated":{"line":6420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6420,"column":0},"generated":{"line":6421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6421,"column":0},"generated":{"line":6422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6422,"column":0},"generated":{"line":6423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6423,"column":0},"generated":{"line":6424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6424,"column":0},"generated":{"line":6425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6425,"column":0},"generated":{"line":6426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6426,"column":0},"generated":{"line":6427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6427,"column":0},"generated":{"line":6428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6428,"column":0},"generated":{"line":6429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6429,"column":0},"generated":{"line":6430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6430,"column":0},"generated":{"line":6431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6431,"column":0},"generated":{"line":6432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6432,"column":0},"generated":{"line":6433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6433,"column":0},"generated":{"line":6434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6434,"column":0},"generated":{"line":6435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6435,"column":0},"generated":{"line":6436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6436,"column":0},"generated":{"line":6437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6437,"column":0},"generated":{"line":6438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6438,"column":0},"generated":{"line":6439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6439,"column":0},"generated":{"line":6440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6440,"column":0},"generated":{"line":6441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6441,"column":0},"generated":{"line":6442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6442,"column":0},"generated":{"line":6443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6443,"column":0},"generated":{"line":6444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6444,"column":0},"generated":{"line":6445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6445,"column":0},"generated":{"line":6446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6446,"column":0},"generated":{"line":6447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6447,"column":0},"generated":{"line":6448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6448,"column":0},"generated":{"line":6449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6449,"column":0},"generated":{"line":6450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6450,"column":0},"generated":{"line":6451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6451,"column":0},"generated":{"line":6452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6452,"column":0},"generated":{"line":6453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6453,"column":0},"generated":{"line":6454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6454,"column":0},"generated":{"line":6455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6455,"column":0},"generated":{"line":6456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6456,"column":0},"generated":{"line":6457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6457,"column":0},"generated":{"line":6458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6458,"column":0},"generated":{"line":6459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6459,"column":0},"generated":{"line":6460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6460,"column":0},"generated":{"line":6461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6461,"column":0},"generated":{"line":6462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6462,"column":0},"generated":{"line":6463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6463,"column":0},"generated":{"line":6464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6464,"column":0},"generated":{"line":6465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6465,"column":0},"generated":{"line":6466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6466,"column":0},"generated":{"line":6467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6467,"column":0},"generated":{"line":6468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6468,"column":0},"generated":{"line":6469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6469,"column":0},"generated":{"line":6470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6470,"column":0},"generated":{"line":6471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6471,"column":0},"generated":{"line":6472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6472,"column":0},"generated":{"line":6473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6473,"column":0},"generated":{"line":6474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6474,"column":0},"generated":{"line":6475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6475,"column":0},"generated":{"line":6476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6476,"column":0},"generated":{"line":6477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6477,"column":0},"generated":{"line":6478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6478,"column":0},"generated":{"line":6479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6479,"column":0},"generated":{"line":6480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6480,"column":0},"generated":{"line":6481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6481,"column":0},"generated":{"line":6482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6482,"column":0},"generated":{"line":6483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6483,"column":0},"generated":{"line":6484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6484,"column":0},"generated":{"line":6485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6485,"column":0},"generated":{"line":6486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6486,"column":0},"generated":{"line":6487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6487,"column":0},"generated":{"line":6488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6488,"column":0},"generated":{"line":6489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6489,"column":0},"generated":{"line":6490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6490,"column":0},"generated":{"line":6491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6491,"column":0},"generated":{"line":6492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6492,"column":0},"generated":{"line":6493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6493,"column":0},"generated":{"line":6494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6494,"column":0},"generated":{"line":6495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6495,"column":0},"generated":{"line":6496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6496,"column":0},"generated":{"line":6497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6497,"column":0},"generated":{"line":6498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6498,"column":0},"generated":{"line":6499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6499,"column":0},"generated":{"line":6500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6500,"column":0},"generated":{"line":6501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6501,"column":0},"generated":{"line":6502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6502,"column":0},"generated":{"line":6503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6503,"column":0},"generated":{"line":6504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6504,"column":0},"generated":{"line":6505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6505,"column":0},"generated":{"line":6506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6506,"column":0},"generated":{"line":6507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6507,"column":0},"generated":{"line":6508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6508,"column":0},"generated":{"line":6509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6509,"column":0},"generated":{"line":6510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6510,"column":0},"generated":{"line":6511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6511,"column":0},"generated":{"line":6512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6512,"column":0},"generated":{"line":6513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6513,"column":0},"generated":{"line":6514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6514,"column":0},"generated":{"line":6515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6515,"column":0},"generated":{"line":6516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6516,"column":0},"generated":{"line":6517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6517,"column":0},"generated":{"line":6518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6518,"column":0},"generated":{"line":6519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6519,"column":0},"generated":{"line":6520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6520,"column":0},"generated":{"line":6521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6521,"column":0},"generated":{"line":6522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6522,"column":0},"generated":{"line":6523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6523,"column":0},"generated":{"line":6524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6524,"column":0},"generated":{"line":6525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6525,"column":0},"generated":{"line":6526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6526,"column":0},"generated":{"line":6527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6527,"column":0},"generated":{"line":6528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6528,"column":0},"generated":{"line":6529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6529,"column":0},"generated":{"line":6530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6530,"column":0},"generated":{"line":6531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6531,"column":0},"generated":{"line":6532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6532,"column":0},"generated":{"line":6533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6533,"column":0},"generated":{"line":6534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6534,"column":0},"generated":{"line":6535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6535,"column":0},"generated":{"line":6536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6536,"column":0},"generated":{"line":6537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6537,"column":0},"generated":{"line":6538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6538,"column":0},"generated":{"line":6539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6539,"column":0},"generated":{"line":6540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6540,"column":0},"generated":{"line":6541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6541,"column":0},"generated":{"line":6542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6542,"column":0},"generated":{"line":6543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6543,"column":0},"generated":{"line":6544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6544,"column":0},"generated":{"line":6545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6545,"column":0},"generated":{"line":6546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6546,"column":0},"generated":{"line":6547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6547,"column":0},"generated":{"line":6548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6548,"column":0},"generated":{"line":6549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6549,"column":0},"generated":{"line":6550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6550,"column":0},"generated":{"line":6551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6551,"column":0},"generated":{"line":6552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6552,"column":0},"generated":{"line":6553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6553,"column":0},"generated":{"line":6554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6554,"column":0},"generated":{"line":6555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6555,"column":0},"generated":{"line":6556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6556,"column":0},"generated":{"line":6557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6557,"column":0},"generated":{"line":6558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6558,"column":0},"generated":{"line":6559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6559,"column":0},"generated":{"line":6560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6560,"column":0},"generated":{"line":6561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6561,"column":0},"generated":{"line":6562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6562,"column":0},"generated":{"line":6563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6563,"column":0},"generated":{"line":6564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6564,"column":0},"generated":{"line":6565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6565,"column":0},"generated":{"line":6566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6566,"column":0},"generated":{"line":6567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6567,"column":0},"generated":{"line":6568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6568,"column":0},"generated":{"line":6569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6569,"column":0},"generated":{"line":6570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6570,"column":0},"generated":{"line":6571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6571,"column":0},"generated":{"line":6572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6572,"column":0},"generated":{"line":6573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6573,"column":0},"generated":{"line":6574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6574,"column":0},"generated":{"line":6575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6575,"column":0},"generated":{"line":6576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6576,"column":0},"generated":{"line":6577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6577,"column":0},"generated":{"line":6578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6578,"column":0},"generated":{"line":6579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6579,"column":0},"generated":{"line":6580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6580,"column":0},"generated":{"line":6581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6581,"column":0},"generated":{"line":6582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6582,"column":0},"generated":{"line":6583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6583,"column":0},"generated":{"line":6584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6584,"column":0},"generated":{"line":6585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6585,"column":0},"generated":{"line":6586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6586,"column":0},"generated":{"line":6587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6587,"column":0},"generated":{"line":6588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6588,"column":0},"generated":{"line":6589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6589,"column":0},"generated":{"line":6590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6590,"column":0},"generated":{"line":6591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6591,"column":0},"generated":{"line":6592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6592,"column":0},"generated":{"line":6593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6593,"column":0},"generated":{"line":6594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6594,"column":0},"generated":{"line":6595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6595,"column":0},"generated":{"line":6596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6596,"column":0},"generated":{"line":6597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6597,"column":0},"generated":{"line":6598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6598,"column":0},"generated":{"line":6599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6599,"column":0},"generated":{"line":6600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6600,"column":0},"generated":{"line":6601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6601,"column":0},"generated":{"line":6602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6602,"column":0},"generated":{"line":6603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6603,"column":0},"generated":{"line":6604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6604,"column":0},"generated":{"line":6605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6605,"column":0},"generated":{"line":6606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6606,"column":0},"generated":{"line":6607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6607,"column":0},"generated":{"line":6608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6608,"column":0},"generated":{"line":6609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6609,"column":0},"generated":{"line":6610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6610,"column":0},"generated":{"line":6611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6611,"column":0},"generated":{"line":6612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6612,"column":0},"generated":{"line":6613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6613,"column":0},"generated":{"line":6614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6614,"column":0},"generated":{"line":6615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6615,"column":0},"generated":{"line":6616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6616,"column":0},"generated":{"line":6617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6617,"column":0},"generated":{"line":6618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6618,"column":0},"generated":{"line":6619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6619,"column":0},"generated":{"line":6620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6620,"column":0},"generated":{"line":6621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6621,"column":0},"generated":{"line":6622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6622,"column":0},"generated":{"line":6623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6623,"column":0},"generated":{"line":6624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6624,"column":0},"generated":{"line":6625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6625,"column":0},"generated":{"line":6626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6626,"column":0},"generated":{"line":6627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6627,"column":0},"generated":{"line":6628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6628,"column":0},"generated":{"line":6629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6629,"column":0},"generated":{"line":6630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6630,"column":0},"generated":{"line":6631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6631,"column":0},"generated":{"line":6632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6632,"column":0},"generated":{"line":6633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6633,"column":0},"generated":{"line":6634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6634,"column":0},"generated":{"line":6635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6635,"column":0},"generated":{"line":6636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6636,"column":0},"generated":{"line":6637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6637,"column":0},"generated":{"line":6638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6638,"column":0},"generated":{"line":6639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6639,"column":0},"generated":{"line":6640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6640,"column":0},"generated":{"line":6641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6641,"column":0},"generated":{"line":6642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6642,"column":0},"generated":{"line":6643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6643,"column":0},"generated":{"line":6644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6644,"column":0},"generated":{"line":6645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6645,"column":0},"generated":{"line":6646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6646,"column":0},"generated":{"line":6647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6647,"column":0},"generated":{"line":6648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6648,"column":0},"generated":{"line":6649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6649,"column":0},"generated":{"line":6650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6650,"column":0},"generated":{"line":6651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6651,"column":0},"generated":{"line":6652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6652,"column":0},"generated":{"line":6653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6653,"column":0},"generated":{"line":6654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6654,"column":0},"generated":{"line":6655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6655,"column":0},"generated":{"line":6656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6656,"column":0},"generated":{"line":6657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6657,"column":0},"generated":{"line":6658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6658,"column":0},"generated":{"line":6659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6659,"column":0},"generated":{"line":6660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6660,"column":0},"generated":{"line":6661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6661,"column":0},"generated":{"line":6662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6662,"column":0},"generated":{"line":6663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6663,"column":0},"generated":{"line":6664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6664,"column":0},"generated":{"line":6665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6665,"column":0},"generated":{"line":6666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6666,"column":0},"generated":{"line":6667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6667,"column":0},"generated":{"line":6668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6668,"column":0},"generated":{"line":6669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6669,"column":0},"generated":{"line":6670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6670,"column":0},"generated":{"line":6671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6671,"column":0},"generated":{"line":6672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6672,"column":0},"generated":{"line":6673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6673,"column":0},"generated":{"line":6674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6674,"column":0},"generated":{"line":6675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6675,"column":0},"generated":{"line":6676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6676,"column":0},"generated":{"line":6677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6677,"column":0},"generated":{"line":6678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6678,"column":0},"generated":{"line":6679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6679,"column":0},"generated":{"line":6680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6680,"column":0},"generated":{"line":6681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6681,"column":0},"generated":{"line":6682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6682,"column":0},"generated":{"line":6683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6683,"column":0},"generated":{"line":6684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6684,"column":0},"generated":{"line":6685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6685,"column":0},"generated":{"line":6686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6686,"column":0},"generated":{"line":6687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6687,"column":0},"generated":{"line":6688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6688,"column":0},"generated":{"line":6689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6689,"column":0},"generated":{"line":6690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6690,"column":0},"generated":{"line":6691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6691,"column":0},"generated":{"line":6692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6692,"column":0},"generated":{"line":6693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6693,"column":0},"generated":{"line":6694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6694,"column":0},"generated":{"line":6695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6695,"column":0},"generated":{"line":6696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6696,"column":0},"generated":{"line":6697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6697,"column":0},"generated":{"line":6698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6698,"column":0},"generated":{"line":6699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6699,"column":0},"generated":{"line":6700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6700,"column":0},"generated":{"line":6701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6701,"column":0},"generated":{"line":6702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6702,"column":0},"generated":{"line":6703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6703,"column":0},"generated":{"line":6704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6704,"column":0},"generated":{"line":6705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6705,"column":0},"generated":{"line":6706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6706,"column":0},"generated":{"line":6707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6707,"column":0},"generated":{"line":6708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6708,"column":0},"generated":{"line":6709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6709,"column":0},"generated":{"line":6710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6710,"column":0},"generated":{"line":6711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6711,"column":0},"generated":{"line":6712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6712,"column":0},"generated":{"line":6713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6713,"column":0},"generated":{"line":6714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6714,"column":0},"generated":{"line":6715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6715,"column":0},"generated":{"line":6716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6716,"column":0},"generated":{"line":6717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6717,"column":0},"generated":{"line":6718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6718,"column":0},"generated":{"line":6719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6719,"column":0},"generated":{"line":6720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6720,"column":0},"generated":{"line":6721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6721,"column":0},"generated":{"line":6722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6722,"column":0},"generated":{"line":6723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6723,"column":0},"generated":{"line":6724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6724,"column":0},"generated":{"line":6725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6725,"column":0},"generated":{"line":6726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6726,"column":0},"generated":{"line":6727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6727,"column":0},"generated":{"line":6728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6728,"column":0},"generated":{"line":6729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6729,"column":0},"generated":{"line":6730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6730,"column":0},"generated":{"line":6731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6731,"column":0},"generated":{"line":6732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6732,"column":0},"generated":{"line":6733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6733,"column":0},"generated":{"line":6734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6734,"column":0},"generated":{"line":6735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6735,"column":0},"generated":{"line":6736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6736,"column":0},"generated":{"line":6737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6737,"column":0},"generated":{"line":6738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6738,"column":0},"generated":{"line":6739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6739,"column":0},"generated":{"line":6740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6740,"column":0},"generated":{"line":6741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6741,"column":0},"generated":{"line":6742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6742,"column":0},"generated":{"line":6743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6743,"column":0},"generated":{"line":6744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6744,"column":0},"generated":{"line":6745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6745,"column":0},"generated":{"line":6746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6746,"column":0},"generated":{"line":6747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6747,"column":0},"generated":{"line":6748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6748,"column":0},"generated":{"line":6749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6749,"column":0},"generated":{"line":6750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6750,"column":0},"generated":{"line":6751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6751,"column":0},"generated":{"line":6752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6752,"column":0},"generated":{"line":6753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6753,"column":0},"generated":{"line":6754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6754,"column":0},"generated":{"line":6755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6755,"column":0},"generated":{"line":6756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6756,"column":0},"generated":{"line":6757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6757,"column":0},"generated":{"line":6758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6758,"column":0},"generated":{"line":6759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6759,"column":0},"generated":{"line":6760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6760,"column":0},"generated":{"line":6761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6761,"column":0},"generated":{"line":6762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6762,"column":0},"generated":{"line":6763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6763,"column":0},"generated":{"line":6764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6764,"column":0},"generated":{"line":6765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6765,"column":0},"generated":{"line":6766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6766,"column":0},"generated":{"line":6767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6767,"column":0},"generated":{"line":6768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6768,"column":0},"generated":{"line":6769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6769,"column":0},"generated":{"line":6770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6770,"column":0},"generated":{"line":6771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6771,"column":0},"generated":{"line":6772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6772,"column":0},"generated":{"line":6773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6773,"column":0},"generated":{"line":6774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6774,"column":0},"generated":{"line":6775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6775,"column":0},"generated":{"line":6776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6776,"column":0},"generated":{"line":6777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6777,"column":0},"generated":{"line":6778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6778,"column":0},"generated":{"line":6779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6779,"column":0},"generated":{"line":6780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6780,"column":0},"generated":{"line":6781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6781,"column":0},"generated":{"line":6782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6782,"column":0},"generated":{"line":6783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6783,"column":0},"generated":{"line":6784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6784,"column":0},"generated":{"line":6785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6785,"column":0},"generated":{"line":6786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6786,"column":0},"generated":{"line":6787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6787,"column":0},"generated":{"line":6788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6788,"column":0},"generated":{"line":6789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6789,"column":0},"generated":{"line":6790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6790,"column":0},"generated":{"line":6791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6791,"column":0},"generated":{"line":6792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6792,"column":0},"generated":{"line":6793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6793,"column":0},"generated":{"line":6794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6794,"column":0},"generated":{"line":6795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6795,"column":0},"generated":{"line":6796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6796,"column":0},"generated":{"line":6797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6797,"column":0},"generated":{"line":6798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6798,"column":0},"generated":{"line":6799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6799,"column":0},"generated":{"line":6800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6800,"column":0},"generated":{"line":6801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6801,"column":0},"generated":{"line":6802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6802,"column":0},"generated":{"line":6803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6803,"column":0},"generated":{"line":6804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6804,"column":0},"generated":{"line":6805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6805,"column":0},"generated":{"line":6806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6806,"column":0},"generated":{"line":6807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6807,"column":0},"generated":{"line":6808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6808,"column":0},"generated":{"line":6809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6809,"column":0},"generated":{"line":6810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6810,"column":0},"generated":{"line":6811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6811,"column":0},"generated":{"line":6812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6812,"column":0},"generated":{"line":6813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6813,"column":0},"generated":{"line":6814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6814,"column":0},"generated":{"line":6815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6815,"column":0},"generated":{"line":6816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6816,"column":0},"generated":{"line":6817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6817,"column":0},"generated":{"line":6818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6818,"column":0},"generated":{"line":6819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6819,"column":0},"generated":{"line":6820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6820,"column":0},"generated":{"line":6821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6821,"column":0},"generated":{"line":6822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6822,"column":0},"generated":{"line":6823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6823,"column":0},"generated":{"line":6824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6824,"column":0},"generated":{"line":6825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6825,"column":0},"generated":{"line":6826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6826,"column":0},"generated":{"line":6827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6827,"column":0},"generated":{"line":6828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6828,"column":0},"generated":{"line":6829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6829,"column":0},"generated":{"line":6830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6830,"column":0},"generated":{"line":6831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6831,"column":0},"generated":{"line":6832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6832,"column":0},"generated":{"line":6833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6833,"column":0},"generated":{"line":6834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6834,"column":0},"generated":{"line":6835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6835,"column":0},"generated":{"line":6836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6836,"column":0},"generated":{"line":6837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6837,"column":0},"generated":{"line":6838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6838,"column":0},"generated":{"line":6839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6839,"column":0},"generated":{"line":6840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6840,"column":0},"generated":{"line":6841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6841,"column":0},"generated":{"line":6842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6842,"column":0},"generated":{"line":6843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6843,"column":0},"generated":{"line":6844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6844,"column":0},"generated":{"line":6845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6845,"column":0},"generated":{"line":6846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6846,"column":0},"generated":{"line":6847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6847,"column":0},"generated":{"line":6848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6848,"column":0},"generated":{"line":6849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6849,"column":0},"generated":{"line":6850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6850,"column":0},"generated":{"line":6851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6851,"column":0},"generated":{"line":6852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6852,"column":0},"generated":{"line":6853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6853,"column":0},"generated":{"line":6854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6854,"column":0},"generated":{"line":6855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6855,"column":0},"generated":{"line":6856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6856,"column":0},"generated":{"line":6857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6857,"column":0},"generated":{"line":6858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6858,"column":0},"generated":{"line":6859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6859,"column":0},"generated":{"line":6860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6860,"column":0},"generated":{"line":6861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6861,"column":0},"generated":{"line":6862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6862,"column":0},"generated":{"line":6863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6863,"column":0},"generated":{"line":6864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6864,"column":0},"generated":{"line":6865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6865,"column":0},"generated":{"line":6866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6866,"column":0},"generated":{"line":6867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6867,"column":0},"generated":{"line":6868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6868,"column":0},"generated":{"line":6869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6869,"column":0},"generated":{"line":6870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6870,"column":0},"generated":{"line":6871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6871,"column":0},"generated":{"line":6872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6872,"column":0},"generated":{"line":6873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6873,"column":0},"generated":{"line":6874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6874,"column":0},"generated":{"line":6875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6875,"column":0},"generated":{"line":6876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6876,"column":0},"generated":{"line":6877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6877,"column":0},"generated":{"line":6878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6878,"column":0},"generated":{"line":6879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6879,"column":0},"generated":{"line":6880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6880,"column":0},"generated":{"line":6881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6881,"column":0},"generated":{"line":6882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6882,"column":0},"generated":{"line":6883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6883,"column":0},"generated":{"line":6884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6884,"column":0},"generated":{"line":6885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6885,"column":0},"generated":{"line":6886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6886,"column":0},"generated":{"line":6887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6887,"column":0},"generated":{"line":6888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6888,"column":0},"generated":{"line":6889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6889,"column":0},"generated":{"line":6890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6890,"column":0},"generated":{"line":6891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6891,"column":0},"generated":{"line":6892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6892,"column":0},"generated":{"line":6893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6893,"column":0},"generated":{"line":6894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6894,"column":0},"generated":{"line":6895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6895,"column":0},"generated":{"line":6896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6896,"column":0},"generated":{"line":6897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6897,"column":0},"generated":{"line":6898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6898,"column":0},"generated":{"line":6899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6899,"column":0},"generated":{"line":6900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6900,"column":0},"generated":{"line":6901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6901,"column":0},"generated":{"line":6902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6902,"column":0},"generated":{"line":6903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6903,"column":0},"generated":{"line":6904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6904,"column":0},"generated":{"line":6905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6905,"column":0},"generated":{"line":6906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6906,"column":0},"generated":{"line":6907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6907,"column":0},"generated":{"line":6908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6908,"column":0},"generated":{"line":6909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6909,"column":0},"generated":{"line":6910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6910,"column":0},"generated":{"line":6911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6911,"column":0},"generated":{"line":6912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6912,"column":0},"generated":{"line":6913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6913,"column":0},"generated":{"line":6914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6914,"column":0},"generated":{"line":6915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6915,"column":0},"generated":{"line":6916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6916,"column":0},"generated":{"line":6917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6917,"column":0},"generated":{"line":6918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6918,"column":0},"generated":{"line":6919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6919,"column":0},"generated":{"line":6920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6920,"column":0},"generated":{"line":6921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6921,"column":0},"generated":{"line":6922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6922,"column":0},"generated":{"line":6923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6923,"column":0},"generated":{"line":6924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6924,"column":0},"generated":{"line":6925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6925,"column":0},"generated":{"line":6926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6926,"column":0},"generated":{"line":6927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6927,"column":0},"generated":{"line":6928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6928,"column":0},"generated":{"line":6929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6929,"column":0},"generated":{"line":6930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6930,"column":0},"generated":{"line":6931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6931,"column":0},"generated":{"line":6932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6932,"column":0},"generated":{"line":6933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6933,"column":0},"generated":{"line":6934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6934,"column":0},"generated":{"line":6935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6935,"column":0},"generated":{"line":6936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6936,"column":0},"generated":{"line":6937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6937,"column":0},"generated":{"line":6938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6938,"column":0},"generated":{"line":6939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6939,"column":0},"generated":{"line":6940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6940,"column":0},"generated":{"line":6941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6941,"column":0},"generated":{"line":6942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6942,"column":0},"generated":{"line":6943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6943,"column":0},"generated":{"line":6944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6944,"column":0},"generated":{"line":6945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6945,"column":0},"generated":{"line":6946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6946,"column":0},"generated":{"line":6947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6947,"column":0},"generated":{"line":6948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6948,"column":0},"generated":{"line":6949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6949,"column":0},"generated":{"line":6950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6950,"column":0},"generated":{"line":6951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6951,"column":0},"generated":{"line":6952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6952,"column":0},"generated":{"line":6953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6953,"column":0},"generated":{"line":6954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6954,"column":0},"generated":{"line":6955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6955,"column":0},"generated":{"line":6956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6956,"column":0},"generated":{"line":6957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6957,"column":0},"generated":{"line":6958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6958,"column":0},"generated":{"line":6959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6959,"column":0},"generated":{"line":6960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6960,"column":0},"generated":{"line":6961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6961,"column":0},"generated":{"line":6962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6962,"column":0},"generated":{"line":6963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6963,"column":0},"generated":{"line":6964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6964,"column":0},"generated":{"line":6965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6965,"column":0},"generated":{"line":6966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6966,"column":0},"generated":{"line":6967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6967,"column":0},"generated":{"line":6968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6968,"column":0},"generated":{"line":6969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6969,"column":0},"generated":{"line":6970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6970,"column":0},"generated":{"line":6971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6971,"column":0},"generated":{"line":6972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6972,"column":0},"generated":{"line":6973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6973,"column":0},"generated":{"line":6974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6974,"column":0},"generated":{"line":6975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6975,"column":0},"generated":{"line":6976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6976,"column":0},"generated":{"line":6977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6977,"column":0},"generated":{"line":6978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6978,"column":0},"generated":{"line":6979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6979,"column":0},"generated":{"line":6980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6980,"column":0},"generated":{"line":6981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6981,"column":0},"generated":{"line":6982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6982,"column":0},"generated":{"line":6983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6983,"column":0},"generated":{"line":6984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6984,"column":0},"generated":{"line":6985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6985,"column":0},"generated":{"line":6986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6986,"column":0},"generated":{"line":6987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6987,"column":0},"generated":{"line":6988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6988,"column":0},"generated":{"line":6989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6989,"column":0},"generated":{"line":6990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6990,"column":0},"generated":{"line":6991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6991,"column":0},"generated":{"line":6992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6992,"column":0},"generated":{"line":6993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6993,"column":0},"generated":{"line":6994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6994,"column":0},"generated":{"line":6995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6995,"column":0},"generated":{"line":6996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6996,"column":0},"generated":{"line":6997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6997,"column":0},"generated":{"line":6998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6998,"column":0},"generated":{"line":6999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":6999,"column":0},"generated":{"line":7000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7000,"column":0},"generated":{"line":7001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7001,"column":0},"generated":{"line":7002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7002,"column":0},"generated":{"line":7003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7003,"column":0},"generated":{"line":7004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7004,"column":0},"generated":{"line":7005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7005,"column":0},"generated":{"line":7006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7006,"column":0},"generated":{"line":7007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7007,"column":0},"generated":{"line":7008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7008,"column":0},"generated":{"line":7009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7009,"column":0},"generated":{"line":7010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7010,"column":0},"generated":{"line":7011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7011,"column":0},"generated":{"line":7012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7012,"column":0},"generated":{"line":7013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7013,"column":0},"generated":{"line":7014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7014,"column":0},"generated":{"line":7015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7015,"column":0},"generated":{"line":7016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7016,"column":0},"generated":{"line":7017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7017,"column":0},"generated":{"line":7018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7018,"column":0},"generated":{"line":7019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7019,"column":0},"generated":{"line":7020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7020,"column":0},"generated":{"line":7021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7021,"column":0},"generated":{"line":7022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7022,"column":0},"generated":{"line":7023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7023,"column":0},"generated":{"line":7024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7024,"column":0},"generated":{"line":7025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7025,"column":0},"generated":{"line":7026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7026,"column":0},"generated":{"line":7027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7027,"column":0},"generated":{"line":7028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7028,"column":0},"generated":{"line":7029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7029,"column":0},"generated":{"line":7030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7030,"column":0},"generated":{"line":7031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7031,"column":0},"generated":{"line":7032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7032,"column":0},"generated":{"line":7033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7033,"column":0},"generated":{"line":7034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7034,"column":0},"generated":{"line":7035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7035,"column":0},"generated":{"line":7036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7036,"column":0},"generated":{"line":7037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7037,"column":0},"generated":{"line":7038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7038,"column":0},"generated":{"line":7039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7039,"column":0},"generated":{"line":7040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7040,"column":0},"generated":{"line":7041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7041,"column":0},"generated":{"line":7042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7042,"column":0},"generated":{"line":7043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7043,"column":0},"generated":{"line":7044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7044,"column":0},"generated":{"line":7045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7045,"column":0},"generated":{"line":7046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7046,"column":0},"generated":{"line":7047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7047,"column":0},"generated":{"line":7048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7048,"column":0},"generated":{"line":7049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7049,"column":0},"generated":{"line":7050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7050,"column":0},"generated":{"line":7051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7051,"column":0},"generated":{"line":7052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7052,"column":0},"generated":{"line":7053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7053,"column":0},"generated":{"line":7054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7054,"column":0},"generated":{"line":7055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7055,"column":0},"generated":{"line":7056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7056,"column":0},"generated":{"line":7057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7057,"column":0},"generated":{"line":7058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7058,"column":0},"generated":{"line":7059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7059,"column":0},"generated":{"line":7060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7060,"column":0},"generated":{"line":7061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7061,"column":0},"generated":{"line":7062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7062,"column":0},"generated":{"line":7063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7063,"column":0},"generated":{"line":7064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7064,"column":0},"generated":{"line":7065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7065,"column":0},"generated":{"line":7066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7066,"column":0},"generated":{"line":7067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7067,"column":0},"generated":{"line":7068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7068,"column":0},"generated":{"line":7069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7069,"column":0},"generated":{"line":7070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7070,"column":0},"generated":{"line":7071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7071,"column":0},"generated":{"line":7072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7072,"column":0},"generated":{"line":7073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7073,"column":0},"generated":{"line":7074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7074,"column":0},"generated":{"line":7075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7075,"column":0},"generated":{"line":7076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7076,"column":0},"generated":{"line":7077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7077,"column":0},"generated":{"line":7078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7078,"column":0},"generated":{"line":7079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7079,"column":0},"generated":{"line":7080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7080,"column":0},"generated":{"line":7081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7081,"column":0},"generated":{"line":7082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7082,"column":0},"generated":{"line":7083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7083,"column":0},"generated":{"line":7084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7084,"column":0},"generated":{"line":7085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7085,"column":0},"generated":{"line":7086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7086,"column":0},"generated":{"line":7087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7087,"column":0},"generated":{"line":7088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7088,"column":0},"generated":{"line":7089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7089,"column":0},"generated":{"line":7090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7090,"column":0},"generated":{"line":7091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7091,"column":0},"generated":{"line":7092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7092,"column":0},"generated":{"line":7093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7093,"column":0},"generated":{"line":7094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7094,"column":0},"generated":{"line":7095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7095,"column":0},"generated":{"line":7096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7096,"column":0},"generated":{"line":7097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7097,"column":0},"generated":{"line":7098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7098,"column":0},"generated":{"line":7099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7099,"column":0},"generated":{"line":7100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7100,"column":0},"generated":{"line":7101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7101,"column":0},"generated":{"line":7102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7102,"column":0},"generated":{"line":7103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7103,"column":0},"generated":{"line":7104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7104,"column":0},"generated":{"line":7105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7105,"column":0},"generated":{"line":7106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7106,"column":0},"generated":{"line":7107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7107,"column":0},"generated":{"line":7108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7108,"column":0},"generated":{"line":7109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7109,"column":0},"generated":{"line":7110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7110,"column":0},"generated":{"line":7111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7111,"column":0},"generated":{"line":7112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7112,"column":0},"generated":{"line":7113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7113,"column":0},"generated":{"line":7114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7114,"column":0},"generated":{"line":7115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7115,"column":0},"generated":{"line":7116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7116,"column":0},"generated":{"line":7117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7117,"column":0},"generated":{"line":7118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7118,"column":0},"generated":{"line":7119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7119,"column":0},"generated":{"line":7120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7120,"column":0},"generated":{"line":7121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7121,"column":0},"generated":{"line":7122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7122,"column":0},"generated":{"line":7123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7123,"column":0},"generated":{"line":7124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7124,"column":0},"generated":{"line":7125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7125,"column":0},"generated":{"line":7126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7126,"column":0},"generated":{"line":7127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7127,"column":0},"generated":{"line":7128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7128,"column":0},"generated":{"line":7129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7129,"column":0},"generated":{"line":7130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7130,"column":0},"generated":{"line":7131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7131,"column":0},"generated":{"line":7132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7132,"column":0},"generated":{"line":7133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7133,"column":0},"generated":{"line":7134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7134,"column":0},"generated":{"line":7135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7135,"column":0},"generated":{"line":7136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7136,"column":0},"generated":{"line":7137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7137,"column":0},"generated":{"line":7138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7138,"column":0},"generated":{"line":7139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7139,"column":0},"generated":{"line":7140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7140,"column":0},"generated":{"line":7141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7141,"column":0},"generated":{"line":7142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7142,"column":0},"generated":{"line":7143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7143,"column":0},"generated":{"line":7144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7144,"column":0},"generated":{"line":7145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7145,"column":0},"generated":{"line":7146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7146,"column":0},"generated":{"line":7147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7147,"column":0},"generated":{"line":7148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7148,"column":0},"generated":{"line":7149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7149,"column":0},"generated":{"line":7150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7150,"column":0},"generated":{"line":7151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7151,"column":0},"generated":{"line":7152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7152,"column":0},"generated":{"line":7153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7153,"column":0},"generated":{"line":7154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7154,"column":0},"generated":{"line":7155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7155,"column":0},"generated":{"line":7156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7156,"column":0},"generated":{"line":7157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7157,"column":0},"generated":{"line":7158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7158,"column":0},"generated":{"line":7159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7159,"column":0},"generated":{"line":7160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7160,"column":0},"generated":{"line":7161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7161,"column":0},"generated":{"line":7162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7162,"column":0},"generated":{"line":7163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7163,"column":0},"generated":{"line":7164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7164,"column":0},"generated":{"line":7165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7165,"column":0},"generated":{"line":7166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7166,"column":0},"generated":{"line":7167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7167,"column":0},"generated":{"line":7168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7168,"column":0},"generated":{"line":7169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7169,"column":0},"generated":{"line":7170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7170,"column":0},"generated":{"line":7171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7171,"column":0},"generated":{"line":7172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7172,"column":0},"generated":{"line":7173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7173,"column":0},"generated":{"line":7174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7174,"column":0},"generated":{"line":7175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7175,"column":0},"generated":{"line":7176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7176,"column":0},"generated":{"line":7177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7177,"column":0},"generated":{"line":7178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7178,"column":0},"generated":{"line":7179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7179,"column":0},"generated":{"line":7180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7180,"column":0},"generated":{"line":7181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7181,"column":0},"generated":{"line":7182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7182,"column":0},"generated":{"line":7183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7183,"column":0},"generated":{"line":7184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7184,"column":0},"generated":{"line":7185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7185,"column":0},"generated":{"line":7186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7186,"column":0},"generated":{"line":7187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7187,"column":0},"generated":{"line":7188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7188,"column":0},"generated":{"line":7189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7189,"column":0},"generated":{"line":7190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7190,"column":0},"generated":{"line":7191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7191,"column":0},"generated":{"line":7192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7192,"column":0},"generated":{"line":7193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7193,"column":0},"generated":{"line":7194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7194,"column":0},"generated":{"line":7195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7195,"column":0},"generated":{"line":7196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7196,"column":0},"generated":{"line":7197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7197,"column":0},"generated":{"line":7198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7198,"column":0},"generated":{"line":7199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7199,"column":0},"generated":{"line":7200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7200,"column":0},"generated":{"line":7201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7201,"column":0},"generated":{"line":7202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7202,"column":0},"generated":{"line":7203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7203,"column":0},"generated":{"line":7204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7204,"column":0},"generated":{"line":7205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7205,"column":0},"generated":{"line":7206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7206,"column":0},"generated":{"line":7207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7207,"column":0},"generated":{"line":7208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7208,"column":0},"generated":{"line":7209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7209,"column":0},"generated":{"line":7210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7210,"column":0},"generated":{"line":7211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7211,"column":0},"generated":{"line":7212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7212,"column":0},"generated":{"line":7213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7213,"column":0},"generated":{"line":7214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7214,"column":0},"generated":{"line":7215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7215,"column":0},"generated":{"line":7216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7216,"column":0},"generated":{"line":7217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7217,"column":0},"generated":{"line":7218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7218,"column":0},"generated":{"line":7219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7219,"column":0},"generated":{"line":7220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7220,"column":0},"generated":{"line":7221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7221,"column":0},"generated":{"line":7222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7222,"column":0},"generated":{"line":7223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7223,"column":0},"generated":{"line":7224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7224,"column":0},"generated":{"line":7225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7225,"column":0},"generated":{"line":7226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7226,"column":0},"generated":{"line":7227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7227,"column":0},"generated":{"line":7228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7228,"column":0},"generated":{"line":7229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7229,"column":0},"generated":{"line":7230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7230,"column":0},"generated":{"line":7231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7231,"column":0},"generated":{"line":7232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7232,"column":0},"generated":{"line":7233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7233,"column":0},"generated":{"line":7234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7234,"column":0},"generated":{"line":7235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7235,"column":0},"generated":{"line":7236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7236,"column":0},"generated":{"line":7237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7237,"column":0},"generated":{"line":7238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7238,"column":0},"generated":{"line":7239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7239,"column":0},"generated":{"line":7240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7240,"column":0},"generated":{"line":7241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7241,"column":0},"generated":{"line":7242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7242,"column":0},"generated":{"line":7243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7243,"column":0},"generated":{"line":7244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7244,"column":0},"generated":{"line":7245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7245,"column":0},"generated":{"line":7246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7246,"column":0},"generated":{"line":7247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7247,"column":0},"generated":{"line":7248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7248,"column":0},"generated":{"line":7249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7249,"column":0},"generated":{"line":7250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7250,"column":0},"generated":{"line":7251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7251,"column":0},"generated":{"line":7252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7252,"column":0},"generated":{"line":7253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7253,"column":0},"generated":{"line":7254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7254,"column":0},"generated":{"line":7255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7255,"column":0},"generated":{"line":7256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7256,"column":0},"generated":{"line":7257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7257,"column":0},"generated":{"line":7258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7258,"column":0},"generated":{"line":7259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7259,"column":0},"generated":{"line":7260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7260,"column":0},"generated":{"line":7261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7261,"column":0},"generated":{"line":7262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7262,"column":0},"generated":{"line":7263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7263,"column":0},"generated":{"line":7264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7264,"column":0},"generated":{"line":7265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7265,"column":0},"generated":{"line":7266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7266,"column":0},"generated":{"line":7267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7267,"column":0},"generated":{"line":7268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7268,"column":0},"generated":{"line":7269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7269,"column":0},"generated":{"line":7270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7270,"column":0},"generated":{"line":7271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7271,"column":0},"generated":{"line":7272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7272,"column":0},"generated":{"line":7273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7273,"column":0},"generated":{"line":7274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7274,"column":0},"generated":{"line":7275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7275,"column":0},"generated":{"line":7276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7276,"column":0},"generated":{"line":7277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7277,"column":0},"generated":{"line":7278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7278,"column":0},"generated":{"line":7279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7279,"column":0},"generated":{"line":7280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7280,"column":0},"generated":{"line":7281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7281,"column":0},"generated":{"line":7282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7282,"column":0},"generated":{"line":7283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7283,"column":0},"generated":{"line":7284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7284,"column":0},"generated":{"line":7285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7285,"column":0},"generated":{"line":7286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7286,"column":0},"generated":{"line":7287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7287,"column":0},"generated":{"line":7288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7288,"column":0},"generated":{"line":7289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7289,"column":0},"generated":{"line":7290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7290,"column":0},"generated":{"line":7291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7291,"column":0},"generated":{"line":7292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7292,"column":0},"generated":{"line":7293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7293,"column":0},"generated":{"line":7294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7294,"column":0},"generated":{"line":7295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7295,"column":0},"generated":{"line":7296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7296,"column":0},"generated":{"line":7297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7297,"column":0},"generated":{"line":7298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7298,"column":0},"generated":{"line":7299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7299,"column":0},"generated":{"line":7300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7300,"column":0},"generated":{"line":7301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7301,"column":0},"generated":{"line":7302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7302,"column":0},"generated":{"line":7303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7303,"column":0},"generated":{"line":7304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7304,"column":0},"generated":{"line":7305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7305,"column":0},"generated":{"line":7306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7306,"column":0},"generated":{"line":7307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7307,"column":0},"generated":{"line":7308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7308,"column":0},"generated":{"line":7309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7309,"column":0},"generated":{"line":7310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7310,"column":0},"generated":{"line":7311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7311,"column":0},"generated":{"line":7312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7312,"column":0},"generated":{"line":7313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7313,"column":0},"generated":{"line":7314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7314,"column":0},"generated":{"line":7315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7315,"column":0},"generated":{"line":7316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7316,"column":0},"generated":{"line":7317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7317,"column":0},"generated":{"line":7318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7318,"column":0},"generated":{"line":7319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7319,"column":0},"generated":{"line":7320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7320,"column":0},"generated":{"line":7321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7321,"column":0},"generated":{"line":7322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7322,"column":0},"generated":{"line":7323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7323,"column":0},"generated":{"line":7324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7324,"column":0},"generated":{"line":7325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7325,"column":0},"generated":{"line":7326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7326,"column":0},"generated":{"line":7327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7327,"column":0},"generated":{"line":7328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7328,"column":0},"generated":{"line":7329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7329,"column":0},"generated":{"line":7330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7330,"column":0},"generated":{"line":7331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7331,"column":0},"generated":{"line":7332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7332,"column":0},"generated":{"line":7333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7333,"column":0},"generated":{"line":7334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7334,"column":0},"generated":{"line":7335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7335,"column":0},"generated":{"line":7336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7336,"column":0},"generated":{"line":7337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7337,"column":0},"generated":{"line":7338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7338,"column":0},"generated":{"line":7339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7339,"column":0},"generated":{"line":7340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7340,"column":0},"generated":{"line":7341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7341,"column":0},"generated":{"line":7342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7342,"column":0},"generated":{"line":7343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7343,"column":0},"generated":{"line":7344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7344,"column":0},"generated":{"line":7345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7345,"column":0},"generated":{"line":7346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7346,"column":0},"generated":{"line":7347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7347,"column":0},"generated":{"line":7348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7348,"column":0},"generated":{"line":7349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7349,"column":0},"generated":{"line":7350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7350,"column":0},"generated":{"line":7351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7351,"column":0},"generated":{"line":7352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7352,"column":0},"generated":{"line":7353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7353,"column":0},"generated":{"line":7354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7354,"column":0},"generated":{"line":7355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7355,"column":0},"generated":{"line":7356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7356,"column":0},"generated":{"line":7357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7357,"column":0},"generated":{"line":7358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7358,"column":0},"generated":{"line":7359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7359,"column":0},"generated":{"line":7360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7360,"column":0},"generated":{"line":7361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7361,"column":0},"generated":{"line":7362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7362,"column":0},"generated":{"line":7363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7363,"column":0},"generated":{"line":7364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7364,"column":0},"generated":{"line":7365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7365,"column":0},"generated":{"line":7366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7366,"column":0},"generated":{"line":7367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7367,"column":0},"generated":{"line":7368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7368,"column":0},"generated":{"line":7369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7369,"column":0},"generated":{"line":7370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7370,"column":0},"generated":{"line":7371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7371,"column":0},"generated":{"line":7372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7372,"column":0},"generated":{"line":7373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7373,"column":0},"generated":{"line":7374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7374,"column":0},"generated":{"line":7375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7375,"column":0},"generated":{"line":7376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7376,"column":0},"generated":{"line":7377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7377,"column":0},"generated":{"line":7378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7378,"column":0},"generated":{"line":7379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7379,"column":0},"generated":{"line":7380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7380,"column":0},"generated":{"line":7381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7381,"column":0},"generated":{"line":7382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7382,"column":0},"generated":{"line":7383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7383,"column":0},"generated":{"line":7384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7384,"column":0},"generated":{"line":7385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7385,"column":0},"generated":{"line":7386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7386,"column":0},"generated":{"line":7387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7387,"column":0},"generated":{"line":7388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7388,"column":0},"generated":{"line":7389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7389,"column":0},"generated":{"line":7390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7390,"column":0},"generated":{"line":7391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7391,"column":0},"generated":{"line":7392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7392,"column":0},"generated":{"line":7393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7393,"column":0},"generated":{"line":7394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7394,"column":0},"generated":{"line":7395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7395,"column":0},"generated":{"line":7396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7396,"column":0},"generated":{"line":7397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7397,"column":0},"generated":{"line":7398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7398,"column":0},"generated":{"line":7399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7399,"column":0},"generated":{"line":7400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7400,"column":0},"generated":{"line":7401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7401,"column":0},"generated":{"line":7402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7402,"column":0},"generated":{"line":7403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7403,"column":0},"generated":{"line":7404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7404,"column":0},"generated":{"line":7405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7405,"column":0},"generated":{"line":7406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7406,"column":0},"generated":{"line":7407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7407,"column":0},"generated":{"line":7408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7408,"column":0},"generated":{"line":7409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7409,"column":0},"generated":{"line":7410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7410,"column":0},"generated":{"line":7411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7411,"column":0},"generated":{"line":7412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7412,"column":0},"generated":{"line":7413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7413,"column":0},"generated":{"line":7414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7414,"column":0},"generated":{"line":7415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7415,"column":0},"generated":{"line":7416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7416,"column":0},"generated":{"line":7417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7417,"column":0},"generated":{"line":7418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7418,"column":0},"generated":{"line":7419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7419,"column":0},"generated":{"line":7420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7420,"column":0},"generated":{"line":7421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7421,"column":0},"generated":{"line":7422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7422,"column":0},"generated":{"line":7423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7423,"column":0},"generated":{"line":7424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7424,"column":0},"generated":{"line":7425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7425,"column":0},"generated":{"line":7426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7426,"column":0},"generated":{"line":7427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7427,"column":0},"generated":{"line":7428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7428,"column":0},"generated":{"line":7429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7429,"column":0},"generated":{"line":7430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7430,"column":0},"generated":{"line":7431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7431,"column":0},"generated":{"line":7432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7432,"column":0},"generated":{"line":7433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7433,"column":0},"generated":{"line":7434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7434,"column":0},"generated":{"line":7435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7435,"column":0},"generated":{"line":7436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7436,"column":0},"generated":{"line":7437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7437,"column":0},"generated":{"line":7438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7438,"column":0},"generated":{"line":7439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7439,"column":0},"generated":{"line":7440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7440,"column":0},"generated":{"line":7441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7441,"column":0},"generated":{"line":7442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7442,"column":0},"generated":{"line":7443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7443,"column":0},"generated":{"line":7444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7444,"column":0},"generated":{"line":7445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7445,"column":0},"generated":{"line":7446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7446,"column":0},"generated":{"line":7447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7447,"column":0},"generated":{"line":7448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7448,"column":0},"generated":{"line":7449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7449,"column":0},"generated":{"line":7450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7450,"column":0},"generated":{"line":7451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7451,"column":0},"generated":{"line":7452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7452,"column":0},"generated":{"line":7453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7453,"column":0},"generated":{"line":7454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7454,"column":0},"generated":{"line":7455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7455,"column":0},"generated":{"line":7456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7456,"column":0},"generated":{"line":7457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7457,"column":0},"generated":{"line":7458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7458,"column":0},"generated":{"line":7459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7459,"column":0},"generated":{"line":7460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7460,"column":0},"generated":{"line":7461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7461,"column":0},"generated":{"line":7462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7462,"column":0},"generated":{"line":7463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7463,"column":0},"generated":{"line":7464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7464,"column":0},"generated":{"line":7465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7465,"column":0},"generated":{"line":7466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7466,"column":0},"generated":{"line":7467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7467,"column":0},"generated":{"line":7468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7468,"column":0},"generated":{"line":7469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7469,"column":0},"generated":{"line":7470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7470,"column":0},"generated":{"line":7471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7471,"column":0},"generated":{"line":7472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7472,"column":0},"generated":{"line":7473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7473,"column":0},"generated":{"line":7474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7474,"column":0},"generated":{"line":7475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7475,"column":0},"generated":{"line":7476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7476,"column":0},"generated":{"line":7477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7477,"column":0},"generated":{"line":7478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7478,"column":0},"generated":{"line":7479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7479,"column":0},"generated":{"line":7480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7480,"column":0},"generated":{"line":7481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7481,"column":0},"generated":{"line":7482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7482,"column":0},"generated":{"line":7483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7483,"column":0},"generated":{"line":7484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7484,"column":0},"generated":{"line":7485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7485,"column":0},"generated":{"line":7486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7486,"column":0},"generated":{"line":7487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7487,"column":0},"generated":{"line":7488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7488,"column":0},"generated":{"line":7489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7489,"column":0},"generated":{"line":7490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7490,"column":0},"generated":{"line":7491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7491,"column":0},"generated":{"line":7492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7492,"column":0},"generated":{"line":7493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7493,"column":0},"generated":{"line":7494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7494,"column":0},"generated":{"line":7495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7495,"column":0},"generated":{"line":7496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7496,"column":0},"generated":{"line":7497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7497,"column":0},"generated":{"line":7498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7498,"column":0},"generated":{"line":7499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7499,"column":0},"generated":{"line":7500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7500,"column":0},"generated":{"line":7501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7501,"column":0},"generated":{"line":7502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7502,"column":0},"generated":{"line":7503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7503,"column":0},"generated":{"line":7504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7504,"column":0},"generated":{"line":7505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7505,"column":0},"generated":{"line":7506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7506,"column":0},"generated":{"line":7507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7507,"column":0},"generated":{"line":7508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7508,"column":0},"generated":{"line":7509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7509,"column":0},"generated":{"line":7510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7510,"column":0},"generated":{"line":7511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7511,"column":0},"generated":{"line":7512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7512,"column":0},"generated":{"line":7513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7513,"column":0},"generated":{"line":7514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7514,"column":0},"generated":{"line":7515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7515,"column":0},"generated":{"line":7516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7516,"column":0},"generated":{"line":7517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7517,"column":0},"generated":{"line":7518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7518,"column":0},"generated":{"line":7519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7519,"column":0},"generated":{"line":7520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7520,"column":0},"generated":{"line":7521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7521,"column":0},"generated":{"line":7522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7522,"column":0},"generated":{"line":7523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7523,"column":0},"generated":{"line":7524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7524,"column":0},"generated":{"line":7525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7525,"column":0},"generated":{"line":7526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7526,"column":0},"generated":{"line":7527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7527,"column":0},"generated":{"line":7528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7528,"column":0},"generated":{"line":7529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7529,"column":0},"generated":{"line":7530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7530,"column":0},"generated":{"line":7531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7531,"column":0},"generated":{"line":7532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7532,"column":0},"generated":{"line":7533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7533,"column":0},"generated":{"line":7534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7534,"column":0},"generated":{"line":7535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7535,"column":0},"generated":{"line":7536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7536,"column":0},"generated":{"line":7537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7537,"column":0},"generated":{"line":7538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7538,"column":0},"generated":{"line":7539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7539,"column":0},"generated":{"line":7540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7540,"column":0},"generated":{"line":7541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7541,"column":0},"generated":{"line":7542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7542,"column":0},"generated":{"line":7543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7543,"column":0},"generated":{"line":7544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7544,"column":0},"generated":{"line":7545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7545,"column":0},"generated":{"line":7546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7546,"column":0},"generated":{"line":7547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7547,"column":0},"generated":{"line":7548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7548,"column":0},"generated":{"line":7549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7549,"column":0},"generated":{"line":7550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7550,"column":0},"generated":{"line":7551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7551,"column":0},"generated":{"line":7552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7552,"column":0},"generated":{"line":7553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7553,"column":0},"generated":{"line":7554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7554,"column":0},"generated":{"line":7555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7555,"column":0},"generated":{"line":7556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7556,"column":0},"generated":{"line":7557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7557,"column":0},"generated":{"line":7558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7558,"column":0},"generated":{"line":7559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7559,"column":0},"generated":{"line":7560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7560,"column":0},"generated":{"line":7561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7561,"column":0},"generated":{"line":7562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7562,"column":0},"generated":{"line":7563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7563,"column":0},"generated":{"line":7564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7564,"column":0},"generated":{"line":7565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7565,"column":0},"generated":{"line":7566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7566,"column":0},"generated":{"line":7567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7567,"column":0},"generated":{"line":7568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7568,"column":0},"generated":{"line":7569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7569,"column":0},"generated":{"line":7570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7570,"column":0},"generated":{"line":7571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7571,"column":0},"generated":{"line":7572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7572,"column":0},"generated":{"line":7573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7573,"column":0},"generated":{"line":7574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7574,"column":0},"generated":{"line":7575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7575,"column":0},"generated":{"line":7576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7576,"column":0},"generated":{"line":7577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7577,"column":0},"generated":{"line":7578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7578,"column":0},"generated":{"line":7579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7579,"column":0},"generated":{"line":7580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7580,"column":0},"generated":{"line":7581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7581,"column":0},"generated":{"line":7582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7582,"column":0},"generated":{"line":7583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7583,"column":0},"generated":{"line":7584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7584,"column":0},"generated":{"line":7585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7585,"column":0},"generated":{"line":7586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7586,"column":0},"generated":{"line":7587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7587,"column":0},"generated":{"line":7588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7588,"column":0},"generated":{"line":7589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7589,"column":0},"generated":{"line":7590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7590,"column":0},"generated":{"line":7591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7591,"column":0},"generated":{"line":7592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7592,"column":0},"generated":{"line":7593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7593,"column":0},"generated":{"line":7594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7594,"column":0},"generated":{"line":7595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7595,"column":0},"generated":{"line":7596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7596,"column":0},"generated":{"line":7597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7597,"column":0},"generated":{"line":7598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7598,"column":0},"generated":{"line":7599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7599,"column":0},"generated":{"line":7600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7600,"column":0},"generated":{"line":7601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7601,"column":0},"generated":{"line":7602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7602,"column":0},"generated":{"line":7603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7603,"column":0},"generated":{"line":7604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7604,"column":0},"generated":{"line":7605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7605,"column":0},"generated":{"line":7606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7606,"column":0},"generated":{"line":7607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7607,"column":0},"generated":{"line":7608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7608,"column":0},"generated":{"line":7609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7609,"column":0},"generated":{"line":7610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7610,"column":0},"generated":{"line":7611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7611,"column":0},"generated":{"line":7612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7612,"column":0},"generated":{"line":7613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7613,"column":0},"generated":{"line":7614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7614,"column":0},"generated":{"line":7615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7615,"column":0},"generated":{"line":7616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7616,"column":0},"generated":{"line":7617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7617,"column":0},"generated":{"line":7618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7618,"column":0},"generated":{"line":7619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7619,"column":0},"generated":{"line":7620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7620,"column":0},"generated":{"line":7621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7621,"column":0},"generated":{"line":7622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7622,"column":0},"generated":{"line":7623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7623,"column":0},"generated":{"line":7624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7624,"column":0},"generated":{"line":7625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7625,"column":0},"generated":{"line":7626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7626,"column":0},"generated":{"line":7627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7627,"column":0},"generated":{"line":7628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7628,"column":0},"generated":{"line":7629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7629,"column":0},"generated":{"line":7630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7630,"column":0},"generated":{"line":7631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7631,"column":0},"generated":{"line":7632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7632,"column":0},"generated":{"line":7633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7633,"column":0},"generated":{"line":7634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7634,"column":0},"generated":{"line":7635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7635,"column":0},"generated":{"line":7636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7636,"column":0},"generated":{"line":7637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7637,"column":0},"generated":{"line":7638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7638,"column":0},"generated":{"line":7639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7639,"column":0},"generated":{"line":7640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7640,"column":0},"generated":{"line":7641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7641,"column":0},"generated":{"line":7642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7642,"column":0},"generated":{"line":7643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7643,"column":0},"generated":{"line":7644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7644,"column":0},"generated":{"line":7645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7645,"column":0},"generated":{"line":7646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7646,"column":0},"generated":{"line":7647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7647,"column":0},"generated":{"line":7648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7648,"column":0},"generated":{"line":7649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7649,"column":0},"generated":{"line":7650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7650,"column":0},"generated":{"line":7651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7651,"column":0},"generated":{"line":7652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7652,"column":0},"generated":{"line":7653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7653,"column":0},"generated":{"line":7654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7654,"column":0},"generated":{"line":7655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7655,"column":0},"generated":{"line":7656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7656,"column":0},"generated":{"line":7657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7657,"column":0},"generated":{"line":7658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7658,"column":0},"generated":{"line":7659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7659,"column":0},"generated":{"line":7660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7660,"column":0},"generated":{"line":7661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7661,"column":0},"generated":{"line":7662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7662,"column":0},"generated":{"line":7663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7663,"column":0},"generated":{"line":7664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7664,"column":0},"generated":{"line":7665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7665,"column":0},"generated":{"line":7666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7666,"column":0},"generated":{"line":7667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7667,"column":0},"generated":{"line":7668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7668,"column":0},"generated":{"line":7669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7669,"column":0},"generated":{"line":7670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7670,"column":0},"generated":{"line":7671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7671,"column":0},"generated":{"line":7672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7672,"column":0},"generated":{"line":7673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7673,"column":0},"generated":{"line":7674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7674,"column":0},"generated":{"line":7675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7675,"column":0},"generated":{"line":7676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7676,"column":0},"generated":{"line":7677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7677,"column":0},"generated":{"line":7678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7678,"column":0},"generated":{"line":7679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7679,"column":0},"generated":{"line":7680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7680,"column":0},"generated":{"line":7681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7681,"column":0},"generated":{"line":7682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7682,"column":0},"generated":{"line":7683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7683,"column":0},"generated":{"line":7684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7684,"column":0},"generated":{"line":7685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7685,"column":0},"generated":{"line":7686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7686,"column":0},"generated":{"line":7687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7687,"column":0},"generated":{"line":7688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7688,"column":0},"generated":{"line":7689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7689,"column":0},"generated":{"line":7690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7690,"column":0},"generated":{"line":7691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7691,"column":0},"generated":{"line":7692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7692,"column":0},"generated":{"line":7693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7693,"column":0},"generated":{"line":7694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7694,"column":0},"generated":{"line":7695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7695,"column":0},"generated":{"line":7696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7696,"column":0},"generated":{"line":7697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7697,"column":0},"generated":{"line":7698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7698,"column":0},"generated":{"line":7699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7699,"column":0},"generated":{"line":7700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7700,"column":0},"generated":{"line":7701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7701,"column":0},"generated":{"line":7702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7702,"column":0},"generated":{"line":7703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7703,"column":0},"generated":{"line":7704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7704,"column":0},"generated":{"line":7705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7705,"column":0},"generated":{"line":7706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7706,"column":0},"generated":{"line":7707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7707,"column":0},"generated":{"line":7708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7708,"column":0},"generated":{"line":7709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7709,"column":0},"generated":{"line":7710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7710,"column":0},"generated":{"line":7711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7711,"column":0},"generated":{"line":7712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7712,"column":0},"generated":{"line":7713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7713,"column":0},"generated":{"line":7714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7714,"column":0},"generated":{"line":7715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7715,"column":0},"generated":{"line":7716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7716,"column":0},"generated":{"line":7717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7717,"column":0},"generated":{"line":7718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7718,"column":0},"generated":{"line":7719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7719,"column":0},"generated":{"line":7720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7720,"column":0},"generated":{"line":7721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7721,"column":0},"generated":{"line":7722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7722,"column":0},"generated":{"line":7723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7723,"column":0},"generated":{"line":7724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7724,"column":0},"generated":{"line":7725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7725,"column":0},"generated":{"line":7726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7726,"column":0},"generated":{"line":7727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7727,"column":0},"generated":{"line":7728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7728,"column":0},"generated":{"line":7729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7729,"column":0},"generated":{"line":7730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7730,"column":0},"generated":{"line":7731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7731,"column":0},"generated":{"line":7732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7732,"column":0},"generated":{"line":7733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7733,"column":0},"generated":{"line":7734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7734,"column":0},"generated":{"line":7735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7735,"column":0},"generated":{"line":7736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7736,"column":0},"generated":{"line":7737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7737,"column":0},"generated":{"line":7738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7738,"column":0},"generated":{"line":7739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7739,"column":0},"generated":{"line":7740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7740,"column":0},"generated":{"line":7741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7741,"column":0},"generated":{"line":7742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7742,"column":0},"generated":{"line":7743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7743,"column":0},"generated":{"line":7744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7744,"column":0},"generated":{"line":7745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7745,"column":0},"generated":{"line":7746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7746,"column":0},"generated":{"line":7747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7747,"column":0},"generated":{"line":7748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7748,"column":0},"generated":{"line":7749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7749,"column":0},"generated":{"line":7750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7750,"column":0},"generated":{"line":7751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7751,"column":0},"generated":{"line":7752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7752,"column":0},"generated":{"line":7753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7753,"column":0},"generated":{"line":7754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7754,"column":0},"generated":{"line":7755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7755,"column":0},"generated":{"line":7756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7756,"column":0},"generated":{"line":7757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7757,"column":0},"generated":{"line":7758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7758,"column":0},"generated":{"line":7759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7759,"column":0},"generated":{"line":7760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7760,"column":0},"generated":{"line":7761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7761,"column":0},"generated":{"line":7762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7762,"column":0},"generated":{"line":7763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7763,"column":0},"generated":{"line":7764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7764,"column":0},"generated":{"line":7765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7765,"column":0},"generated":{"line":7766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7766,"column":0},"generated":{"line":7767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7767,"column":0},"generated":{"line":7768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7768,"column":0},"generated":{"line":7769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7769,"column":0},"generated":{"line":7770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7770,"column":0},"generated":{"line":7771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7771,"column":0},"generated":{"line":7772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7772,"column":0},"generated":{"line":7773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7773,"column":0},"generated":{"line":7774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7774,"column":0},"generated":{"line":7775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7775,"column":0},"generated":{"line":7776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7776,"column":0},"generated":{"line":7777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7777,"column":0},"generated":{"line":7778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7778,"column":0},"generated":{"line":7779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7779,"column":0},"generated":{"line":7780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7780,"column":0},"generated":{"line":7781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7781,"column":0},"generated":{"line":7782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7782,"column":0},"generated":{"line":7783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7783,"column":0},"generated":{"line":7784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7784,"column":0},"generated":{"line":7785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7785,"column":0},"generated":{"line":7786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7786,"column":0},"generated":{"line":7787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7787,"column":0},"generated":{"line":7788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7788,"column":0},"generated":{"line":7789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7789,"column":0},"generated":{"line":7790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7790,"column":0},"generated":{"line":7791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7791,"column":0},"generated":{"line":7792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7792,"column":0},"generated":{"line":7793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7793,"column":0},"generated":{"line":7794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7794,"column":0},"generated":{"line":7795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7795,"column":0},"generated":{"line":7796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7796,"column":0},"generated":{"line":7797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7797,"column":0},"generated":{"line":7798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7798,"column":0},"generated":{"line":7799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7799,"column":0},"generated":{"line":7800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7800,"column":0},"generated":{"line":7801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7801,"column":0},"generated":{"line":7802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7802,"column":0},"generated":{"line":7803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7803,"column":0},"generated":{"line":7804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7804,"column":0},"generated":{"line":7805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7805,"column":0},"generated":{"line":7806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7806,"column":0},"generated":{"line":7807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7807,"column":0},"generated":{"line":7808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7808,"column":0},"generated":{"line":7809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7809,"column":0},"generated":{"line":7810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7810,"column":0},"generated":{"line":7811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7811,"column":0},"generated":{"line":7812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7812,"column":0},"generated":{"line":7813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7813,"column":0},"generated":{"line":7814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7814,"column":0},"generated":{"line":7815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7815,"column":0},"generated":{"line":7816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7816,"column":0},"generated":{"line":7817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7817,"column":0},"generated":{"line":7818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7818,"column":0},"generated":{"line":7819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7819,"column":0},"generated":{"line":7820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7820,"column":0},"generated":{"line":7821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7821,"column":0},"generated":{"line":7822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7822,"column":0},"generated":{"line":7823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7823,"column":0},"generated":{"line":7824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7824,"column":0},"generated":{"line":7825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7825,"column":0},"generated":{"line":7826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7826,"column":0},"generated":{"line":7827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7827,"column":0},"generated":{"line":7828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7828,"column":0},"generated":{"line":7829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7829,"column":0},"generated":{"line":7830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7830,"column":0},"generated":{"line":7831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7831,"column":0},"generated":{"line":7832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7832,"column":0},"generated":{"line":7833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7833,"column":0},"generated":{"line":7834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7834,"column":0},"generated":{"line":7835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7835,"column":0},"generated":{"line":7836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7836,"column":0},"generated":{"line":7837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7837,"column":0},"generated":{"line":7838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7838,"column":0},"generated":{"line":7839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7839,"column":0},"generated":{"line":7840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7840,"column":0},"generated":{"line":7841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7841,"column":0},"generated":{"line":7842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7842,"column":0},"generated":{"line":7843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7843,"column":0},"generated":{"line":7844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7844,"column":0},"generated":{"line":7845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7845,"column":0},"generated":{"line":7846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7846,"column":0},"generated":{"line":7847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7847,"column":0},"generated":{"line":7848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7848,"column":0},"generated":{"line":7849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7849,"column":0},"generated":{"line":7850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7850,"column":0},"generated":{"line":7851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7851,"column":0},"generated":{"line":7852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7852,"column":0},"generated":{"line":7853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7853,"column":0},"generated":{"line":7854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7854,"column":0},"generated":{"line":7855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7855,"column":0},"generated":{"line":7856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7856,"column":0},"generated":{"line":7857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7857,"column":0},"generated":{"line":7858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7858,"column":0},"generated":{"line":7859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7859,"column":0},"generated":{"line":7860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7860,"column":0},"generated":{"line":7861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7861,"column":0},"generated":{"line":7862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7862,"column":0},"generated":{"line":7863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7863,"column":0},"generated":{"line":7864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7864,"column":0},"generated":{"line":7865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7865,"column":0},"generated":{"line":7866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7866,"column":0},"generated":{"line":7867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7867,"column":0},"generated":{"line":7868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7868,"column":0},"generated":{"line":7869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7869,"column":0},"generated":{"line":7870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7870,"column":0},"generated":{"line":7871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7871,"column":0},"generated":{"line":7872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7872,"column":0},"generated":{"line":7873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7873,"column":0},"generated":{"line":7874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7874,"column":0},"generated":{"line":7875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7875,"column":0},"generated":{"line":7876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7876,"column":0},"generated":{"line":7877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7877,"column":0},"generated":{"line":7878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7878,"column":0},"generated":{"line":7879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7879,"column":0},"generated":{"line":7880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7880,"column":0},"generated":{"line":7881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7881,"column":0},"generated":{"line":7882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7882,"column":0},"generated":{"line":7883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7883,"column":0},"generated":{"line":7884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7884,"column":0},"generated":{"line":7885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7885,"column":0},"generated":{"line":7886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7886,"column":0},"generated":{"line":7887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7887,"column":0},"generated":{"line":7888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7888,"column":0},"generated":{"line":7889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7889,"column":0},"generated":{"line":7890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7890,"column":0},"generated":{"line":7891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7891,"column":0},"generated":{"line":7892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7892,"column":0},"generated":{"line":7893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7893,"column":0},"generated":{"line":7894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7894,"column":0},"generated":{"line":7895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7895,"column":0},"generated":{"line":7896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7896,"column":0},"generated":{"line":7897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7897,"column":0},"generated":{"line":7898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7898,"column":0},"generated":{"line":7899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7899,"column":0},"generated":{"line":7900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7900,"column":0},"generated":{"line":7901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7901,"column":0},"generated":{"line":7902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7902,"column":0},"generated":{"line":7903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7903,"column":0},"generated":{"line":7904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7904,"column":0},"generated":{"line":7905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7905,"column":0},"generated":{"line":7906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7906,"column":0},"generated":{"line":7907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7907,"column":0},"generated":{"line":7908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7908,"column":0},"generated":{"line":7909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7909,"column":0},"generated":{"line":7910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7910,"column":0},"generated":{"line":7911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7911,"column":0},"generated":{"line":7912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7912,"column":0},"generated":{"line":7913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7913,"column":0},"generated":{"line":7914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7914,"column":0},"generated":{"line":7915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7915,"column":0},"generated":{"line":7916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7916,"column":0},"generated":{"line":7917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7917,"column":0},"generated":{"line":7918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7918,"column":0},"generated":{"line":7919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7919,"column":0},"generated":{"line":7920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7920,"column":0},"generated":{"line":7921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7921,"column":0},"generated":{"line":7922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7922,"column":0},"generated":{"line":7923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7923,"column":0},"generated":{"line":7924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7924,"column":0},"generated":{"line":7925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7925,"column":0},"generated":{"line":7926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7926,"column":0},"generated":{"line":7927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7927,"column":0},"generated":{"line":7928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7928,"column":0},"generated":{"line":7929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7929,"column":0},"generated":{"line":7930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7930,"column":0},"generated":{"line":7931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7931,"column":0},"generated":{"line":7932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7932,"column":0},"generated":{"line":7933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7933,"column":0},"generated":{"line":7934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7934,"column":0},"generated":{"line":7935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7935,"column":0},"generated":{"line":7936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7936,"column":0},"generated":{"line":7937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7937,"column":0},"generated":{"line":7938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7938,"column":0},"generated":{"line":7939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7939,"column":0},"generated":{"line":7940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7940,"column":0},"generated":{"line":7941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7941,"column":0},"generated":{"line":7942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7942,"column":0},"generated":{"line":7943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7943,"column":0},"generated":{"line":7944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7944,"column":0},"generated":{"line":7945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7945,"column":0},"generated":{"line":7946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7946,"column":0},"generated":{"line":7947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7947,"column":0},"generated":{"line":7948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7948,"column":0},"generated":{"line":7949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7949,"column":0},"generated":{"line":7950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7950,"column":0},"generated":{"line":7951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7951,"column":0},"generated":{"line":7952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7952,"column":0},"generated":{"line":7953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7953,"column":0},"generated":{"line":7954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7954,"column":0},"generated":{"line":7955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7955,"column":0},"generated":{"line":7956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7956,"column":0},"generated":{"line":7957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7957,"column":0},"generated":{"line":7958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7958,"column":0},"generated":{"line":7959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7959,"column":0},"generated":{"line":7960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7960,"column":0},"generated":{"line":7961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7961,"column":0},"generated":{"line":7962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7962,"column":0},"generated":{"line":7963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7963,"column":0},"generated":{"line":7964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7964,"column":0},"generated":{"line":7965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7965,"column":0},"generated":{"line":7966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7966,"column":0},"generated":{"line":7967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7967,"column":0},"generated":{"line":7968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7968,"column":0},"generated":{"line":7969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7969,"column":0},"generated":{"line":7970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7970,"column":0},"generated":{"line":7971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7971,"column":0},"generated":{"line":7972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7972,"column":0},"generated":{"line":7973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7973,"column":0},"generated":{"line":7974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7974,"column":0},"generated":{"line":7975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7975,"column":0},"generated":{"line":7976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7976,"column":0},"generated":{"line":7977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7977,"column":0},"generated":{"line":7978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7978,"column":0},"generated":{"line":7979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7979,"column":0},"generated":{"line":7980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7980,"column":0},"generated":{"line":7981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7981,"column":0},"generated":{"line":7982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7982,"column":0},"generated":{"line":7983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7983,"column":0},"generated":{"line":7984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7984,"column":0},"generated":{"line":7985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7985,"column":0},"generated":{"line":7986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7986,"column":0},"generated":{"line":7987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7987,"column":0},"generated":{"line":7988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7988,"column":0},"generated":{"line":7989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7989,"column":0},"generated":{"line":7990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7990,"column":0},"generated":{"line":7991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7991,"column":0},"generated":{"line":7992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7992,"column":0},"generated":{"line":7993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7993,"column":0},"generated":{"line":7994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7994,"column":0},"generated":{"line":7995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7995,"column":0},"generated":{"line":7996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7996,"column":0},"generated":{"line":7997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7997,"column":0},"generated":{"line":7998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7998,"column":0},"generated":{"line":7999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":7999,"column":0},"generated":{"line":8000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8000,"column":0},"generated":{"line":8001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8001,"column":0},"generated":{"line":8002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8002,"column":0},"generated":{"line":8003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8003,"column":0},"generated":{"line":8004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8004,"column":0},"generated":{"line":8005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8005,"column":0},"generated":{"line":8006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8006,"column":0},"generated":{"line":8007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8007,"column":0},"generated":{"line":8008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8008,"column":0},"generated":{"line":8009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8009,"column":0},"generated":{"line":8010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8010,"column":0},"generated":{"line":8011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8011,"column":0},"generated":{"line":8012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8012,"column":0},"generated":{"line":8013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8013,"column":0},"generated":{"line":8014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8014,"column":0},"generated":{"line":8015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8015,"column":0},"generated":{"line":8016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8016,"column":0},"generated":{"line":8017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8017,"column":0},"generated":{"line":8018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8018,"column":0},"generated":{"line":8019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8019,"column":0},"generated":{"line":8020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8020,"column":0},"generated":{"line":8021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8021,"column":0},"generated":{"line":8022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8022,"column":0},"generated":{"line":8023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8023,"column":0},"generated":{"line":8024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8024,"column":0},"generated":{"line":8025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8025,"column":0},"generated":{"line":8026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8026,"column":0},"generated":{"line":8027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8027,"column":0},"generated":{"line":8028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8028,"column":0},"generated":{"line":8029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8029,"column":0},"generated":{"line":8030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8030,"column":0},"generated":{"line":8031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8031,"column":0},"generated":{"line":8032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8032,"column":0},"generated":{"line":8033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8033,"column":0},"generated":{"line":8034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8034,"column":0},"generated":{"line":8035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8035,"column":0},"generated":{"line":8036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8036,"column":0},"generated":{"line":8037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8037,"column":0},"generated":{"line":8038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8038,"column":0},"generated":{"line":8039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8039,"column":0},"generated":{"line":8040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8040,"column":0},"generated":{"line":8041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8041,"column":0},"generated":{"line":8042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8042,"column":0},"generated":{"line":8043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8043,"column":0},"generated":{"line":8044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8044,"column":0},"generated":{"line":8045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8045,"column":0},"generated":{"line":8046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8046,"column":0},"generated":{"line":8047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8047,"column":0},"generated":{"line":8048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8048,"column":0},"generated":{"line":8049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8049,"column":0},"generated":{"line":8050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8050,"column":0},"generated":{"line":8051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8051,"column":0},"generated":{"line":8052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8052,"column":0},"generated":{"line":8053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8053,"column":0},"generated":{"line":8054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8054,"column":0},"generated":{"line":8055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8055,"column":0},"generated":{"line":8056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8056,"column":0},"generated":{"line":8057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8057,"column":0},"generated":{"line":8058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8058,"column":0},"generated":{"line":8059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8059,"column":0},"generated":{"line":8060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8060,"column":0},"generated":{"line":8061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8061,"column":0},"generated":{"line":8062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8062,"column":0},"generated":{"line":8063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8063,"column":0},"generated":{"line":8064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8064,"column":0},"generated":{"line":8065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8065,"column":0},"generated":{"line":8066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8066,"column":0},"generated":{"line":8067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8067,"column":0},"generated":{"line":8068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8068,"column":0},"generated":{"line":8069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8069,"column":0},"generated":{"line":8070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8070,"column":0},"generated":{"line":8071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8071,"column":0},"generated":{"line":8072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8072,"column":0},"generated":{"line":8073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8073,"column":0},"generated":{"line":8074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8074,"column":0},"generated":{"line":8075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8075,"column":0},"generated":{"line":8076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8076,"column":0},"generated":{"line":8077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8077,"column":0},"generated":{"line":8078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8078,"column":0},"generated":{"line":8079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8079,"column":0},"generated":{"line":8080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8080,"column":0},"generated":{"line":8081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8081,"column":0},"generated":{"line":8082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8082,"column":0},"generated":{"line":8083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8083,"column":0},"generated":{"line":8084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8084,"column":0},"generated":{"line":8085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8085,"column":0},"generated":{"line":8086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8086,"column":0},"generated":{"line":8087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8087,"column":0},"generated":{"line":8088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8088,"column":0},"generated":{"line":8089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8089,"column":0},"generated":{"line":8090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8090,"column":0},"generated":{"line":8091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8091,"column":0},"generated":{"line":8092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8092,"column":0},"generated":{"line":8093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8093,"column":0},"generated":{"line":8094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8094,"column":0},"generated":{"line":8095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8095,"column":0},"generated":{"line":8096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8096,"column":0},"generated":{"line":8097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8097,"column":0},"generated":{"line":8098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8098,"column":0},"generated":{"line":8099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8099,"column":0},"generated":{"line":8100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8100,"column":0},"generated":{"line":8101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8101,"column":0},"generated":{"line":8102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8102,"column":0},"generated":{"line":8103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8103,"column":0},"generated":{"line":8104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8104,"column":0},"generated":{"line":8105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8105,"column":0},"generated":{"line":8106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8106,"column":0},"generated":{"line":8107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8107,"column":0},"generated":{"line":8108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8108,"column":0},"generated":{"line":8109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8109,"column":0},"generated":{"line":8110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8110,"column":0},"generated":{"line":8111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8111,"column":0},"generated":{"line":8112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8112,"column":0},"generated":{"line":8113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8113,"column":0},"generated":{"line":8114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8114,"column":0},"generated":{"line":8115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8115,"column":0},"generated":{"line":8116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8116,"column":0},"generated":{"line":8117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8117,"column":0},"generated":{"line":8118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8118,"column":0},"generated":{"line":8119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8119,"column":0},"generated":{"line":8120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8120,"column":0},"generated":{"line":8121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8121,"column":0},"generated":{"line":8122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8122,"column":0},"generated":{"line":8123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8123,"column":0},"generated":{"line":8124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8124,"column":0},"generated":{"line":8125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8125,"column":0},"generated":{"line":8126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8126,"column":0},"generated":{"line":8127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8127,"column":0},"generated":{"line":8128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8128,"column":0},"generated":{"line":8129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8129,"column":0},"generated":{"line":8130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8130,"column":0},"generated":{"line":8131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8131,"column":0},"generated":{"line":8132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8132,"column":0},"generated":{"line":8133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8133,"column":0},"generated":{"line":8134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8134,"column":0},"generated":{"line":8135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8135,"column":0},"generated":{"line":8136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8136,"column":0},"generated":{"line":8137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8137,"column":0},"generated":{"line":8138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8138,"column":0},"generated":{"line":8139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8139,"column":0},"generated":{"line":8140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8140,"column":0},"generated":{"line":8141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8141,"column":0},"generated":{"line":8142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8142,"column":0},"generated":{"line":8143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8143,"column":0},"generated":{"line":8144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8144,"column":0},"generated":{"line":8145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8145,"column":0},"generated":{"line":8146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8146,"column":0},"generated":{"line":8147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8147,"column":0},"generated":{"line":8148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8148,"column":0},"generated":{"line":8149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8149,"column":0},"generated":{"line":8150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8150,"column":0},"generated":{"line":8151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8151,"column":0},"generated":{"line":8152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8152,"column":0},"generated":{"line":8153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8153,"column":0},"generated":{"line":8154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8154,"column":0},"generated":{"line":8155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8155,"column":0},"generated":{"line":8156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8156,"column":0},"generated":{"line":8157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8157,"column":0},"generated":{"line":8158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8158,"column":0},"generated":{"line":8159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8159,"column":0},"generated":{"line":8160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8160,"column":0},"generated":{"line":8161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8161,"column":0},"generated":{"line":8162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8162,"column":0},"generated":{"line":8163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8163,"column":0},"generated":{"line":8164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8164,"column":0},"generated":{"line":8165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8165,"column":0},"generated":{"line":8166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8166,"column":0},"generated":{"line":8167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8167,"column":0},"generated":{"line":8168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8168,"column":0},"generated":{"line":8169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8169,"column":0},"generated":{"line":8170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8170,"column":0},"generated":{"line":8171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8171,"column":0},"generated":{"line":8172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8172,"column":0},"generated":{"line":8173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8173,"column":0},"generated":{"line":8174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8174,"column":0},"generated":{"line":8175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8175,"column":0},"generated":{"line":8176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8176,"column":0},"generated":{"line":8177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8177,"column":0},"generated":{"line":8178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8178,"column":0},"generated":{"line":8179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8179,"column":0},"generated":{"line":8180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8180,"column":0},"generated":{"line":8181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8181,"column":0},"generated":{"line":8182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8182,"column":0},"generated":{"line":8183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8183,"column":0},"generated":{"line":8184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8184,"column":0},"generated":{"line":8185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8185,"column":0},"generated":{"line":8186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8186,"column":0},"generated":{"line":8187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8187,"column":0},"generated":{"line":8188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8188,"column":0},"generated":{"line":8189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8189,"column":0},"generated":{"line":8190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8190,"column":0},"generated":{"line":8191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8191,"column":0},"generated":{"line":8192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8192,"column":0},"generated":{"line":8193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8193,"column":0},"generated":{"line":8194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8194,"column":0},"generated":{"line":8195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8195,"column":0},"generated":{"line":8196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8196,"column":0},"generated":{"line":8197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8197,"column":0},"generated":{"line":8198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8198,"column":0},"generated":{"line":8199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8199,"column":0},"generated":{"line":8200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8200,"column":0},"generated":{"line":8201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8201,"column":0},"generated":{"line":8202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8202,"column":0},"generated":{"line":8203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8203,"column":0},"generated":{"line":8204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8204,"column":0},"generated":{"line":8205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8205,"column":0},"generated":{"line":8206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8206,"column":0},"generated":{"line":8207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8207,"column":0},"generated":{"line":8208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8208,"column":0},"generated":{"line":8209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8209,"column":0},"generated":{"line":8210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8210,"column":0},"generated":{"line":8211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8211,"column":0},"generated":{"line":8212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8212,"column":0},"generated":{"line":8213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8213,"column":0},"generated":{"line":8214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8214,"column":0},"generated":{"line":8215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8215,"column":0},"generated":{"line":8216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8216,"column":0},"generated":{"line":8217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8217,"column":0},"generated":{"line":8218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8218,"column":0},"generated":{"line":8219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8219,"column":0},"generated":{"line":8220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8220,"column":0},"generated":{"line":8221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8221,"column":0},"generated":{"line":8222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8222,"column":0},"generated":{"line":8223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8223,"column":0},"generated":{"line":8224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8224,"column":0},"generated":{"line":8225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8225,"column":0},"generated":{"line":8226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8226,"column":0},"generated":{"line":8227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8227,"column":0},"generated":{"line":8228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8228,"column":0},"generated":{"line":8229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8229,"column":0},"generated":{"line":8230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8230,"column":0},"generated":{"line":8231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8231,"column":0},"generated":{"line":8232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8232,"column":0},"generated":{"line":8233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8233,"column":0},"generated":{"line":8234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8234,"column":0},"generated":{"line":8235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8235,"column":0},"generated":{"line":8236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8236,"column":0},"generated":{"line":8237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8237,"column":0},"generated":{"line":8238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8238,"column":0},"generated":{"line":8239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8239,"column":0},"generated":{"line":8240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8240,"column":0},"generated":{"line":8241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8241,"column":0},"generated":{"line":8242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8242,"column":0},"generated":{"line":8243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8243,"column":0},"generated":{"line":8244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8244,"column":0},"generated":{"line":8245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8245,"column":0},"generated":{"line":8246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8246,"column":0},"generated":{"line":8247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8247,"column":0},"generated":{"line":8248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8248,"column":0},"generated":{"line":8249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8249,"column":0},"generated":{"line":8250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8250,"column":0},"generated":{"line":8251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8251,"column":0},"generated":{"line":8252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8252,"column":0},"generated":{"line":8253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8253,"column":0},"generated":{"line":8254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8254,"column":0},"generated":{"line":8255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8255,"column":0},"generated":{"line":8256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8256,"column":0},"generated":{"line":8257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8257,"column":0},"generated":{"line":8258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8258,"column":0},"generated":{"line":8259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8259,"column":0},"generated":{"line":8260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8260,"column":0},"generated":{"line":8261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8261,"column":0},"generated":{"line":8262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8262,"column":0},"generated":{"line":8263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8263,"column":0},"generated":{"line":8264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8264,"column":0},"generated":{"line":8265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8265,"column":0},"generated":{"line":8266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8266,"column":0},"generated":{"line":8267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8267,"column":0},"generated":{"line":8268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8268,"column":0},"generated":{"line":8269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8269,"column":0},"generated":{"line":8270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8270,"column":0},"generated":{"line":8271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8271,"column":0},"generated":{"line":8272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8272,"column":0},"generated":{"line":8273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8273,"column":0},"generated":{"line":8274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8274,"column":0},"generated":{"line":8275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8275,"column":0},"generated":{"line":8276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8276,"column":0},"generated":{"line":8277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8277,"column":0},"generated":{"line":8278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8278,"column":0},"generated":{"line":8279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8279,"column":0},"generated":{"line":8280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8280,"column":0},"generated":{"line":8281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8281,"column":0},"generated":{"line":8282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8282,"column":0},"generated":{"line":8283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8283,"column":0},"generated":{"line":8284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8284,"column":0},"generated":{"line":8285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8285,"column":0},"generated":{"line":8286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8286,"column":0},"generated":{"line":8287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8287,"column":0},"generated":{"line":8288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8288,"column":0},"generated":{"line":8289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8289,"column":0},"generated":{"line":8290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8290,"column":0},"generated":{"line":8291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8291,"column":0},"generated":{"line":8292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8292,"column":0},"generated":{"line":8293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8293,"column":0},"generated":{"line":8294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8294,"column":0},"generated":{"line":8295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8295,"column":0},"generated":{"line":8296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8296,"column":0},"generated":{"line":8297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8297,"column":0},"generated":{"line":8298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8298,"column":0},"generated":{"line":8299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8299,"column":0},"generated":{"line":8300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8300,"column":0},"generated":{"line":8301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8301,"column":0},"generated":{"line":8302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8302,"column":0},"generated":{"line":8303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8303,"column":0},"generated":{"line":8304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8304,"column":0},"generated":{"line":8305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8305,"column":0},"generated":{"line":8306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8306,"column":0},"generated":{"line":8307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8307,"column":0},"generated":{"line":8308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8308,"column":0},"generated":{"line":8309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8309,"column":0},"generated":{"line":8310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8310,"column":0},"generated":{"line":8311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8311,"column":0},"generated":{"line":8312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8312,"column":0},"generated":{"line":8313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8313,"column":0},"generated":{"line":8314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8314,"column":0},"generated":{"line":8315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8315,"column":0},"generated":{"line":8316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8316,"column":0},"generated":{"line":8317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8317,"column":0},"generated":{"line":8318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8318,"column":0},"generated":{"line":8319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8319,"column":0},"generated":{"line":8320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8320,"column":0},"generated":{"line":8321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8321,"column":0},"generated":{"line":8322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8322,"column":0},"generated":{"line":8323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8323,"column":0},"generated":{"line":8324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8324,"column":0},"generated":{"line":8325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8325,"column":0},"generated":{"line":8326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8326,"column":0},"generated":{"line":8327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8327,"column":0},"generated":{"line":8328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8328,"column":0},"generated":{"line":8329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8329,"column":0},"generated":{"line":8330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8330,"column":0},"generated":{"line":8331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8331,"column":0},"generated":{"line":8332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8332,"column":0},"generated":{"line":8333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8333,"column":0},"generated":{"line":8334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8334,"column":0},"generated":{"line":8335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8335,"column":0},"generated":{"line":8336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8336,"column":0},"generated":{"line":8337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8337,"column":0},"generated":{"line":8338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8338,"column":0},"generated":{"line":8339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8339,"column":0},"generated":{"line":8340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8340,"column":0},"generated":{"line":8341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8341,"column":0},"generated":{"line":8342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8342,"column":0},"generated":{"line":8343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8343,"column":0},"generated":{"line":8344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8344,"column":0},"generated":{"line":8345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8345,"column":0},"generated":{"line":8346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8346,"column":0},"generated":{"line":8347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8347,"column":0},"generated":{"line":8348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8348,"column":0},"generated":{"line":8349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8349,"column":0},"generated":{"line":8350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8350,"column":0},"generated":{"line":8351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8351,"column":0},"generated":{"line":8352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8352,"column":0},"generated":{"line":8353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8353,"column":0},"generated":{"line":8354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8354,"column":0},"generated":{"line":8355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8355,"column":0},"generated":{"line":8356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8356,"column":0},"generated":{"line":8357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8357,"column":0},"generated":{"line":8358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8358,"column":0},"generated":{"line":8359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8359,"column":0},"generated":{"line":8360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8360,"column":0},"generated":{"line":8361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8361,"column":0},"generated":{"line":8362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8362,"column":0},"generated":{"line":8363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8363,"column":0},"generated":{"line":8364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8364,"column":0},"generated":{"line":8365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8365,"column":0},"generated":{"line":8366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8366,"column":0},"generated":{"line":8367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8367,"column":0},"generated":{"line":8368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8368,"column":0},"generated":{"line":8369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8369,"column":0},"generated":{"line":8370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8370,"column":0},"generated":{"line":8371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8371,"column":0},"generated":{"line":8372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8372,"column":0},"generated":{"line":8373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8373,"column":0},"generated":{"line":8374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8374,"column":0},"generated":{"line":8375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8375,"column":0},"generated":{"line":8376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8376,"column":0},"generated":{"line":8377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8377,"column":0},"generated":{"line":8378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8378,"column":0},"generated":{"line":8379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8379,"column":0},"generated":{"line":8380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8380,"column":0},"generated":{"line":8381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8381,"column":0},"generated":{"line":8382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8382,"column":0},"generated":{"line":8383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8383,"column":0},"generated":{"line":8384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8384,"column":0},"generated":{"line":8385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8385,"column":0},"generated":{"line":8386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8386,"column":0},"generated":{"line":8387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8387,"column":0},"generated":{"line":8388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8388,"column":0},"generated":{"line":8389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8389,"column":0},"generated":{"line":8390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8390,"column":0},"generated":{"line":8391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8391,"column":0},"generated":{"line":8392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8392,"column":0},"generated":{"line":8393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8393,"column":0},"generated":{"line":8394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8394,"column":0},"generated":{"line":8395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8395,"column":0},"generated":{"line":8396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8396,"column":0},"generated":{"line":8397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8397,"column":0},"generated":{"line":8398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8398,"column":0},"generated":{"line":8399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8399,"column":0},"generated":{"line":8400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8400,"column":0},"generated":{"line":8401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8401,"column":0},"generated":{"line":8402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8402,"column":0},"generated":{"line":8403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8403,"column":0},"generated":{"line":8404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8404,"column":0},"generated":{"line":8405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8405,"column":0},"generated":{"line":8406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8406,"column":0},"generated":{"line":8407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8407,"column":0},"generated":{"line":8408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8408,"column":0},"generated":{"line":8409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8409,"column":0},"generated":{"line":8410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8410,"column":0},"generated":{"line":8411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8411,"column":0},"generated":{"line":8412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8412,"column":0},"generated":{"line":8413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8413,"column":0},"generated":{"line":8414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8414,"column":0},"generated":{"line":8415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8415,"column":0},"generated":{"line":8416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8416,"column":0},"generated":{"line":8417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8417,"column":0},"generated":{"line":8418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8418,"column":0},"generated":{"line":8419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8419,"column":0},"generated":{"line":8420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8420,"column":0},"generated":{"line":8421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8421,"column":0},"generated":{"line":8422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8422,"column":0},"generated":{"line":8423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8423,"column":0},"generated":{"line":8424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8424,"column":0},"generated":{"line":8425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8425,"column":0},"generated":{"line":8426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8426,"column":0},"generated":{"line":8427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8427,"column":0},"generated":{"line":8428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8428,"column":0},"generated":{"line":8429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8429,"column":0},"generated":{"line":8430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8430,"column":0},"generated":{"line":8431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8431,"column":0},"generated":{"line":8432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8432,"column":0},"generated":{"line":8433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8433,"column":0},"generated":{"line":8434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8434,"column":0},"generated":{"line":8435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8435,"column":0},"generated":{"line":8436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8436,"column":0},"generated":{"line":8437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8437,"column":0},"generated":{"line":8438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8438,"column":0},"generated":{"line":8439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8439,"column":0},"generated":{"line":8440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8440,"column":0},"generated":{"line":8441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8441,"column":0},"generated":{"line":8442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8442,"column":0},"generated":{"line":8443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8443,"column":0},"generated":{"line":8444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8444,"column":0},"generated":{"line":8445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8445,"column":0},"generated":{"line":8446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8446,"column":0},"generated":{"line":8447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8447,"column":0},"generated":{"line":8448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8448,"column":0},"generated":{"line":8449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8449,"column":0},"generated":{"line":8450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8450,"column":0},"generated":{"line":8451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8451,"column":0},"generated":{"line":8452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8452,"column":0},"generated":{"line":8453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8453,"column":0},"generated":{"line":8454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8454,"column":0},"generated":{"line":8455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8455,"column":0},"generated":{"line":8456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8456,"column":0},"generated":{"line":8457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8457,"column":0},"generated":{"line":8458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8458,"column":0},"generated":{"line":8459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8459,"column":0},"generated":{"line":8460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8460,"column":0},"generated":{"line":8461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8461,"column":0},"generated":{"line":8462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8462,"column":0},"generated":{"line":8463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8463,"column":0},"generated":{"line":8464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8464,"column":0},"generated":{"line":8465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8465,"column":0},"generated":{"line":8466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8466,"column":0},"generated":{"line":8467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8467,"column":0},"generated":{"line":8468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8468,"column":0},"generated":{"line":8469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8469,"column":0},"generated":{"line":8470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8470,"column":0},"generated":{"line":8471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8471,"column":0},"generated":{"line":8472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8472,"column":0},"generated":{"line":8473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8473,"column":0},"generated":{"line":8474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8474,"column":0},"generated":{"line":8475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8475,"column":0},"generated":{"line":8476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8476,"column":0},"generated":{"line":8477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8477,"column":0},"generated":{"line":8478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8478,"column":0},"generated":{"line":8479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8479,"column":0},"generated":{"line":8480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8480,"column":0},"generated":{"line":8481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8481,"column":0},"generated":{"line":8482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8482,"column":0},"generated":{"line":8483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8483,"column":0},"generated":{"line":8484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8484,"column":0},"generated":{"line":8485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8485,"column":0},"generated":{"line":8486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8486,"column":0},"generated":{"line":8487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8487,"column":0},"generated":{"line":8488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8488,"column":0},"generated":{"line":8489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8489,"column":0},"generated":{"line":8490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8490,"column":0},"generated":{"line":8491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8491,"column":0},"generated":{"line":8492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8492,"column":0},"generated":{"line":8493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8493,"column":0},"generated":{"line":8494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8494,"column":0},"generated":{"line":8495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8495,"column":0},"generated":{"line":8496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8496,"column":0},"generated":{"line":8497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8497,"column":0},"generated":{"line":8498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8498,"column":0},"generated":{"line":8499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8499,"column":0},"generated":{"line":8500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8500,"column":0},"generated":{"line":8501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8501,"column":0},"generated":{"line":8502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8502,"column":0},"generated":{"line":8503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8503,"column":0},"generated":{"line":8504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8504,"column":0},"generated":{"line":8505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8505,"column":0},"generated":{"line":8506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8506,"column":0},"generated":{"line":8507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8507,"column":0},"generated":{"line":8508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8508,"column":0},"generated":{"line":8509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8509,"column":0},"generated":{"line":8510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8510,"column":0},"generated":{"line":8511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8511,"column":0},"generated":{"line":8512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8512,"column":0},"generated":{"line":8513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8513,"column":0},"generated":{"line":8514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8514,"column":0},"generated":{"line":8515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8515,"column":0},"generated":{"line":8516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8516,"column":0},"generated":{"line":8517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8517,"column":0},"generated":{"line":8518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8518,"column":0},"generated":{"line":8519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8519,"column":0},"generated":{"line":8520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8520,"column":0},"generated":{"line":8521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8521,"column":0},"generated":{"line":8522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8522,"column":0},"generated":{"line":8523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8523,"column":0},"generated":{"line":8524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8524,"column":0},"generated":{"line":8525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8525,"column":0},"generated":{"line":8526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8526,"column":0},"generated":{"line":8527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8527,"column":0},"generated":{"line":8528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8528,"column":0},"generated":{"line":8529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8529,"column":0},"generated":{"line":8530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8530,"column":0},"generated":{"line":8531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8531,"column":0},"generated":{"line":8532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8532,"column":0},"generated":{"line":8533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8533,"column":0},"generated":{"line":8534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8534,"column":0},"generated":{"line":8535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8535,"column":0},"generated":{"line":8536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8536,"column":0},"generated":{"line":8537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8537,"column":0},"generated":{"line":8538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8538,"column":0},"generated":{"line":8539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8539,"column":0},"generated":{"line":8540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8540,"column":0},"generated":{"line":8541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8541,"column":0},"generated":{"line":8542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8542,"column":0},"generated":{"line":8543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8543,"column":0},"generated":{"line":8544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8544,"column":0},"generated":{"line":8545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8545,"column":0},"generated":{"line":8546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8546,"column":0},"generated":{"line":8547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8547,"column":0},"generated":{"line":8548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8548,"column":0},"generated":{"line":8549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8549,"column":0},"generated":{"line":8550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8550,"column":0},"generated":{"line":8551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8551,"column":0},"generated":{"line":8552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8552,"column":0},"generated":{"line":8553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8553,"column":0},"generated":{"line":8554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8554,"column":0},"generated":{"line":8555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8555,"column":0},"generated":{"line":8556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8556,"column":0},"generated":{"line":8557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8557,"column":0},"generated":{"line":8558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8558,"column":0},"generated":{"line":8559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8559,"column":0},"generated":{"line":8560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8560,"column":0},"generated":{"line":8561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8561,"column":0},"generated":{"line":8562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8562,"column":0},"generated":{"line":8563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8563,"column":0},"generated":{"line":8564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8564,"column":0},"generated":{"line":8565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8565,"column":0},"generated":{"line":8566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8566,"column":0},"generated":{"line":8567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8567,"column":0},"generated":{"line":8568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8568,"column":0},"generated":{"line":8569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8569,"column":0},"generated":{"line":8570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8570,"column":0},"generated":{"line":8571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8571,"column":0},"generated":{"line":8572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8572,"column":0},"generated":{"line":8573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8573,"column":0},"generated":{"line":8574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8574,"column":0},"generated":{"line":8575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8575,"column":0},"generated":{"line":8576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8576,"column":0},"generated":{"line":8577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8577,"column":0},"generated":{"line":8578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8578,"column":0},"generated":{"line":8579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8579,"column":0},"generated":{"line":8580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8580,"column":0},"generated":{"line":8581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8581,"column":0},"generated":{"line":8582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8582,"column":0},"generated":{"line":8583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8583,"column":0},"generated":{"line":8584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8584,"column":0},"generated":{"line":8585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8585,"column":0},"generated":{"line":8586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8586,"column":0},"generated":{"line":8587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8587,"column":0},"generated":{"line":8588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8588,"column":0},"generated":{"line":8589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8589,"column":0},"generated":{"line":8590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8590,"column":0},"generated":{"line":8591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8591,"column":0},"generated":{"line":8592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8592,"column":0},"generated":{"line":8593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8593,"column":0},"generated":{"line":8594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8594,"column":0},"generated":{"line":8595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8595,"column":0},"generated":{"line":8596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8596,"column":0},"generated":{"line":8597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8597,"column":0},"generated":{"line":8598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8598,"column":0},"generated":{"line":8599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8599,"column":0},"generated":{"line":8600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8600,"column":0},"generated":{"line":8601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8601,"column":0},"generated":{"line":8602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8602,"column":0},"generated":{"line":8603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8603,"column":0},"generated":{"line":8604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8604,"column":0},"generated":{"line":8605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8605,"column":0},"generated":{"line":8606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8606,"column":0},"generated":{"line":8607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8607,"column":0},"generated":{"line":8608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8608,"column":0},"generated":{"line":8609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8609,"column":0},"generated":{"line":8610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8610,"column":0},"generated":{"line":8611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8611,"column":0},"generated":{"line":8612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8612,"column":0},"generated":{"line":8613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8613,"column":0},"generated":{"line":8614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8614,"column":0},"generated":{"line":8615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8615,"column":0},"generated":{"line":8616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8616,"column":0},"generated":{"line":8617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8617,"column":0},"generated":{"line":8618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8618,"column":0},"generated":{"line":8619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8619,"column":0},"generated":{"line":8620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8620,"column":0},"generated":{"line":8621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8621,"column":0},"generated":{"line":8622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8622,"column":0},"generated":{"line":8623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8623,"column":0},"generated":{"line":8624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8624,"column":0},"generated":{"line":8625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8625,"column":0},"generated":{"line":8626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8626,"column":0},"generated":{"line":8627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8627,"column":0},"generated":{"line":8628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8628,"column":0},"generated":{"line":8629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8629,"column":0},"generated":{"line":8630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8630,"column":0},"generated":{"line":8631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8631,"column":0},"generated":{"line":8632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8632,"column":0},"generated":{"line":8633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8633,"column":0},"generated":{"line":8634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8634,"column":0},"generated":{"line":8635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8635,"column":0},"generated":{"line":8636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8636,"column":0},"generated":{"line":8637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8637,"column":0},"generated":{"line":8638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8638,"column":0},"generated":{"line":8639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8639,"column":0},"generated":{"line":8640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8640,"column":0},"generated":{"line":8641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8641,"column":0},"generated":{"line":8642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8642,"column":0},"generated":{"line":8643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8643,"column":0},"generated":{"line":8644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8644,"column":0},"generated":{"line":8645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8645,"column":0},"generated":{"line":8646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8646,"column":0},"generated":{"line":8647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8647,"column":0},"generated":{"line":8648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8648,"column":0},"generated":{"line":8649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8649,"column":0},"generated":{"line":8650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8650,"column":0},"generated":{"line":8651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8651,"column":0},"generated":{"line":8652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8652,"column":0},"generated":{"line":8653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8653,"column":0},"generated":{"line":8654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8654,"column":0},"generated":{"line":8655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8655,"column":0},"generated":{"line":8656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8656,"column":0},"generated":{"line":8657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8657,"column":0},"generated":{"line":8658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8658,"column":0},"generated":{"line":8659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8659,"column":0},"generated":{"line":8660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8660,"column":0},"generated":{"line":8661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8661,"column":0},"generated":{"line":8662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8662,"column":0},"generated":{"line":8663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8663,"column":0},"generated":{"line":8664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8664,"column":0},"generated":{"line":8665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8665,"column":0},"generated":{"line":8666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8666,"column":0},"generated":{"line":8667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8667,"column":0},"generated":{"line":8668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8668,"column":0},"generated":{"line":8669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8669,"column":0},"generated":{"line":8670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8670,"column":0},"generated":{"line":8671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8671,"column":0},"generated":{"line":8672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8672,"column":0},"generated":{"line":8673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8673,"column":0},"generated":{"line":8674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8674,"column":0},"generated":{"line":8675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8675,"column":0},"generated":{"line":8676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8676,"column":0},"generated":{"line":8677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8677,"column":0},"generated":{"line":8678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8678,"column":0},"generated":{"line":8679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8679,"column":0},"generated":{"line":8680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8680,"column":0},"generated":{"line":8681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8681,"column":0},"generated":{"line":8682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8682,"column":0},"generated":{"line":8683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8683,"column":0},"generated":{"line":8684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8684,"column":0},"generated":{"line":8685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8685,"column":0},"generated":{"line":8686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8686,"column":0},"generated":{"line":8687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8687,"column":0},"generated":{"line":8688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8688,"column":0},"generated":{"line":8689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8689,"column":0},"generated":{"line":8690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8690,"column":0},"generated":{"line":8691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8691,"column":0},"generated":{"line":8692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8692,"column":0},"generated":{"line":8693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8693,"column":0},"generated":{"line":8694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8694,"column":0},"generated":{"line":8695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8695,"column":0},"generated":{"line":8696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8696,"column":0},"generated":{"line":8697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8697,"column":0},"generated":{"line":8698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8698,"column":0},"generated":{"line":8699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8699,"column":0},"generated":{"line":8700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8700,"column":0},"generated":{"line":8701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8701,"column":0},"generated":{"line":8702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8702,"column":0},"generated":{"line":8703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8703,"column":0},"generated":{"line":8704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8704,"column":0},"generated":{"line":8705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8705,"column":0},"generated":{"line":8706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8706,"column":0},"generated":{"line":8707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8707,"column":0},"generated":{"line":8708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8708,"column":0},"generated":{"line":8709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8709,"column":0},"generated":{"line":8710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8710,"column":0},"generated":{"line":8711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8711,"column":0},"generated":{"line":8712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8712,"column":0},"generated":{"line":8713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8713,"column":0},"generated":{"line":8714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8714,"column":0},"generated":{"line":8715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8715,"column":0},"generated":{"line":8716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8716,"column":0},"generated":{"line":8717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8717,"column":0},"generated":{"line":8718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8718,"column":0},"generated":{"line":8719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8719,"column":0},"generated":{"line":8720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8720,"column":0},"generated":{"line":8721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8721,"column":0},"generated":{"line":8722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8722,"column":0},"generated":{"line":8723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8723,"column":0},"generated":{"line":8724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8724,"column":0},"generated":{"line":8725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8725,"column":0},"generated":{"line":8726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8726,"column":0},"generated":{"line":8727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8727,"column":0},"generated":{"line":8728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8728,"column":0},"generated":{"line":8729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8729,"column":0},"generated":{"line":8730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8730,"column":0},"generated":{"line":8731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8731,"column":0},"generated":{"line":8732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8732,"column":0},"generated":{"line":8733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8733,"column":0},"generated":{"line":8734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8734,"column":0},"generated":{"line":8735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8735,"column":0},"generated":{"line":8736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8736,"column":0},"generated":{"line":8737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8737,"column":0},"generated":{"line":8738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8738,"column":0},"generated":{"line":8739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8739,"column":0},"generated":{"line":8740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8740,"column":0},"generated":{"line":8741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8741,"column":0},"generated":{"line":8742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8742,"column":0},"generated":{"line":8743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8743,"column":0},"generated":{"line":8744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8744,"column":0},"generated":{"line":8745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8745,"column":0},"generated":{"line":8746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8746,"column":0},"generated":{"line":8747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8747,"column":0},"generated":{"line":8748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8748,"column":0},"generated":{"line":8749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8749,"column":0},"generated":{"line":8750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8750,"column":0},"generated":{"line":8751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8751,"column":0},"generated":{"line":8752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8752,"column":0},"generated":{"line":8753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8753,"column":0},"generated":{"line":8754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8754,"column":0},"generated":{"line":8755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8755,"column":0},"generated":{"line":8756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8756,"column":0},"generated":{"line":8757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8757,"column":0},"generated":{"line":8758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8758,"column":0},"generated":{"line":8759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8759,"column":0},"generated":{"line":8760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8760,"column":0},"generated":{"line":8761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8761,"column":0},"generated":{"line":8762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8762,"column":0},"generated":{"line":8763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8763,"column":0},"generated":{"line":8764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8764,"column":0},"generated":{"line":8765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8765,"column":0},"generated":{"line":8766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8766,"column":0},"generated":{"line":8767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8767,"column":0},"generated":{"line":8768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8768,"column":0},"generated":{"line":8769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8769,"column":0},"generated":{"line":8770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8770,"column":0},"generated":{"line":8771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8771,"column":0},"generated":{"line":8772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8772,"column":0},"generated":{"line":8773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8773,"column":0},"generated":{"line":8774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8774,"column":0},"generated":{"line":8775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8775,"column":0},"generated":{"line":8776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8776,"column":0},"generated":{"line":8777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8777,"column":0},"generated":{"line":8778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8778,"column":0},"generated":{"line":8779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8779,"column":0},"generated":{"line":8780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8780,"column":0},"generated":{"line":8781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8781,"column":0},"generated":{"line":8782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8782,"column":0},"generated":{"line":8783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8783,"column":0},"generated":{"line":8784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8784,"column":0},"generated":{"line":8785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8785,"column":0},"generated":{"line":8786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8786,"column":0},"generated":{"line":8787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8787,"column":0},"generated":{"line":8788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8788,"column":0},"generated":{"line":8789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8789,"column":0},"generated":{"line":8790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8790,"column":0},"generated":{"line":8791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8791,"column":0},"generated":{"line":8792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8792,"column":0},"generated":{"line":8793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8793,"column":0},"generated":{"line":8794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8794,"column":0},"generated":{"line":8795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8795,"column":0},"generated":{"line":8796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8796,"column":0},"generated":{"line":8797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8797,"column":0},"generated":{"line":8798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8798,"column":0},"generated":{"line":8799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8799,"column":0},"generated":{"line":8800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8800,"column":0},"generated":{"line":8801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8801,"column":0},"generated":{"line":8802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8802,"column":0},"generated":{"line":8803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8803,"column":0},"generated":{"line":8804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8804,"column":0},"generated":{"line":8805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8805,"column":0},"generated":{"line":8806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8806,"column":0},"generated":{"line":8807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8807,"column":0},"generated":{"line":8808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8808,"column":0},"generated":{"line":8809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8809,"column":0},"generated":{"line":8810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8810,"column":0},"generated":{"line":8811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8811,"column":0},"generated":{"line":8812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8812,"column":0},"generated":{"line":8813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8813,"column":0},"generated":{"line":8814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8814,"column":0},"generated":{"line":8815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8815,"column":0},"generated":{"line":8816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8816,"column":0},"generated":{"line":8817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8817,"column":0},"generated":{"line":8818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8818,"column":0},"generated":{"line":8819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8819,"column":0},"generated":{"line":8820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8820,"column":0},"generated":{"line":8821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8821,"column":0},"generated":{"line":8822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8822,"column":0},"generated":{"line":8823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8823,"column":0},"generated":{"line":8824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8824,"column":0},"generated":{"line":8825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8825,"column":0},"generated":{"line":8826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8826,"column":0},"generated":{"line":8827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8827,"column":0},"generated":{"line":8828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8828,"column":0},"generated":{"line":8829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8829,"column":0},"generated":{"line":8830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8830,"column":0},"generated":{"line":8831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8831,"column":0},"generated":{"line":8832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8832,"column":0},"generated":{"line":8833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8833,"column":0},"generated":{"line":8834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8834,"column":0},"generated":{"line":8835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8835,"column":0},"generated":{"line":8836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8836,"column":0},"generated":{"line":8837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8837,"column":0},"generated":{"line":8838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8838,"column":0},"generated":{"line":8839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8839,"column":0},"generated":{"line":8840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8840,"column":0},"generated":{"line":8841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8841,"column":0},"generated":{"line":8842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8842,"column":0},"generated":{"line":8843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8843,"column":0},"generated":{"line":8844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8844,"column":0},"generated":{"line":8845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8845,"column":0},"generated":{"line":8846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8846,"column":0},"generated":{"line":8847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8847,"column":0},"generated":{"line":8848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8848,"column":0},"generated":{"line":8849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8849,"column":0},"generated":{"line":8850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8850,"column":0},"generated":{"line":8851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8851,"column":0},"generated":{"line":8852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8852,"column":0},"generated":{"line":8853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8853,"column":0},"generated":{"line":8854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8854,"column":0},"generated":{"line":8855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8855,"column":0},"generated":{"line":8856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8856,"column":0},"generated":{"line":8857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8857,"column":0},"generated":{"line":8858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8858,"column":0},"generated":{"line":8859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8859,"column":0},"generated":{"line":8860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8860,"column":0},"generated":{"line":8861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8861,"column":0},"generated":{"line":8862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8862,"column":0},"generated":{"line":8863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8863,"column":0},"generated":{"line":8864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8864,"column":0},"generated":{"line":8865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8865,"column":0},"generated":{"line":8866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8866,"column":0},"generated":{"line":8867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8867,"column":0},"generated":{"line":8868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8868,"column":0},"generated":{"line":8869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8869,"column":0},"generated":{"line":8870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8870,"column":0},"generated":{"line":8871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8871,"column":0},"generated":{"line":8872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8872,"column":0},"generated":{"line":8873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8873,"column":0},"generated":{"line":8874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8874,"column":0},"generated":{"line":8875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8875,"column":0},"generated":{"line":8876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8876,"column":0},"generated":{"line":8877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8877,"column":0},"generated":{"line":8878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8878,"column":0},"generated":{"line":8879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8879,"column":0},"generated":{"line":8880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8880,"column":0},"generated":{"line":8881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8881,"column":0},"generated":{"line":8882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8882,"column":0},"generated":{"line":8883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8883,"column":0},"generated":{"line":8884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8884,"column":0},"generated":{"line":8885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8885,"column":0},"generated":{"line":8886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8886,"column":0},"generated":{"line":8887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8887,"column":0},"generated":{"line":8888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8888,"column":0},"generated":{"line":8889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8889,"column":0},"generated":{"line":8890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8890,"column":0},"generated":{"line":8891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8891,"column":0},"generated":{"line":8892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8892,"column":0},"generated":{"line":8893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8893,"column":0},"generated":{"line":8894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8894,"column":0},"generated":{"line":8895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8895,"column":0},"generated":{"line":8896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8896,"column":0},"generated":{"line":8897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8897,"column":0},"generated":{"line":8898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8898,"column":0},"generated":{"line":8899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8899,"column":0},"generated":{"line":8900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8900,"column":0},"generated":{"line":8901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8901,"column":0},"generated":{"line":8902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8902,"column":0},"generated":{"line":8903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8903,"column":0},"generated":{"line":8904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8904,"column":0},"generated":{"line":8905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8905,"column":0},"generated":{"line":8906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8906,"column":0},"generated":{"line":8907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8907,"column":0},"generated":{"line":8908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8908,"column":0},"generated":{"line":8909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8909,"column":0},"generated":{"line":8910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8910,"column":0},"generated":{"line":8911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8911,"column":0},"generated":{"line":8912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8912,"column":0},"generated":{"line":8913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8913,"column":0},"generated":{"line":8914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8914,"column":0},"generated":{"line":8915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8915,"column":0},"generated":{"line":8916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8916,"column":0},"generated":{"line":8917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8917,"column":0},"generated":{"line":8918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8918,"column":0},"generated":{"line":8919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8919,"column":0},"generated":{"line":8920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8920,"column":0},"generated":{"line":8921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8921,"column":0},"generated":{"line":8922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8922,"column":0},"generated":{"line":8923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8923,"column":0},"generated":{"line":8924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8924,"column":0},"generated":{"line":8925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8925,"column":0},"generated":{"line":8926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8926,"column":0},"generated":{"line":8927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8927,"column":0},"generated":{"line":8928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8928,"column":0},"generated":{"line":8929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8929,"column":0},"generated":{"line":8930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8930,"column":0},"generated":{"line":8931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8931,"column":0},"generated":{"line":8932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8932,"column":0},"generated":{"line":8933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8933,"column":0},"generated":{"line":8934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8934,"column":0},"generated":{"line":8935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8935,"column":0},"generated":{"line":8936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8936,"column":0},"generated":{"line":8937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8937,"column":0},"generated":{"line":8938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8938,"column":0},"generated":{"line":8939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8939,"column":0},"generated":{"line":8940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8940,"column":0},"generated":{"line":8941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8941,"column":0},"generated":{"line":8942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8942,"column":0},"generated":{"line":8943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8943,"column":0},"generated":{"line":8944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8944,"column":0},"generated":{"line":8945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8945,"column":0},"generated":{"line":8946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8946,"column":0},"generated":{"line":8947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8947,"column":0},"generated":{"line":8948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8948,"column":0},"generated":{"line":8949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8949,"column":0},"generated":{"line":8950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8950,"column":0},"generated":{"line":8951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8951,"column":0},"generated":{"line":8952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8952,"column":0},"generated":{"line":8953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8953,"column":0},"generated":{"line":8954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8954,"column":0},"generated":{"line":8955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8955,"column":0},"generated":{"line":8956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8956,"column":0},"generated":{"line":8957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8957,"column":0},"generated":{"line":8958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8958,"column":0},"generated":{"line":8959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8959,"column":0},"generated":{"line":8960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8960,"column":0},"generated":{"line":8961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8961,"column":0},"generated":{"line":8962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8962,"column":0},"generated":{"line":8963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8963,"column":0},"generated":{"line":8964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8964,"column":0},"generated":{"line":8965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8965,"column":0},"generated":{"line":8966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8966,"column":0},"generated":{"line":8967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8967,"column":0},"generated":{"line":8968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8968,"column":0},"generated":{"line":8969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8969,"column":0},"generated":{"line":8970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8970,"column":0},"generated":{"line":8971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8971,"column":0},"generated":{"line":8972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8972,"column":0},"generated":{"line":8973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8973,"column":0},"generated":{"line":8974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8974,"column":0},"generated":{"line":8975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8975,"column":0},"generated":{"line":8976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8976,"column":0},"generated":{"line":8977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8977,"column":0},"generated":{"line":8978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8978,"column":0},"generated":{"line":8979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8979,"column":0},"generated":{"line":8980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8980,"column":0},"generated":{"line":8981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8981,"column":0},"generated":{"line":8982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8982,"column":0},"generated":{"line":8983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8983,"column":0},"generated":{"line":8984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8984,"column":0},"generated":{"line":8985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8985,"column":0},"generated":{"line":8986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8986,"column":0},"generated":{"line":8987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8987,"column":0},"generated":{"line":8988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8988,"column":0},"generated":{"line":8989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8989,"column":0},"generated":{"line":8990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8990,"column":0},"generated":{"line":8991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8991,"column":0},"generated":{"line":8992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8992,"column":0},"generated":{"line":8993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8993,"column":0},"generated":{"line":8994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8994,"column":0},"generated":{"line":8995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8995,"column":0},"generated":{"line":8996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8996,"column":0},"generated":{"line":8997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8997,"column":0},"generated":{"line":8998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8998,"column":0},"generated":{"line":8999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":8999,"column":0},"generated":{"line":9000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9000,"column":0},"generated":{"line":9001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9001,"column":0},"generated":{"line":9002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9002,"column":0},"generated":{"line":9003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9003,"column":0},"generated":{"line":9004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9004,"column":0},"generated":{"line":9005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9005,"column":0},"generated":{"line":9006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9006,"column":0},"generated":{"line":9007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9007,"column":0},"generated":{"line":9008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9008,"column":0},"generated":{"line":9009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9009,"column":0},"generated":{"line":9010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9010,"column":0},"generated":{"line":9011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9011,"column":0},"generated":{"line":9012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9012,"column":0},"generated":{"line":9013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9013,"column":0},"generated":{"line":9014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9014,"column":0},"generated":{"line":9015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9015,"column":0},"generated":{"line":9016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9016,"column":0},"generated":{"line":9017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9017,"column":0},"generated":{"line":9018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9018,"column":0},"generated":{"line":9019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9019,"column":0},"generated":{"line":9020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9020,"column":0},"generated":{"line":9021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9021,"column":0},"generated":{"line":9022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9022,"column":0},"generated":{"line":9023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9023,"column":0},"generated":{"line":9024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9024,"column":0},"generated":{"line":9025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9025,"column":0},"generated":{"line":9026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9026,"column":0},"generated":{"line":9027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9027,"column":0},"generated":{"line":9028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9028,"column":0},"generated":{"line":9029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9029,"column":0},"generated":{"line":9030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9030,"column":0},"generated":{"line":9031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9031,"column":0},"generated":{"line":9032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9032,"column":0},"generated":{"line":9033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9033,"column":0},"generated":{"line":9034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9034,"column":0},"generated":{"line":9035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9035,"column":0},"generated":{"line":9036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9036,"column":0},"generated":{"line":9037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9037,"column":0},"generated":{"line":9038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9038,"column":0},"generated":{"line":9039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9039,"column":0},"generated":{"line":9040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9040,"column":0},"generated":{"line":9041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9041,"column":0},"generated":{"line":9042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9042,"column":0},"generated":{"line":9043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9043,"column":0},"generated":{"line":9044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9044,"column":0},"generated":{"line":9045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9045,"column":0},"generated":{"line":9046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9046,"column":0},"generated":{"line":9047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9047,"column":0},"generated":{"line":9048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9048,"column":0},"generated":{"line":9049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9049,"column":0},"generated":{"line":9050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9050,"column":0},"generated":{"line":9051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9051,"column":0},"generated":{"line":9052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9052,"column":0},"generated":{"line":9053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9053,"column":0},"generated":{"line":9054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9054,"column":0},"generated":{"line":9055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9055,"column":0},"generated":{"line":9056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9056,"column":0},"generated":{"line":9057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9057,"column":0},"generated":{"line":9058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9058,"column":0},"generated":{"line":9059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9059,"column":0},"generated":{"line":9060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9060,"column":0},"generated":{"line":9061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9061,"column":0},"generated":{"line":9062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9062,"column":0},"generated":{"line":9063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9063,"column":0},"generated":{"line":9064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9064,"column":0},"generated":{"line":9065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9065,"column":0},"generated":{"line":9066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9066,"column":0},"generated":{"line":9067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9067,"column":0},"generated":{"line":9068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9068,"column":0},"generated":{"line":9069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9069,"column":0},"generated":{"line":9070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9070,"column":0},"generated":{"line":9071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9071,"column":0},"generated":{"line":9072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9072,"column":0},"generated":{"line":9073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9073,"column":0},"generated":{"line":9074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9074,"column":0},"generated":{"line":9075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9075,"column":0},"generated":{"line":9076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9076,"column":0},"generated":{"line":9077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9077,"column":0},"generated":{"line":9078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9078,"column":0},"generated":{"line":9079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9079,"column":0},"generated":{"line":9080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9080,"column":0},"generated":{"line":9081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9081,"column":0},"generated":{"line":9082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9082,"column":0},"generated":{"line":9083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9083,"column":0},"generated":{"line":9084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9084,"column":0},"generated":{"line":9085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9085,"column":0},"generated":{"line":9086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9086,"column":0},"generated":{"line":9087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9087,"column":0},"generated":{"line":9088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9088,"column":0},"generated":{"line":9089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9089,"column":0},"generated":{"line":9090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9090,"column":0},"generated":{"line":9091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9091,"column":0},"generated":{"line":9092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9092,"column":0},"generated":{"line":9093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9093,"column":0},"generated":{"line":9094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9094,"column":0},"generated":{"line":9095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9095,"column":0},"generated":{"line":9096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9096,"column":0},"generated":{"line":9097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9097,"column":0},"generated":{"line":9098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9098,"column":0},"generated":{"line":9099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9099,"column":0},"generated":{"line":9100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9100,"column":0},"generated":{"line":9101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9101,"column":0},"generated":{"line":9102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9102,"column":0},"generated":{"line":9103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9103,"column":0},"generated":{"line":9104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9104,"column":0},"generated":{"line":9105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9105,"column":0},"generated":{"line":9106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9106,"column":0},"generated":{"line":9107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9107,"column":0},"generated":{"line":9108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9108,"column":0},"generated":{"line":9109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9109,"column":0},"generated":{"line":9110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9110,"column":0},"generated":{"line":9111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9111,"column":0},"generated":{"line":9112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9112,"column":0},"generated":{"line":9113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9113,"column":0},"generated":{"line":9114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9114,"column":0},"generated":{"line":9115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9115,"column":0},"generated":{"line":9116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9116,"column":0},"generated":{"line":9117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9117,"column":0},"generated":{"line":9118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9118,"column":0},"generated":{"line":9119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9119,"column":0},"generated":{"line":9120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9120,"column":0},"generated":{"line":9121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9121,"column":0},"generated":{"line":9122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9122,"column":0},"generated":{"line":9123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9123,"column":0},"generated":{"line":9124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9124,"column":0},"generated":{"line":9125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9125,"column":0},"generated":{"line":9126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9126,"column":0},"generated":{"line":9127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9127,"column":0},"generated":{"line":9128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9128,"column":0},"generated":{"line":9129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9129,"column":0},"generated":{"line":9130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9130,"column":0},"generated":{"line":9131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9131,"column":0},"generated":{"line":9132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9132,"column":0},"generated":{"line":9133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9133,"column":0},"generated":{"line":9134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9134,"column":0},"generated":{"line":9135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9135,"column":0},"generated":{"line":9136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9136,"column":0},"generated":{"line":9137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9137,"column":0},"generated":{"line":9138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9138,"column":0},"generated":{"line":9139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9139,"column":0},"generated":{"line":9140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9140,"column":0},"generated":{"line":9141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9141,"column":0},"generated":{"line":9142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9142,"column":0},"generated":{"line":9143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9143,"column":0},"generated":{"line":9144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9144,"column":0},"generated":{"line":9145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9145,"column":0},"generated":{"line":9146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9146,"column":0},"generated":{"line":9147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9147,"column":0},"generated":{"line":9148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9148,"column":0},"generated":{"line":9149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9149,"column":0},"generated":{"line":9150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9150,"column":0},"generated":{"line":9151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9151,"column":0},"generated":{"line":9152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9152,"column":0},"generated":{"line":9153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9153,"column":0},"generated":{"line":9154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9154,"column":0},"generated":{"line":9155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9155,"column":0},"generated":{"line":9156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9156,"column":0},"generated":{"line":9157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9157,"column":0},"generated":{"line":9158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9158,"column":0},"generated":{"line":9159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9159,"column":0},"generated":{"line":9160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9160,"column":0},"generated":{"line":9161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9161,"column":0},"generated":{"line":9162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9162,"column":0},"generated":{"line":9163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9163,"column":0},"generated":{"line":9164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9164,"column":0},"generated":{"line":9165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9165,"column":0},"generated":{"line":9166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9166,"column":0},"generated":{"line":9167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9167,"column":0},"generated":{"line":9168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9168,"column":0},"generated":{"line":9169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9169,"column":0},"generated":{"line":9170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9170,"column":0},"generated":{"line":9171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9171,"column":0},"generated":{"line":9172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9172,"column":0},"generated":{"line":9173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9173,"column":0},"generated":{"line":9174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9174,"column":0},"generated":{"line":9175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9175,"column":0},"generated":{"line":9176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9176,"column":0},"generated":{"line":9177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9177,"column":0},"generated":{"line":9178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9178,"column":0},"generated":{"line":9179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9179,"column":0},"generated":{"line":9180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9180,"column":0},"generated":{"line":9181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9181,"column":0},"generated":{"line":9182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9182,"column":0},"generated":{"line":9183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9183,"column":0},"generated":{"line":9184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9184,"column":0},"generated":{"line":9185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9185,"column":0},"generated":{"line":9186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9186,"column":0},"generated":{"line":9187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9187,"column":0},"generated":{"line":9188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9188,"column":0},"generated":{"line":9189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9189,"column":0},"generated":{"line":9190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9190,"column":0},"generated":{"line":9191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9191,"column":0},"generated":{"line":9192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9192,"column":0},"generated":{"line":9193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9193,"column":0},"generated":{"line":9194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9194,"column":0},"generated":{"line":9195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9195,"column":0},"generated":{"line":9196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9196,"column":0},"generated":{"line":9197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9197,"column":0},"generated":{"line":9198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9198,"column":0},"generated":{"line":9199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9199,"column":0},"generated":{"line":9200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9200,"column":0},"generated":{"line":9201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9201,"column":0},"generated":{"line":9202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9202,"column":0},"generated":{"line":9203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9203,"column":0},"generated":{"line":9204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9204,"column":0},"generated":{"line":9205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9205,"column":0},"generated":{"line":9206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9206,"column":0},"generated":{"line":9207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9207,"column":0},"generated":{"line":9208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9208,"column":0},"generated":{"line":9209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9209,"column":0},"generated":{"line":9210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9210,"column":0},"generated":{"line":9211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9211,"column":0},"generated":{"line":9212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9212,"column":0},"generated":{"line":9213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9213,"column":0},"generated":{"line":9214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9214,"column":0},"generated":{"line":9215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9215,"column":0},"generated":{"line":9216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9216,"column":0},"generated":{"line":9217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9217,"column":0},"generated":{"line":9218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9218,"column":0},"generated":{"line":9219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9219,"column":0},"generated":{"line":9220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9220,"column":0},"generated":{"line":9221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9221,"column":0},"generated":{"line":9222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9222,"column":0},"generated":{"line":9223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9223,"column":0},"generated":{"line":9224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9224,"column":0},"generated":{"line":9225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9225,"column":0},"generated":{"line":9226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9226,"column":0},"generated":{"line":9227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9227,"column":0},"generated":{"line":9228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9228,"column":0},"generated":{"line":9229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9229,"column":0},"generated":{"line":9230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9230,"column":0},"generated":{"line":9231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9231,"column":0},"generated":{"line":9232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9232,"column":0},"generated":{"line":9233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9233,"column":0},"generated":{"line":9234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9234,"column":0},"generated":{"line":9235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9235,"column":0},"generated":{"line":9236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9236,"column":0},"generated":{"line":9237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9237,"column":0},"generated":{"line":9238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9238,"column":0},"generated":{"line":9239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9239,"column":0},"generated":{"line":9240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9240,"column":0},"generated":{"line":9241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9241,"column":0},"generated":{"line":9242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9242,"column":0},"generated":{"line":9243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9243,"column":0},"generated":{"line":9244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9244,"column":0},"generated":{"line":9245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9245,"column":0},"generated":{"line":9246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9246,"column":0},"generated":{"line":9247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9247,"column":0},"generated":{"line":9248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9248,"column":0},"generated":{"line":9249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9249,"column":0},"generated":{"line":9250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9250,"column":0},"generated":{"line":9251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9251,"column":0},"generated":{"line":9252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9252,"column":0},"generated":{"line":9253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9253,"column":0},"generated":{"line":9254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9254,"column":0},"generated":{"line":9255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9255,"column":0},"generated":{"line":9256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9256,"column":0},"generated":{"line":9257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9257,"column":0},"generated":{"line":9258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9258,"column":0},"generated":{"line":9259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9259,"column":0},"generated":{"line":9260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9260,"column":0},"generated":{"line":9261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9261,"column":0},"generated":{"line":9262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9262,"column":0},"generated":{"line":9263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9263,"column":0},"generated":{"line":9264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9264,"column":0},"generated":{"line":9265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9265,"column":0},"generated":{"line":9266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9266,"column":0},"generated":{"line":9267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9267,"column":0},"generated":{"line":9268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9268,"column":0},"generated":{"line":9269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9269,"column":0},"generated":{"line":9270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9270,"column":0},"generated":{"line":9271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9271,"column":0},"generated":{"line":9272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9272,"column":0},"generated":{"line":9273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9273,"column":0},"generated":{"line":9274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9274,"column":0},"generated":{"line":9275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9275,"column":0},"generated":{"line":9276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9276,"column":0},"generated":{"line":9277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9277,"column":0},"generated":{"line":9278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9278,"column":0},"generated":{"line":9279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9279,"column":0},"generated":{"line":9280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9280,"column":0},"generated":{"line":9281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9281,"column":0},"generated":{"line":9282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9282,"column":0},"generated":{"line":9283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9283,"column":0},"generated":{"line":9284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9284,"column":0},"generated":{"line":9285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9285,"column":0},"generated":{"line":9286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9286,"column":0},"generated":{"line":9287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9287,"column":0},"generated":{"line":9288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9288,"column":0},"generated":{"line":9289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9289,"column":0},"generated":{"line":9290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9290,"column":0},"generated":{"line":9291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9291,"column":0},"generated":{"line":9292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9292,"column":0},"generated":{"line":9293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9293,"column":0},"generated":{"line":9294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9294,"column":0},"generated":{"line":9295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9295,"column":0},"generated":{"line":9296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9296,"column":0},"generated":{"line":9297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9297,"column":0},"generated":{"line":9298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9298,"column":0},"generated":{"line":9299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9299,"column":0},"generated":{"line":9300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9300,"column":0},"generated":{"line":9301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9301,"column":0},"generated":{"line":9302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9302,"column":0},"generated":{"line":9303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9303,"column":0},"generated":{"line":9304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9304,"column":0},"generated":{"line":9305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9305,"column":0},"generated":{"line":9306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9306,"column":0},"generated":{"line":9307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9307,"column":0},"generated":{"line":9308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9308,"column":0},"generated":{"line":9309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9309,"column":0},"generated":{"line":9310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9310,"column":0},"generated":{"line":9311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9311,"column":0},"generated":{"line":9312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9312,"column":0},"generated":{"line":9313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9313,"column":0},"generated":{"line":9314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9314,"column":0},"generated":{"line":9315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9315,"column":0},"generated":{"line":9316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9316,"column":0},"generated":{"line":9317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9317,"column":0},"generated":{"line":9318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9318,"column":0},"generated":{"line":9319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9319,"column":0},"generated":{"line":9320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9320,"column":0},"generated":{"line":9321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9321,"column":0},"generated":{"line":9322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9322,"column":0},"generated":{"line":9323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9323,"column":0},"generated":{"line":9324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9324,"column":0},"generated":{"line":9325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9325,"column":0},"generated":{"line":9326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9326,"column":0},"generated":{"line":9327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9327,"column":0},"generated":{"line":9328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9328,"column":0},"generated":{"line":9329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9329,"column":0},"generated":{"line":9330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9330,"column":0},"generated":{"line":9331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9331,"column":0},"generated":{"line":9332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9332,"column":0},"generated":{"line":9333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9333,"column":0},"generated":{"line":9334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9334,"column":0},"generated":{"line":9335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9335,"column":0},"generated":{"line":9336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9336,"column":0},"generated":{"line":9337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9337,"column":0},"generated":{"line":9338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9338,"column":0},"generated":{"line":9339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9339,"column":0},"generated":{"line":9340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9340,"column":0},"generated":{"line":9341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9341,"column":0},"generated":{"line":9342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9342,"column":0},"generated":{"line":9343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9343,"column":0},"generated":{"line":9344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9344,"column":0},"generated":{"line":9345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9345,"column":0},"generated":{"line":9346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9346,"column":0},"generated":{"line":9347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9347,"column":0},"generated":{"line":9348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9348,"column":0},"generated":{"line":9349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9349,"column":0},"generated":{"line":9350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9350,"column":0},"generated":{"line":9351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9351,"column":0},"generated":{"line":9352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9352,"column":0},"generated":{"line":9353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9353,"column":0},"generated":{"line":9354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9354,"column":0},"generated":{"line":9355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9355,"column":0},"generated":{"line":9356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9356,"column":0},"generated":{"line":9357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9357,"column":0},"generated":{"line":9358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9358,"column":0},"generated":{"line":9359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9359,"column":0},"generated":{"line":9360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9360,"column":0},"generated":{"line":9361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9361,"column":0},"generated":{"line":9362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9362,"column":0},"generated":{"line":9363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9363,"column":0},"generated":{"line":9364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9364,"column":0},"generated":{"line":9365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9365,"column":0},"generated":{"line":9366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9366,"column":0},"generated":{"line":9367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9367,"column":0},"generated":{"line":9368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9368,"column":0},"generated":{"line":9369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9369,"column":0},"generated":{"line":9370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9370,"column":0},"generated":{"line":9371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9371,"column":0},"generated":{"line":9372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9372,"column":0},"generated":{"line":9373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9373,"column":0},"generated":{"line":9374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9374,"column":0},"generated":{"line":9375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9375,"column":0},"generated":{"line":9376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9376,"column":0},"generated":{"line":9377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9377,"column":0},"generated":{"line":9378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9378,"column":0},"generated":{"line":9379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9379,"column":0},"generated":{"line":9380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9380,"column":0},"generated":{"line":9381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9381,"column":0},"generated":{"line":9382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9382,"column":0},"generated":{"line":9383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9383,"column":0},"generated":{"line":9384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9384,"column":0},"generated":{"line":9385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9385,"column":0},"generated":{"line":9386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9386,"column":0},"generated":{"line":9387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9387,"column":0},"generated":{"line":9388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9388,"column":0},"generated":{"line":9389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9389,"column":0},"generated":{"line":9390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9390,"column":0},"generated":{"line":9391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9391,"column":0},"generated":{"line":9392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9392,"column":0},"generated":{"line":9393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9393,"column":0},"generated":{"line":9394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9394,"column":0},"generated":{"line":9395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9395,"column":0},"generated":{"line":9396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9396,"column":0},"generated":{"line":9397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9397,"column":0},"generated":{"line":9398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9398,"column":0},"generated":{"line":9399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9399,"column":0},"generated":{"line":9400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9400,"column":0},"generated":{"line":9401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9401,"column":0},"generated":{"line":9402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9402,"column":0},"generated":{"line":9403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9403,"column":0},"generated":{"line":9404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9404,"column":0},"generated":{"line":9405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9405,"column":0},"generated":{"line":9406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9406,"column":0},"generated":{"line":9407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9407,"column":0},"generated":{"line":9408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9408,"column":0},"generated":{"line":9409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9409,"column":0},"generated":{"line":9410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9410,"column":0},"generated":{"line":9411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9411,"column":0},"generated":{"line":9412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9412,"column":0},"generated":{"line":9413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9413,"column":0},"generated":{"line":9414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9414,"column":0},"generated":{"line":9415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9415,"column":0},"generated":{"line":9416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9416,"column":0},"generated":{"line":9417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9417,"column":0},"generated":{"line":9418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9418,"column":0},"generated":{"line":9419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9419,"column":0},"generated":{"line":9420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9420,"column":0},"generated":{"line":9421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9421,"column":0},"generated":{"line":9422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9422,"column":0},"generated":{"line":9423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9423,"column":0},"generated":{"line":9424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9424,"column":0},"generated":{"line":9425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9425,"column":0},"generated":{"line":9426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9426,"column":0},"generated":{"line":9427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9427,"column":0},"generated":{"line":9428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9428,"column":0},"generated":{"line":9429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9429,"column":0},"generated":{"line":9430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9430,"column":0},"generated":{"line":9431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9431,"column":0},"generated":{"line":9432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9432,"column":0},"generated":{"line":9433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9433,"column":0},"generated":{"line":9434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9434,"column":0},"generated":{"line":9435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9435,"column":0},"generated":{"line":9436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9436,"column":0},"generated":{"line":9437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9437,"column":0},"generated":{"line":9438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9438,"column":0},"generated":{"line":9439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9439,"column":0},"generated":{"line":9440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9440,"column":0},"generated":{"line":9441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9441,"column":0},"generated":{"line":9442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9442,"column":0},"generated":{"line":9443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9443,"column":0},"generated":{"line":9444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9444,"column":0},"generated":{"line":9445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9445,"column":0},"generated":{"line":9446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9446,"column":0},"generated":{"line":9447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9447,"column":0},"generated":{"line":9448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9448,"column":0},"generated":{"line":9449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9449,"column":0},"generated":{"line":9450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9450,"column":0},"generated":{"line":9451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9451,"column":0},"generated":{"line":9452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9452,"column":0},"generated":{"line":9453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9453,"column":0},"generated":{"line":9454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9454,"column":0},"generated":{"line":9455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9455,"column":0},"generated":{"line":9456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9456,"column":0},"generated":{"line":9457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9457,"column":0},"generated":{"line":9458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9458,"column":0},"generated":{"line":9459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9459,"column":0},"generated":{"line":9460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9460,"column":0},"generated":{"line":9461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9461,"column":0},"generated":{"line":9462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9462,"column":0},"generated":{"line":9463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9463,"column":0},"generated":{"line":9464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9464,"column":0},"generated":{"line":9465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9465,"column":0},"generated":{"line":9466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9466,"column":0},"generated":{"line":9467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9467,"column":0},"generated":{"line":9468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9468,"column":0},"generated":{"line":9469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9469,"column":0},"generated":{"line":9470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9470,"column":0},"generated":{"line":9471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9471,"column":0},"generated":{"line":9472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9472,"column":0},"generated":{"line":9473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9473,"column":0},"generated":{"line":9474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9474,"column":0},"generated":{"line":9475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9475,"column":0},"generated":{"line":9476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9476,"column":0},"generated":{"line":9477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9477,"column":0},"generated":{"line":9478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9478,"column":0},"generated":{"line":9479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9479,"column":0},"generated":{"line":9480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9480,"column":0},"generated":{"line":9481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9481,"column":0},"generated":{"line":9482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9482,"column":0},"generated":{"line":9483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9483,"column":0},"generated":{"line":9484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9484,"column":0},"generated":{"line":9485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9485,"column":0},"generated":{"line":9486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9486,"column":0},"generated":{"line":9487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9487,"column":0},"generated":{"line":9488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9488,"column":0},"generated":{"line":9489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9489,"column":0},"generated":{"line":9490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9490,"column":0},"generated":{"line":9491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9491,"column":0},"generated":{"line":9492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9492,"column":0},"generated":{"line":9493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9493,"column":0},"generated":{"line":9494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9494,"column":0},"generated":{"line":9495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9495,"column":0},"generated":{"line":9496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9496,"column":0},"generated":{"line":9497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9497,"column":0},"generated":{"line":9498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9498,"column":0},"generated":{"line":9499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9499,"column":0},"generated":{"line":9500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9500,"column":0},"generated":{"line":9501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9501,"column":0},"generated":{"line":9502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9502,"column":0},"generated":{"line":9503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9503,"column":0},"generated":{"line":9504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9504,"column":0},"generated":{"line":9505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9505,"column":0},"generated":{"line":9506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9506,"column":0},"generated":{"line":9507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9507,"column":0},"generated":{"line":9508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9508,"column":0},"generated":{"line":9509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9509,"column":0},"generated":{"line":9510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9510,"column":0},"generated":{"line":9511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9511,"column":0},"generated":{"line":9512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9512,"column":0},"generated":{"line":9513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9513,"column":0},"generated":{"line":9514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9514,"column":0},"generated":{"line":9515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9515,"column":0},"generated":{"line":9516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9516,"column":0},"generated":{"line":9517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9517,"column":0},"generated":{"line":9518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9518,"column":0},"generated":{"line":9519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9519,"column":0},"generated":{"line":9520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9520,"column":0},"generated":{"line":9521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9521,"column":0},"generated":{"line":9522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9522,"column":0},"generated":{"line":9523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9523,"column":0},"generated":{"line":9524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9524,"column":0},"generated":{"line":9525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9525,"column":0},"generated":{"line":9526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9526,"column":0},"generated":{"line":9527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9527,"column":0},"generated":{"line":9528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9528,"column":0},"generated":{"line":9529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9529,"column":0},"generated":{"line":9530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9530,"column":0},"generated":{"line":9531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9531,"column":0},"generated":{"line":9532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9532,"column":0},"generated":{"line":9533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9533,"column":0},"generated":{"line":9534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9534,"column":0},"generated":{"line":9535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9535,"column":0},"generated":{"line":9536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9536,"column":0},"generated":{"line":9537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9537,"column":0},"generated":{"line":9538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9538,"column":0},"generated":{"line":9539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9539,"column":0},"generated":{"line":9540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9540,"column":0},"generated":{"line":9541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9541,"column":0},"generated":{"line":9542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9542,"column":0},"generated":{"line":9543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9543,"column":0},"generated":{"line":9544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9544,"column":0},"generated":{"line":9545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9545,"column":0},"generated":{"line":9546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9546,"column":0},"generated":{"line":9547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9547,"column":0},"generated":{"line":9548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9548,"column":0},"generated":{"line":9549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9549,"column":0},"generated":{"line":9550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9550,"column":0},"generated":{"line":9551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9551,"column":0},"generated":{"line":9552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9552,"column":0},"generated":{"line":9553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9553,"column":0},"generated":{"line":9554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9554,"column":0},"generated":{"line":9555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9555,"column":0},"generated":{"line":9556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9556,"column":0},"generated":{"line":9557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9557,"column":0},"generated":{"line":9558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9558,"column":0},"generated":{"line":9559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9559,"column":0},"generated":{"line":9560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9560,"column":0},"generated":{"line":9561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9561,"column":0},"generated":{"line":9562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9562,"column":0},"generated":{"line":9563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9563,"column":0},"generated":{"line":9564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9564,"column":0},"generated":{"line":9565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9565,"column":0},"generated":{"line":9566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9566,"column":0},"generated":{"line":9567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9567,"column":0},"generated":{"line":9568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9568,"column":0},"generated":{"line":9569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9569,"column":0},"generated":{"line":9570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9570,"column":0},"generated":{"line":9571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9571,"column":0},"generated":{"line":9572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9572,"column":0},"generated":{"line":9573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9573,"column":0},"generated":{"line":9574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9574,"column":0},"generated":{"line":9575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9575,"column":0},"generated":{"line":9576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9576,"column":0},"generated":{"line":9577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9577,"column":0},"generated":{"line":9578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9578,"column":0},"generated":{"line":9579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9579,"column":0},"generated":{"line":9580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9580,"column":0},"generated":{"line":9581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9581,"column":0},"generated":{"line":9582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9582,"column":0},"generated":{"line":9583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9583,"column":0},"generated":{"line":9584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9584,"column":0},"generated":{"line":9585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9585,"column":0},"generated":{"line":9586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9586,"column":0},"generated":{"line":9587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9587,"column":0},"generated":{"line":9588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9588,"column":0},"generated":{"line":9589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9589,"column":0},"generated":{"line":9590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9590,"column":0},"generated":{"line":9591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9591,"column":0},"generated":{"line":9592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9592,"column":0},"generated":{"line":9593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9593,"column":0},"generated":{"line":9594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9594,"column":0},"generated":{"line":9595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9595,"column":0},"generated":{"line":9596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9596,"column":0},"generated":{"line":9597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9597,"column":0},"generated":{"line":9598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9598,"column":0},"generated":{"line":9599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9599,"column":0},"generated":{"line":9600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9600,"column":0},"generated":{"line":9601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9601,"column":0},"generated":{"line":9602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9602,"column":0},"generated":{"line":9603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9603,"column":0},"generated":{"line":9604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9604,"column":0},"generated":{"line":9605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9605,"column":0},"generated":{"line":9606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9606,"column":0},"generated":{"line":9607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9607,"column":0},"generated":{"line":9608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9608,"column":0},"generated":{"line":9609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9609,"column":0},"generated":{"line":9610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9610,"column":0},"generated":{"line":9611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9611,"column":0},"generated":{"line":9612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9612,"column":0},"generated":{"line":9613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9613,"column":0},"generated":{"line":9614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9614,"column":0},"generated":{"line":9615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9615,"column":0},"generated":{"line":9616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9616,"column":0},"generated":{"line":9617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9617,"column":0},"generated":{"line":9618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9618,"column":0},"generated":{"line":9619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9619,"column":0},"generated":{"line":9620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9620,"column":0},"generated":{"line":9621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9621,"column":0},"generated":{"line":9622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9622,"column":0},"generated":{"line":9623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9623,"column":0},"generated":{"line":9624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9624,"column":0},"generated":{"line":9625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9625,"column":0},"generated":{"line":9626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9626,"column":0},"generated":{"line":9627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9627,"column":0},"generated":{"line":9628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9628,"column":0},"generated":{"line":9629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9629,"column":0},"generated":{"line":9630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9630,"column":0},"generated":{"line":9631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9631,"column":0},"generated":{"line":9632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9632,"column":0},"generated":{"line":9633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9633,"column":0},"generated":{"line":9634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9634,"column":0},"generated":{"line":9635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9635,"column":0},"generated":{"line":9636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9636,"column":0},"generated":{"line":9637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9637,"column":0},"generated":{"line":9638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9638,"column":0},"generated":{"line":9639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9639,"column":0},"generated":{"line":9640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9640,"column":0},"generated":{"line":9641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9641,"column":0},"generated":{"line":9642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9642,"column":0},"generated":{"line":9643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9643,"column":0},"generated":{"line":9644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9644,"column":0},"generated":{"line":9645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9645,"column":0},"generated":{"line":9646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9646,"column":0},"generated":{"line":9647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9647,"column":0},"generated":{"line":9648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9648,"column":0},"generated":{"line":9649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9649,"column":0},"generated":{"line":9650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9650,"column":0},"generated":{"line":9651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9651,"column":0},"generated":{"line":9652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9652,"column":0},"generated":{"line":9653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9653,"column":0},"generated":{"line":9654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9654,"column":0},"generated":{"line":9655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9655,"column":0},"generated":{"line":9656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9656,"column":0},"generated":{"line":9657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9657,"column":0},"generated":{"line":9658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9658,"column":0},"generated":{"line":9659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9659,"column":0},"generated":{"line":9660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9660,"column":0},"generated":{"line":9661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9661,"column":0},"generated":{"line":9662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9662,"column":0},"generated":{"line":9663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9663,"column":0},"generated":{"line":9664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9664,"column":0},"generated":{"line":9665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9665,"column":0},"generated":{"line":9666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9666,"column":0},"generated":{"line":9667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9667,"column":0},"generated":{"line":9668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9668,"column":0},"generated":{"line":9669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9669,"column":0},"generated":{"line":9670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9670,"column":0},"generated":{"line":9671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9671,"column":0},"generated":{"line":9672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9672,"column":0},"generated":{"line":9673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9673,"column":0},"generated":{"line":9674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9674,"column":0},"generated":{"line":9675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9675,"column":0},"generated":{"line":9676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9676,"column":0},"generated":{"line":9677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9677,"column":0},"generated":{"line":9678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9678,"column":0},"generated":{"line":9679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9679,"column":0},"generated":{"line":9680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9680,"column":0},"generated":{"line":9681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9681,"column":0},"generated":{"line":9682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9682,"column":0},"generated":{"line":9683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9683,"column":0},"generated":{"line":9684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9684,"column":0},"generated":{"line":9685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9685,"column":0},"generated":{"line":9686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9686,"column":0},"generated":{"line":9687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9687,"column":0},"generated":{"line":9688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9688,"column":0},"generated":{"line":9689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9689,"column":0},"generated":{"line":9690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9690,"column":0},"generated":{"line":9691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9691,"column":0},"generated":{"line":9692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9692,"column":0},"generated":{"line":9693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9693,"column":0},"generated":{"line":9694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9694,"column":0},"generated":{"line":9695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9695,"column":0},"generated":{"line":9696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9696,"column":0},"generated":{"line":9697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9697,"column":0},"generated":{"line":9698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9698,"column":0},"generated":{"line":9699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9699,"column":0},"generated":{"line":9700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9700,"column":0},"generated":{"line":9701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9701,"column":0},"generated":{"line":9702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9702,"column":0},"generated":{"line":9703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9703,"column":0},"generated":{"line":9704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9704,"column":0},"generated":{"line":9705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9705,"column":0},"generated":{"line":9706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9706,"column":0},"generated":{"line":9707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9707,"column":0},"generated":{"line":9708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9708,"column":0},"generated":{"line":9709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9709,"column":0},"generated":{"line":9710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9710,"column":0},"generated":{"line":9711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9711,"column":0},"generated":{"line":9712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9712,"column":0},"generated":{"line":9713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9713,"column":0},"generated":{"line":9714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9714,"column":0},"generated":{"line":9715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9715,"column":0},"generated":{"line":9716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9716,"column":0},"generated":{"line":9717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9717,"column":0},"generated":{"line":9718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9718,"column":0},"generated":{"line":9719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9719,"column":0},"generated":{"line":9720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9720,"column":0},"generated":{"line":9721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9721,"column":0},"generated":{"line":9722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9722,"column":0},"generated":{"line":9723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9723,"column":0},"generated":{"line":9724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9724,"column":0},"generated":{"line":9725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9725,"column":0},"generated":{"line":9726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9726,"column":0},"generated":{"line":9727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9727,"column":0},"generated":{"line":9728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9728,"column":0},"generated":{"line":9729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9729,"column":0},"generated":{"line":9730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9730,"column":0},"generated":{"line":9731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9731,"column":0},"generated":{"line":9732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9732,"column":0},"generated":{"line":9733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9733,"column":0},"generated":{"line":9734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9734,"column":0},"generated":{"line":9735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9735,"column":0},"generated":{"line":9736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9736,"column":0},"generated":{"line":9737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9737,"column":0},"generated":{"line":9738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9738,"column":0},"generated":{"line":9739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9739,"column":0},"generated":{"line":9740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9740,"column":0},"generated":{"line":9741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9741,"column":0},"generated":{"line":9742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9742,"column":0},"generated":{"line":9743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9743,"column":0},"generated":{"line":9744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9744,"column":0},"generated":{"line":9745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9745,"column":0},"generated":{"line":9746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9746,"column":0},"generated":{"line":9747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9747,"column":0},"generated":{"line":9748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9748,"column":0},"generated":{"line":9749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9749,"column":0},"generated":{"line":9750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9750,"column":0},"generated":{"line":9751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9751,"column":0},"generated":{"line":9752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9752,"column":0},"generated":{"line":9753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9753,"column":0},"generated":{"line":9754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9754,"column":0},"generated":{"line":9755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9755,"column":0},"generated":{"line":9756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9756,"column":0},"generated":{"line":9757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9757,"column":0},"generated":{"line":9758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9758,"column":0},"generated":{"line":9759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9759,"column":0},"generated":{"line":9760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9760,"column":0},"generated":{"line":9761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9761,"column":0},"generated":{"line":9762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9762,"column":0},"generated":{"line":9763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9763,"column":0},"generated":{"line":9764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9764,"column":0},"generated":{"line":9765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9765,"column":0},"generated":{"line":9766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9766,"column":0},"generated":{"line":9767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9767,"column":0},"generated":{"line":9768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9768,"column":0},"generated":{"line":9769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9769,"column":0},"generated":{"line":9770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9770,"column":0},"generated":{"line":9771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9771,"column":0},"generated":{"line":9772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9772,"column":0},"generated":{"line":9773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9773,"column":0},"generated":{"line":9774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9774,"column":0},"generated":{"line":9775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9775,"column":0},"generated":{"line":9776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9776,"column":0},"generated":{"line":9777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9777,"column":0},"generated":{"line":9778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9778,"column":0},"generated":{"line":9779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9779,"column":0},"generated":{"line":9780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9780,"column":0},"generated":{"line":9781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9781,"column":0},"generated":{"line":9782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9782,"column":0},"generated":{"line":9783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9783,"column":0},"generated":{"line":9784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9784,"column":0},"generated":{"line":9785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9785,"column":0},"generated":{"line":9786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9786,"column":0},"generated":{"line":9787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9787,"column":0},"generated":{"line":9788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9788,"column":0},"generated":{"line":9789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9789,"column":0},"generated":{"line":9790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9790,"column":0},"generated":{"line":9791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9791,"column":0},"generated":{"line":9792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9792,"column":0},"generated":{"line":9793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9793,"column":0},"generated":{"line":9794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9794,"column":0},"generated":{"line":9795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9795,"column":0},"generated":{"line":9796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9796,"column":0},"generated":{"line":9797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9797,"column":0},"generated":{"line":9798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9798,"column":0},"generated":{"line":9799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9799,"column":0},"generated":{"line":9800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9800,"column":0},"generated":{"line":9801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9801,"column":0},"generated":{"line":9802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9802,"column":0},"generated":{"line":9803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9803,"column":0},"generated":{"line":9804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9804,"column":0},"generated":{"line":9805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9805,"column":0},"generated":{"line":9806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9806,"column":0},"generated":{"line":9807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9807,"column":0},"generated":{"line":9808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9808,"column":0},"generated":{"line":9809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9809,"column":0},"generated":{"line":9810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9810,"column":0},"generated":{"line":9811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9811,"column":0},"generated":{"line":9812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9812,"column":0},"generated":{"line":9813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9813,"column":0},"generated":{"line":9814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9814,"column":0},"generated":{"line":9815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9815,"column":0},"generated":{"line":9816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9816,"column":0},"generated":{"line":9817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9817,"column":0},"generated":{"line":9818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9818,"column":0},"generated":{"line":9819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9819,"column":0},"generated":{"line":9820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9820,"column":0},"generated":{"line":9821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9821,"column":0},"generated":{"line":9822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9822,"column":0},"generated":{"line":9823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9823,"column":0},"generated":{"line":9824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9824,"column":0},"generated":{"line":9825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9825,"column":0},"generated":{"line":9826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9826,"column":0},"generated":{"line":9827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9827,"column":0},"generated":{"line":9828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9828,"column":0},"generated":{"line":9829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9829,"column":0},"generated":{"line":9830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9830,"column":0},"generated":{"line":9831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9831,"column":0},"generated":{"line":9832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9832,"column":0},"generated":{"line":9833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9833,"column":0},"generated":{"line":9834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9834,"column":0},"generated":{"line":9835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9835,"column":0},"generated":{"line":9836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9836,"column":0},"generated":{"line":9837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9837,"column":0},"generated":{"line":9838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9838,"column":0},"generated":{"line":9839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9839,"column":0},"generated":{"line":9840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9840,"column":0},"generated":{"line":9841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9841,"column":0},"generated":{"line":9842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9842,"column":0},"generated":{"line":9843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9843,"column":0},"generated":{"line":9844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9844,"column":0},"generated":{"line":9845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9845,"column":0},"generated":{"line":9846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9846,"column":0},"generated":{"line":9847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9847,"column":0},"generated":{"line":9848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9848,"column":0},"generated":{"line":9849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9849,"column":0},"generated":{"line":9850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9850,"column":0},"generated":{"line":9851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9851,"column":0},"generated":{"line":9852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9852,"column":0},"generated":{"line":9853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9853,"column":0},"generated":{"line":9854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9854,"column":0},"generated":{"line":9855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9855,"column":0},"generated":{"line":9856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9856,"column":0},"generated":{"line":9857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9857,"column":0},"generated":{"line":9858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9858,"column":0},"generated":{"line":9859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9859,"column":0},"generated":{"line":9860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9860,"column":0},"generated":{"line":9861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9861,"column":0},"generated":{"line":9862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9862,"column":0},"generated":{"line":9863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9863,"column":0},"generated":{"line":9864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9864,"column":0},"generated":{"line":9865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9865,"column":0},"generated":{"line":9866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9866,"column":0},"generated":{"line":9867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9867,"column":0},"generated":{"line":9868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9868,"column":0},"generated":{"line":9869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9869,"column":0},"generated":{"line":9870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9870,"column":0},"generated":{"line":9871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9871,"column":0},"generated":{"line":9872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9872,"column":0},"generated":{"line":9873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9873,"column":0},"generated":{"line":9874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9874,"column":0},"generated":{"line":9875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9875,"column":0},"generated":{"line":9876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9876,"column":0},"generated":{"line":9877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9877,"column":0},"generated":{"line":9878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9878,"column":0},"generated":{"line":9879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9879,"column":0},"generated":{"line":9880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9880,"column":0},"generated":{"line":9881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9881,"column":0},"generated":{"line":9882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9882,"column":0},"generated":{"line":9883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9883,"column":0},"generated":{"line":9884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9884,"column":0},"generated":{"line":9885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9885,"column":0},"generated":{"line":9886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9886,"column":0},"generated":{"line":9887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9887,"column":0},"generated":{"line":9888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9888,"column":0},"generated":{"line":9889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9889,"column":0},"generated":{"line":9890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9890,"column":0},"generated":{"line":9891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9891,"column":0},"generated":{"line":9892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9892,"column":0},"generated":{"line":9893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9893,"column":0},"generated":{"line":9894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9894,"column":0},"generated":{"line":9895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9895,"column":0},"generated":{"line":9896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9896,"column":0},"generated":{"line":9897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9897,"column":0},"generated":{"line":9898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9898,"column":0},"generated":{"line":9899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9899,"column":0},"generated":{"line":9900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9900,"column":0},"generated":{"line":9901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9901,"column":0},"generated":{"line":9902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9902,"column":0},"generated":{"line":9903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9903,"column":0},"generated":{"line":9904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9904,"column":0},"generated":{"line":9905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9905,"column":0},"generated":{"line":9906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9906,"column":0},"generated":{"line":9907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9907,"column":0},"generated":{"line":9908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9908,"column":0},"generated":{"line":9909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9909,"column":0},"generated":{"line":9910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9910,"column":0},"generated":{"line":9911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9911,"column":0},"generated":{"line":9912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9912,"column":0},"generated":{"line":9913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9913,"column":0},"generated":{"line":9914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9914,"column":0},"generated":{"line":9915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9915,"column":0},"generated":{"line":9916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9916,"column":0},"generated":{"line":9917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9917,"column":0},"generated":{"line":9918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9918,"column":0},"generated":{"line":9919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9919,"column":0},"generated":{"line":9920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9920,"column":0},"generated":{"line":9921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9921,"column":0},"generated":{"line":9922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9922,"column":0},"generated":{"line":9923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9923,"column":0},"generated":{"line":9924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9924,"column":0},"generated":{"line":9925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9925,"column":0},"generated":{"line":9926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9926,"column":0},"generated":{"line":9927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9927,"column":0},"generated":{"line":9928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9928,"column":0},"generated":{"line":9929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9929,"column":0},"generated":{"line":9930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9930,"column":0},"generated":{"line":9931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9931,"column":0},"generated":{"line":9932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9932,"column":0},"generated":{"line":9933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9933,"column":0},"generated":{"line":9934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9934,"column":0},"generated":{"line":9935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9935,"column":0},"generated":{"line":9936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9936,"column":0},"generated":{"line":9937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9937,"column":0},"generated":{"line":9938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9938,"column":0},"generated":{"line":9939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9939,"column":0},"generated":{"line":9940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9940,"column":0},"generated":{"line":9941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9941,"column":0},"generated":{"line":9942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9942,"column":0},"generated":{"line":9943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9943,"column":0},"generated":{"line":9944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9944,"column":0},"generated":{"line":9945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9945,"column":0},"generated":{"line":9946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9946,"column":0},"generated":{"line":9947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9947,"column":0},"generated":{"line":9948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9948,"column":0},"generated":{"line":9949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9949,"column":0},"generated":{"line":9950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9950,"column":0},"generated":{"line":9951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9951,"column":0},"generated":{"line":9952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9952,"column":0},"generated":{"line":9953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9953,"column":0},"generated":{"line":9954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9954,"column":0},"generated":{"line":9955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9955,"column":0},"generated":{"line":9956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9956,"column":0},"generated":{"line":9957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9957,"column":0},"generated":{"line":9958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9958,"column":0},"generated":{"line":9959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9959,"column":0},"generated":{"line":9960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9960,"column":0},"generated":{"line":9961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9961,"column":0},"generated":{"line":9962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9962,"column":0},"generated":{"line":9963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9963,"column":0},"generated":{"line":9964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9964,"column":0},"generated":{"line":9965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9965,"column":0},"generated":{"line":9966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9966,"column":0},"generated":{"line":9967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9967,"column":0},"generated":{"line":9968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9968,"column":0},"generated":{"line":9969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9969,"column":0},"generated":{"line":9970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9970,"column":0},"generated":{"line":9971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9971,"column":0},"generated":{"line":9972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9972,"column":0},"generated":{"line":9973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9973,"column":0},"generated":{"line":9974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9974,"column":0},"generated":{"line":9975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9975,"column":0},"generated":{"line":9976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9976,"column":0},"generated":{"line":9977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9977,"column":0},"generated":{"line":9978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9978,"column":0},"generated":{"line":9979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9979,"column":0},"generated":{"line":9980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9980,"column":0},"generated":{"line":9981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9981,"column":0},"generated":{"line":9982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9982,"column":0},"generated":{"line":9983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9983,"column":0},"generated":{"line":9984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9984,"column":0},"generated":{"line":9985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9985,"column":0},"generated":{"line":9986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9986,"column":0},"generated":{"line":9987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9987,"column":0},"generated":{"line":9988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9988,"column":0},"generated":{"line":9989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9989,"column":0},"generated":{"line":9990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9990,"column":0},"generated":{"line":9991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9991,"column":0},"generated":{"line":9992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9992,"column":0},"generated":{"line":9993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9993,"column":0},"generated":{"line":9994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9994,"column":0},"generated":{"line":9995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9995,"column":0},"generated":{"line":9996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9996,"column":0},"generated":{"line":9997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9997,"column":0},"generated":{"line":9998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9998,"column":0},"generated":{"line":9999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":9999,"column":0},"generated":{"line":10000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10000,"column":0},"generated":{"line":10001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10001,"column":0},"generated":{"line":10002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10002,"column":0},"generated":{"line":10003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10003,"column":0},"generated":{"line":10004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10004,"column":0},"generated":{"line":10005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10005,"column":0},"generated":{"line":10006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10006,"column":0},"generated":{"line":10007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10007,"column":0},"generated":{"line":10008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10008,"column":0},"generated":{"line":10009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10009,"column":0},"generated":{"line":10010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10010,"column":0},"generated":{"line":10011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10011,"column":0},"generated":{"line":10012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10012,"column":0},"generated":{"line":10013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10013,"column":0},"generated":{"line":10014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10014,"column":0},"generated":{"line":10015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10015,"column":0},"generated":{"line":10016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10016,"column":0},"generated":{"line":10017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10017,"column":0},"generated":{"line":10018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10018,"column":0},"generated":{"line":10019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10019,"column":0},"generated":{"line":10020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10020,"column":0},"generated":{"line":10021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10021,"column":0},"generated":{"line":10022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10022,"column":0},"generated":{"line":10023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10023,"column":0},"generated":{"line":10024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10024,"column":0},"generated":{"line":10025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10025,"column":0},"generated":{"line":10026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10026,"column":0},"generated":{"line":10027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10027,"column":0},"generated":{"line":10028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10028,"column":0},"generated":{"line":10029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10029,"column":0},"generated":{"line":10030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10030,"column":0},"generated":{"line":10031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10031,"column":0},"generated":{"line":10032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10032,"column":0},"generated":{"line":10033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10033,"column":0},"generated":{"line":10034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10034,"column":0},"generated":{"line":10035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10035,"column":0},"generated":{"line":10036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10036,"column":0},"generated":{"line":10037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10037,"column":0},"generated":{"line":10038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10038,"column":0},"generated":{"line":10039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10039,"column":0},"generated":{"line":10040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10040,"column":0},"generated":{"line":10041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10041,"column":0},"generated":{"line":10042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10042,"column":0},"generated":{"line":10043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10043,"column":0},"generated":{"line":10044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10044,"column":0},"generated":{"line":10045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10045,"column":0},"generated":{"line":10046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10046,"column":0},"generated":{"line":10047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10047,"column":0},"generated":{"line":10048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10048,"column":0},"generated":{"line":10049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10049,"column":0},"generated":{"line":10050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10050,"column":0},"generated":{"line":10051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10051,"column":0},"generated":{"line":10052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10052,"column":0},"generated":{"line":10053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10053,"column":0},"generated":{"line":10054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10054,"column":0},"generated":{"line":10055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10055,"column":0},"generated":{"line":10056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10056,"column":0},"generated":{"line":10057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10057,"column":0},"generated":{"line":10058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10058,"column":0},"generated":{"line":10059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10059,"column":0},"generated":{"line":10060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10060,"column":0},"generated":{"line":10061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10061,"column":0},"generated":{"line":10062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10062,"column":0},"generated":{"line":10063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10063,"column":0},"generated":{"line":10064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10064,"column":0},"generated":{"line":10065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10065,"column":0},"generated":{"line":10066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10066,"column":0},"generated":{"line":10067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10067,"column":0},"generated":{"line":10068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10068,"column":0},"generated":{"line":10069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10069,"column":0},"generated":{"line":10070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10070,"column":0},"generated":{"line":10071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10071,"column":0},"generated":{"line":10072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10072,"column":0},"generated":{"line":10073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10073,"column":0},"generated":{"line":10074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10074,"column":0},"generated":{"line":10075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10075,"column":0},"generated":{"line":10076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10076,"column":0},"generated":{"line":10077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10077,"column":0},"generated":{"line":10078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10078,"column":0},"generated":{"line":10079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10079,"column":0},"generated":{"line":10080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10080,"column":0},"generated":{"line":10081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10081,"column":0},"generated":{"line":10082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10082,"column":0},"generated":{"line":10083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10083,"column":0},"generated":{"line":10084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10084,"column":0},"generated":{"line":10085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10085,"column":0},"generated":{"line":10086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10086,"column":0},"generated":{"line":10087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10087,"column":0},"generated":{"line":10088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10088,"column":0},"generated":{"line":10089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10089,"column":0},"generated":{"line":10090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10090,"column":0},"generated":{"line":10091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10091,"column":0},"generated":{"line":10092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10092,"column":0},"generated":{"line":10093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10093,"column":0},"generated":{"line":10094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10094,"column":0},"generated":{"line":10095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10095,"column":0},"generated":{"line":10096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10096,"column":0},"generated":{"line":10097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10097,"column":0},"generated":{"line":10098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10098,"column":0},"generated":{"line":10099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10099,"column":0},"generated":{"line":10100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10100,"column":0},"generated":{"line":10101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10101,"column":0},"generated":{"line":10102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10102,"column":0},"generated":{"line":10103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10103,"column":0},"generated":{"line":10104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10104,"column":0},"generated":{"line":10105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10105,"column":0},"generated":{"line":10106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10106,"column":0},"generated":{"line":10107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10107,"column":0},"generated":{"line":10108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10108,"column":0},"generated":{"line":10109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10109,"column":0},"generated":{"line":10110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10110,"column":0},"generated":{"line":10111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10111,"column":0},"generated":{"line":10112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10112,"column":0},"generated":{"line":10113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10113,"column":0},"generated":{"line":10114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10114,"column":0},"generated":{"line":10115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10115,"column":0},"generated":{"line":10116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10116,"column":0},"generated":{"line":10117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10117,"column":0},"generated":{"line":10118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10118,"column":0},"generated":{"line":10119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10119,"column":0},"generated":{"line":10120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10120,"column":0},"generated":{"line":10121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10121,"column":0},"generated":{"line":10122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10122,"column":0},"generated":{"line":10123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10123,"column":0},"generated":{"line":10124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10124,"column":0},"generated":{"line":10125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10125,"column":0},"generated":{"line":10126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10126,"column":0},"generated":{"line":10127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10127,"column":0},"generated":{"line":10128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10128,"column":0},"generated":{"line":10129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10129,"column":0},"generated":{"line":10130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10130,"column":0},"generated":{"line":10131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10131,"column":0},"generated":{"line":10132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10132,"column":0},"generated":{"line":10133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10133,"column":0},"generated":{"line":10134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10134,"column":0},"generated":{"line":10135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10135,"column":0},"generated":{"line":10136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10136,"column":0},"generated":{"line":10137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10137,"column":0},"generated":{"line":10138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10138,"column":0},"generated":{"line":10139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10139,"column":0},"generated":{"line":10140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10140,"column":0},"generated":{"line":10141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10141,"column":0},"generated":{"line":10142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10142,"column":0},"generated":{"line":10143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10143,"column":0},"generated":{"line":10144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10144,"column":0},"generated":{"line":10145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10145,"column":0},"generated":{"line":10146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10146,"column":0},"generated":{"line":10147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10147,"column":0},"generated":{"line":10148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10148,"column":0},"generated":{"line":10149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10149,"column":0},"generated":{"line":10150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10150,"column":0},"generated":{"line":10151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10151,"column":0},"generated":{"line":10152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10152,"column":0},"generated":{"line":10153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10153,"column":0},"generated":{"line":10154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10154,"column":0},"generated":{"line":10155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10155,"column":0},"generated":{"line":10156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10156,"column":0},"generated":{"line":10157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10157,"column":0},"generated":{"line":10158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10158,"column":0},"generated":{"line":10159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10159,"column":0},"generated":{"line":10160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10160,"column":0},"generated":{"line":10161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10161,"column":0},"generated":{"line":10162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10162,"column":0},"generated":{"line":10163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10163,"column":0},"generated":{"line":10164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10164,"column":0},"generated":{"line":10165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10165,"column":0},"generated":{"line":10166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10166,"column":0},"generated":{"line":10167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10167,"column":0},"generated":{"line":10168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10168,"column":0},"generated":{"line":10169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10169,"column":0},"generated":{"line":10170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10170,"column":0},"generated":{"line":10171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10171,"column":0},"generated":{"line":10172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10172,"column":0},"generated":{"line":10173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10173,"column":0},"generated":{"line":10174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10174,"column":0},"generated":{"line":10175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10175,"column":0},"generated":{"line":10176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10176,"column":0},"generated":{"line":10177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10177,"column":0},"generated":{"line":10178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10178,"column":0},"generated":{"line":10179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10179,"column":0},"generated":{"line":10180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10180,"column":0},"generated":{"line":10181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10181,"column":0},"generated":{"line":10182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10182,"column":0},"generated":{"line":10183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10183,"column":0},"generated":{"line":10184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10184,"column":0},"generated":{"line":10185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10185,"column":0},"generated":{"line":10186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10186,"column":0},"generated":{"line":10187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10187,"column":0},"generated":{"line":10188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10188,"column":0},"generated":{"line":10189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10189,"column":0},"generated":{"line":10190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10190,"column":0},"generated":{"line":10191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10191,"column":0},"generated":{"line":10192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10192,"column":0},"generated":{"line":10193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10193,"column":0},"generated":{"line":10194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10194,"column":0},"generated":{"line":10195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10195,"column":0},"generated":{"line":10196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10196,"column":0},"generated":{"line":10197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10197,"column":0},"generated":{"line":10198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10198,"column":0},"generated":{"line":10199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10199,"column":0},"generated":{"line":10200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10200,"column":0},"generated":{"line":10201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10201,"column":0},"generated":{"line":10202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10202,"column":0},"generated":{"line":10203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10203,"column":0},"generated":{"line":10204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10204,"column":0},"generated":{"line":10205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10205,"column":0},"generated":{"line":10206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10206,"column":0},"generated":{"line":10207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10207,"column":0},"generated":{"line":10208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10208,"column":0},"generated":{"line":10209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10209,"column":0},"generated":{"line":10210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10210,"column":0},"generated":{"line":10211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10211,"column":0},"generated":{"line":10212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10212,"column":0},"generated":{"line":10213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10213,"column":0},"generated":{"line":10214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10214,"column":0},"generated":{"line":10215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10215,"column":0},"generated":{"line":10216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10216,"column":0},"generated":{"line":10217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10217,"column":0},"generated":{"line":10218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10218,"column":0},"generated":{"line":10219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10219,"column":0},"generated":{"line":10220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10220,"column":0},"generated":{"line":10221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10221,"column":0},"generated":{"line":10222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10222,"column":0},"generated":{"line":10223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10223,"column":0},"generated":{"line":10224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10224,"column":0},"generated":{"line":10225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10225,"column":0},"generated":{"line":10226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10226,"column":0},"generated":{"line":10227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10227,"column":0},"generated":{"line":10228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10228,"column":0},"generated":{"line":10229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10229,"column":0},"generated":{"line":10230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10230,"column":0},"generated":{"line":10231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10231,"column":0},"generated":{"line":10232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10232,"column":0},"generated":{"line":10233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10233,"column":0},"generated":{"line":10234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10234,"column":0},"generated":{"line":10235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10235,"column":0},"generated":{"line":10236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10236,"column":0},"generated":{"line":10237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10237,"column":0},"generated":{"line":10238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10238,"column":0},"generated":{"line":10239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10239,"column":0},"generated":{"line":10240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10240,"column":0},"generated":{"line":10241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10241,"column":0},"generated":{"line":10242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10242,"column":0},"generated":{"line":10243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10243,"column":0},"generated":{"line":10244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10244,"column":0},"generated":{"line":10245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10245,"column":0},"generated":{"line":10246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10246,"column":0},"generated":{"line":10247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10247,"column":0},"generated":{"line":10248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10248,"column":0},"generated":{"line":10249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10249,"column":0},"generated":{"line":10250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10250,"column":0},"generated":{"line":10251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10251,"column":0},"generated":{"line":10252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10252,"column":0},"generated":{"line":10253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10253,"column":0},"generated":{"line":10254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10254,"column":0},"generated":{"line":10255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10255,"column":0},"generated":{"line":10256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10256,"column":0},"generated":{"line":10257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10257,"column":0},"generated":{"line":10258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10258,"column":0},"generated":{"line":10259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10259,"column":0},"generated":{"line":10260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10260,"column":0},"generated":{"line":10261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10261,"column":0},"generated":{"line":10262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10262,"column":0},"generated":{"line":10263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10263,"column":0},"generated":{"line":10264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10264,"column":0},"generated":{"line":10265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10265,"column":0},"generated":{"line":10266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10266,"column":0},"generated":{"line":10267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10267,"column":0},"generated":{"line":10268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10268,"column":0},"generated":{"line":10269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10269,"column":0},"generated":{"line":10270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10270,"column":0},"generated":{"line":10271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10271,"column":0},"generated":{"line":10272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10272,"column":0},"generated":{"line":10273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10273,"column":0},"generated":{"line":10274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10274,"column":0},"generated":{"line":10275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10275,"column":0},"generated":{"line":10276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10276,"column":0},"generated":{"line":10277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10277,"column":0},"generated":{"line":10278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10278,"column":0},"generated":{"line":10279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10279,"column":0},"generated":{"line":10280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10280,"column":0},"generated":{"line":10281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10281,"column":0},"generated":{"line":10282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10282,"column":0},"generated":{"line":10283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10283,"column":0},"generated":{"line":10284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10284,"column":0},"generated":{"line":10285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10285,"column":0},"generated":{"line":10286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10286,"column":0},"generated":{"line":10287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10287,"column":0},"generated":{"line":10288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10288,"column":0},"generated":{"line":10289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10289,"column":0},"generated":{"line":10290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10290,"column":0},"generated":{"line":10291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10291,"column":0},"generated":{"line":10292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10292,"column":0},"generated":{"line":10293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10293,"column":0},"generated":{"line":10294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10294,"column":0},"generated":{"line":10295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10295,"column":0},"generated":{"line":10296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10296,"column":0},"generated":{"line":10297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10297,"column":0},"generated":{"line":10298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10298,"column":0},"generated":{"line":10299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10299,"column":0},"generated":{"line":10300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10300,"column":0},"generated":{"line":10301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10301,"column":0},"generated":{"line":10302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10302,"column":0},"generated":{"line":10303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10303,"column":0},"generated":{"line":10304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10304,"column":0},"generated":{"line":10305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10305,"column":0},"generated":{"line":10306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10306,"column":0},"generated":{"line":10307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10307,"column":0},"generated":{"line":10308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10308,"column":0},"generated":{"line":10309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10309,"column":0},"generated":{"line":10310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10310,"column":0},"generated":{"line":10311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10311,"column":0},"generated":{"line":10312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10312,"column":0},"generated":{"line":10313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10313,"column":0},"generated":{"line":10314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10314,"column":0},"generated":{"line":10315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10315,"column":0},"generated":{"line":10316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10316,"column":0},"generated":{"line":10317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10317,"column":0},"generated":{"line":10318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10318,"column":0},"generated":{"line":10319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10319,"column":0},"generated":{"line":10320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10320,"column":0},"generated":{"line":10321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10321,"column":0},"generated":{"line":10322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10322,"column":0},"generated":{"line":10323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10323,"column":0},"generated":{"line":10324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10324,"column":0},"generated":{"line":10325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10325,"column":0},"generated":{"line":10326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10326,"column":0},"generated":{"line":10327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10327,"column":0},"generated":{"line":10328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10328,"column":0},"generated":{"line":10329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10329,"column":0},"generated":{"line":10330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10330,"column":0},"generated":{"line":10331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10331,"column":0},"generated":{"line":10332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10332,"column":0},"generated":{"line":10333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10333,"column":0},"generated":{"line":10334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10334,"column":0},"generated":{"line":10335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10335,"column":0},"generated":{"line":10336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10336,"column":0},"generated":{"line":10337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10337,"column":0},"generated":{"line":10338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10338,"column":0},"generated":{"line":10339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10339,"column":0},"generated":{"line":10340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10340,"column":0},"generated":{"line":10341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10341,"column":0},"generated":{"line":10342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10342,"column":0},"generated":{"line":10343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10343,"column":0},"generated":{"line":10344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10344,"column":0},"generated":{"line":10345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10345,"column":0},"generated":{"line":10346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10346,"column":0},"generated":{"line":10347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10347,"column":0},"generated":{"line":10348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10348,"column":0},"generated":{"line":10349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10349,"column":0},"generated":{"line":10350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10350,"column":0},"generated":{"line":10351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10351,"column":0},"generated":{"line":10352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10352,"column":0},"generated":{"line":10353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10353,"column":0},"generated":{"line":10354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10354,"column":0},"generated":{"line":10355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10355,"column":0},"generated":{"line":10356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10356,"column":0},"generated":{"line":10357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10357,"column":0},"generated":{"line":10358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10358,"column":0},"generated":{"line":10359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10359,"column":0},"generated":{"line":10360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10360,"column":0},"generated":{"line":10361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10361,"column":0},"generated":{"line":10362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10362,"column":0},"generated":{"line":10363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10363,"column":0},"generated":{"line":10364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10364,"column":0},"generated":{"line":10365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10365,"column":0},"generated":{"line":10366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10366,"column":0},"generated":{"line":10367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10367,"column":0},"generated":{"line":10368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10368,"column":0},"generated":{"line":10369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10369,"column":0},"generated":{"line":10370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10370,"column":0},"generated":{"line":10371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10371,"column":0},"generated":{"line":10372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10372,"column":0},"generated":{"line":10373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10373,"column":0},"generated":{"line":10374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10374,"column":0},"generated":{"line":10375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10375,"column":0},"generated":{"line":10376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10376,"column":0},"generated":{"line":10377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10377,"column":0},"generated":{"line":10378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10378,"column":0},"generated":{"line":10379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10379,"column":0},"generated":{"line":10380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10380,"column":0},"generated":{"line":10381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10381,"column":0},"generated":{"line":10382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10382,"column":0},"generated":{"line":10383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10383,"column":0},"generated":{"line":10384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10384,"column":0},"generated":{"line":10385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10385,"column":0},"generated":{"line":10386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10386,"column":0},"generated":{"line":10387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10387,"column":0},"generated":{"line":10388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10388,"column":0},"generated":{"line":10389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10389,"column":0},"generated":{"line":10390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10390,"column":0},"generated":{"line":10391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10391,"column":0},"generated":{"line":10392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10392,"column":0},"generated":{"line":10393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10393,"column":0},"generated":{"line":10394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10394,"column":0},"generated":{"line":10395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10395,"column":0},"generated":{"line":10396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10396,"column":0},"generated":{"line":10397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10397,"column":0},"generated":{"line":10398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10398,"column":0},"generated":{"line":10399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10399,"column":0},"generated":{"line":10400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10400,"column":0},"generated":{"line":10401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10401,"column":0},"generated":{"line":10402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10402,"column":0},"generated":{"line":10403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10403,"column":0},"generated":{"line":10404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10404,"column":0},"generated":{"line":10405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10405,"column":0},"generated":{"line":10406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10406,"column":0},"generated":{"line":10407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10407,"column":0},"generated":{"line":10408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10408,"column":0},"generated":{"line":10409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10409,"column":0},"generated":{"line":10410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10410,"column":0},"generated":{"line":10411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10411,"column":0},"generated":{"line":10412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10412,"column":0},"generated":{"line":10413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10413,"column":0},"generated":{"line":10414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10414,"column":0},"generated":{"line":10415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10415,"column":0},"generated":{"line":10416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10416,"column":0},"generated":{"line":10417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10417,"column":0},"generated":{"line":10418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10418,"column":0},"generated":{"line":10419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10419,"column":0},"generated":{"line":10420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10420,"column":0},"generated":{"line":10421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10421,"column":0},"generated":{"line":10422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10422,"column":0},"generated":{"line":10423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10423,"column":0},"generated":{"line":10424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10424,"column":0},"generated":{"line":10425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10425,"column":0},"generated":{"line":10426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10426,"column":0},"generated":{"line":10427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10427,"column":0},"generated":{"line":10428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10428,"column":0},"generated":{"line":10429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10429,"column":0},"generated":{"line":10430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10430,"column":0},"generated":{"line":10431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10431,"column":0},"generated":{"line":10432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10432,"column":0},"generated":{"line":10433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10433,"column":0},"generated":{"line":10434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10434,"column":0},"generated":{"line":10435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10435,"column":0},"generated":{"line":10436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10436,"column":0},"generated":{"line":10437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10437,"column":0},"generated":{"line":10438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10438,"column":0},"generated":{"line":10439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10439,"column":0},"generated":{"line":10440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10440,"column":0},"generated":{"line":10441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10441,"column":0},"generated":{"line":10442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10442,"column":0},"generated":{"line":10443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10443,"column":0},"generated":{"line":10444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10444,"column":0},"generated":{"line":10445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10445,"column":0},"generated":{"line":10446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10446,"column":0},"generated":{"line":10447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10447,"column":0},"generated":{"line":10448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10448,"column":0},"generated":{"line":10449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10449,"column":0},"generated":{"line":10450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10450,"column":0},"generated":{"line":10451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10451,"column":0},"generated":{"line":10452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10452,"column":0},"generated":{"line":10453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10453,"column":0},"generated":{"line":10454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10454,"column":0},"generated":{"line":10455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10455,"column":0},"generated":{"line":10456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10456,"column":0},"generated":{"line":10457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10457,"column":0},"generated":{"line":10458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10458,"column":0},"generated":{"line":10459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10459,"column":0},"generated":{"line":10460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10460,"column":0},"generated":{"line":10461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10461,"column":0},"generated":{"line":10462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10462,"column":0},"generated":{"line":10463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10463,"column":0},"generated":{"line":10464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10464,"column":0},"generated":{"line":10465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10465,"column":0},"generated":{"line":10466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10466,"column":0},"generated":{"line":10467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10467,"column":0},"generated":{"line":10468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10468,"column":0},"generated":{"line":10469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10469,"column":0},"generated":{"line":10470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10470,"column":0},"generated":{"line":10471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10471,"column":0},"generated":{"line":10472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10472,"column":0},"generated":{"line":10473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10473,"column":0},"generated":{"line":10474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10474,"column":0},"generated":{"line":10475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10475,"column":0},"generated":{"line":10476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10476,"column":0},"generated":{"line":10477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10477,"column":0},"generated":{"line":10478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10478,"column":0},"generated":{"line":10479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10479,"column":0},"generated":{"line":10480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10480,"column":0},"generated":{"line":10481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10481,"column":0},"generated":{"line":10482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10482,"column":0},"generated":{"line":10483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10483,"column":0},"generated":{"line":10484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10484,"column":0},"generated":{"line":10485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10485,"column":0},"generated":{"line":10486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10486,"column":0},"generated":{"line":10487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10487,"column":0},"generated":{"line":10488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10488,"column":0},"generated":{"line":10489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10489,"column":0},"generated":{"line":10490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10490,"column":0},"generated":{"line":10491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10491,"column":0},"generated":{"line":10492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10492,"column":0},"generated":{"line":10493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10493,"column":0},"generated":{"line":10494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10494,"column":0},"generated":{"line":10495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10495,"column":0},"generated":{"line":10496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10496,"column":0},"generated":{"line":10497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10497,"column":0},"generated":{"line":10498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10498,"column":0},"generated":{"line":10499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10499,"column":0},"generated":{"line":10500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10500,"column":0},"generated":{"line":10501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10501,"column":0},"generated":{"line":10502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10502,"column":0},"generated":{"line":10503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10503,"column":0},"generated":{"line":10504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10504,"column":0},"generated":{"line":10505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10505,"column":0},"generated":{"line":10506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10506,"column":0},"generated":{"line":10507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10507,"column":0},"generated":{"line":10508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10508,"column":0},"generated":{"line":10509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10509,"column":0},"generated":{"line":10510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10510,"column":0},"generated":{"line":10511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10511,"column":0},"generated":{"line":10512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10512,"column":0},"generated":{"line":10513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10513,"column":0},"generated":{"line":10514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10514,"column":0},"generated":{"line":10515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10515,"column":0},"generated":{"line":10516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10516,"column":0},"generated":{"line":10517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10517,"column":0},"generated":{"line":10518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10518,"column":0},"generated":{"line":10519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10519,"column":0},"generated":{"line":10520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10520,"column":0},"generated":{"line":10521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10521,"column":0},"generated":{"line":10522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10522,"column":0},"generated":{"line":10523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10523,"column":0},"generated":{"line":10524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10524,"column":0},"generated":{"line":10525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10525,"column":0},"generated":{"line":10526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10526,"column":0},"generated":{"line":10527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10527,"column":0},"generated":{"line":10528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10528,"column":0},"generated":{"line":10529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10529,"column":0},"generated":{"line":10530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10530,"column":0},"generated":{"line":10531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10531,"column":0},"generated":{"line":10532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10532,"column":0},"generated":{"line":10533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10533,"column":0},"generated":{"line":10534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10534,"column":0},"generated":{"line":10535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10535,"column":0},"generated":{"line":10536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10536,"column":0},"generated":{"line":10537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10537,"column":0},"generated":{"line":10538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10538,"column":0},"generated":{"line":10539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10539,"column":0},"generated":{"line":10540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10540,"column":0},"generated":{"line":10541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10541,"column":0},"generated":{"line":10542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10542,"column":0},"generated":{"line":10543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10543,"column":0},"generated":{"line":10544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10544,"column":0},"generated":{"line":10545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10545,"column":0},"generated":{"line":10546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10546,"column":0},"generated":{"line":10547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10547,"column":0},"generated":{"line":10548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10548,"column":0},"generated":{"line":10549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10549,"column":0},"generated":{"line":10550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10550,"column":0},"generated":{"line":10551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10551,"column":0},"generated":{"line":10552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10552,"column":0},"generated":{"line":10553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10553,"column":0},"generated":{"line":10554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10554,"column":0},"generated":{"line":10555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10555,"column":0},"generated":{"line":10556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10556,"column":0},"generated":{"line":10557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10557,"column":0},"generated":{"line":10558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10558,"column":0},"generated":{"line":10559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10559,"column":0},"generated":{"line":10560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10560,"column":0},"generated":{"line":10561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10561,"column":0},"generated":{"line":10562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10562,"column":0},"generated":{"line":10563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10563,"column":0},"generated":{"line":10564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10564,"column":0},"generated":{"line":10565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10565,"column":0},"generated":{"line":10566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10566,"column":0},"generated":{"line":10567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10567,"column":0},"generated":{"line":10568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10568,"column":0},"generated":{"line":10569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10569,"column":0},"generated":{"line":10570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10570,"column":0},"generated":{"line":10571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10571,"column":0},"generated":{"line":10572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10572,"column":0},"generated":{"line":10573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10573,"column":0},"generated":{"line":10574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10574,"column":0},"generated":{"line":10575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10575,"column":0},"generated":{"line":10576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10576,"column":0},"generated":{"line":10577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10577,"column":0},"generated":{"line":10578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10578,"column":0},"generated":{"line":10579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10579,"column":0},"generated":{"line":10580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10580,"column":0},"generated":{"line":10581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10581,"column":0},"generated":{"line":10582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10582,"column":0},"generated":{"line":10583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10583,"column":0},"generated":{"line":10584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10584,"column":0},"generated":{"line":10585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10585,"column":0},"generated":{"line":10586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10586,"column":0},"generated":{"line":10587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10587,"column":0},"generated":{"line":10588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10588,"column":0},"generated":{"line":10589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10589,"column":0},"generated":{"line":10590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10590,"column":0},"generated":{"line":10591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10591,"column":0},"generated":{"line":10592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10592,"column":0},"generated":{"line":10593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10593,"column":0},"generated":{"line":10594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10594,"column":0},"generated":{"line":10595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10595,"column":0},"generated":{"line":10596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10596,"column":0},"generated":{"line":10597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10597,"column":0},"generated":{"line":10598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10598,"column":0},"generated":{"line":10599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10599,"column":0},"generated":{"line":10600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10600,"column":0},"generated":{"line":10601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10601,"column":0},"generated":{"line":10602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10602,"column":0},"generated":{"line":10603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10603,"column":0},"generated":{"line":10604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10604,"column":0},"generated":{"line":10605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10605,"column":0},"generated":{"line":10606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10606,"column":0},"generated":{"line":10607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10607,"column":0},"generated":{"line":10608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10608,"column":0},"generated":{"line":10609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10609,"column":0},"generated":{"line":10610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10610,"column":0},"generated":{"line":10611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10611,"column":0},"generated":{"line":10612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10612,"column":0},"generated":{"line":10613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10613,"column":0},"generated":{"line":10614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10614,"column":0},"generated":{"line":10615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10615,"column":0},"generated":{"line":10616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10616,"column":0},"generated":{"line":10617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10617,"column":0},"generated":{"line":10618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10618,"column":0},"generated":{"line":10619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10619,"column":0},"generated":{"line":10620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10620,"column":0},"generated":{"line":10621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10621,"column":0},"generated":{"line":10622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10622,"column":0},"generated":{"line":10623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10623,"column":0},"generated":{"line":10624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10624,"column":0},"generated":{"line":10625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10625,"column":0},"generated":{"line":10626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10626,"column":0},"generated":{"line":10627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10627,"column":0},"generated":{"line":10628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10628,"column":0},"generated":{"line":10629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10629,"column":0},"generated":{"line":10630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10630,"column":0},"generated":{"line":10631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10631,"column":0},"generated":{"line":10632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10632,"column":0},"generated":{"line":10633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10633,"column":0},"generated":{"line":10634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10634,"column":0},"generated":{"line":10635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10635,"column":0},"generated":{"line":10636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10636,"column":0},"generated":{"line":10637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10637,"column":0},"generated":{"line":10638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10638,"column":0},"generated":{"line":10639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10639,"column":0},"generated":{"line":10640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10640,"column":0},"generated":{"line":10641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10641,"column":0},"generated":{"line":10642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10642,"column":0},"generated":{"line":10643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10643,"column":0},"generated":{"line":10644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10644,"column":0},"generated":{"line":10645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10645,"column":0},"generated":{"line":10646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10646,"column":0},"generated":{"line":10647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10647,"column":0},"generated":{"line":10648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10648,"column":0},"generated":{"line":10649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10649,"column":0},"generated":{"line":10650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10650,"column":0},"generated":{"line":10651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10651,"column":0},"generated":{"line":10652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10652,"column":0},"generated":{"line":10653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10653,"column":0},"generated":{"line":10654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10654,"column":0},"generated":{"line":10655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10655,"column":0},"generated":{"line":10656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10656,"column":0},"generated":{"line":10657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10657,"column":0},"generated":{"line":10658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10658,"column":0},"generated":{"line":10659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10659,"column":0},"generated":{"line":10660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10660,"column":0},"generated":{"line":10661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10661,"column":0},"generated":{"line":10662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10662,"column":0},"generated":{"line":10663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10663,"column":0},"generated":{"line":10664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10664,"column":0},"generated":{"line":10665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10665,"column":0},"generated":{"line":10666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10666,"column":0},"generated":{"line":10667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10667,"column":0},"generated":{"line":10668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10668,"column":0},"generated":{"line":10669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10669,"column":0},"generated":{"line":10670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10670,"column":0},"generated":{"line":10671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10671,"column":0},"generated":{"line":10672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10672,"column":0},"generated":{"line":10673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10673,"column":0},"generated":{"line":10674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10674,"column":0},"generated":{"line":10675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10675,"column":0},"generated":{"line":10676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10676,"column":0},"generated":{"line":10677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10677,"column":0},"generated":{"line":10678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10678,"column":0},"generated":{"line":10679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10679,"column":0},"generated":{"line":10680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10680,"column":0},"generated":{"line":10681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10681,"column":0},"generated":{"line":10682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10682,"column":0},"generated":{"line":10683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10683,"column":0},"generated":{"line":10684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10684,"column":0},"generated":{"line":10685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10685,"column":0},"generated":{"line":10686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10686,"column":0},"generated":{"line":10687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10687,"column":0},"generated":{"line":10688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10688,"column":0},"generated":{"line":10689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10689,"column":0},"generated":{"line":10690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10690,"column":0},"generated":{"line":10691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10691,"column":0},"generated":{"line":10692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10692,"column":0},"generated":{"line":10693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10693,"column":0},"generated":{"line":10694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10694,"column":0},"generated":{"line":10695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10695,"column":0},"generated":{"line":10696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10696,"column":0},"generated":{"line":10697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10697,"column":0},"generated":{"line":10698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10698,"column":0},"generated":{"line":10699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10699,"column":0},"generated":{"line":10700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10700,"column":0},"generated":{"line":10701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10701,"column":0},"generated":{"line":10702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10702,"column":0},"generated":{"line":10703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10703,"column":0},"generated":{"line":10704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10704,"column":0},"generated":{"line":10705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10705,"column":0},"generated":{"line":10706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10706,"column":0},"generated":{"line":10707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10707,"column":0},"generated":{"line":10708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10708,"column":0},"generated":{"line":10709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10709,"column":0},"generated":{"line":10710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10710,"column":0},"generated":{"line":10711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10711,"column":0},"generated":{"line":10712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10712,"column":0},"generated":{"line":10713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10713,"column":0},"generated":{"line":10714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10714,"column":0},"generated":{"line":10715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10715,"column":0},"generated":{"line":10716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10716,"column":0},"generated":{"line":10717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10717,"column":0},"generated":{"line":10718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10718,"column":0},"generated":{"line":10719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10719,"column":0},"generated":{"line":10720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10720,"column":0},"generated":{"line":10721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10721,"column":0},"generated":{"line":10722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10722,"column":0},"generated":{"line":10723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10723,"column":0},"generated":{"line":10724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10724,"column":0},"generated":{"line":10725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10725,"column":0},"generated":{"line":10726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10726,"column":0},"generated":{"line":10727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10727,"column":0},"generated":{"line":10728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10728,"column":0},"generated":{"line":10729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10729,"column":0},"generated":{"line":10730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10730,"column":0},"generated":{"line":10731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10731,"column":0},"generated":{"line":10732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10732,"column":0},"generated":{"line":10733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10733,"column":0},"generated":{"line":10734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10734,"column":0},"generated":{"line":10735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10735,"column":0},"generated":{"line":10736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10736,"column":0},"generated":{"line":10737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10737,"column":0},"generated":{"line":10738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10738,"column":0},"generated":{"line":10739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10739,"column":0},"generated":{"line":10740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10740,"column":0},"generated":{"line":10741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10741,"column":0},"generated":{"line":10742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10742,"column":0},"generated":{"line":10743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10743,"column":0},"generated":{"line":10744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10744,"column":0},"generated":{"line":10745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10745,"column":0},"generated":{"line":10746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10746,"column":0},"generated":{"line":10747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10747,"column":0},"generated":{"line":10748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10748,"column":0},"generated":{"line":10749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10749,"column":0},"generated":{"line":10750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10750,"column":0},"generated":{"line":10751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10751,"column":0},"generated":{"line":10752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10752,"column":0},"generated":{"line":10753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10753,"column":0},"generated":{"line":10754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10754,"column":0},"generated":{"line":10755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10755,"column":0},"generated":{"line":10756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10756,"column":0},"generated":{"line":10757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10757,"column":0},"generated":{"line":10758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10758,"column":0},"generated":{"line":10759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10759,"column":0},"generated":{"line":10760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10760,"column":0},"generated":{"line":10761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10761,"column":0},"generated":{"line":10762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10762,"column":0},"generated":{"line":10763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10763,"column":0},"generated":{"line":10764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10764,"column":0},"generated":{"line":10765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10765,"column":0},"generated":{"line":10766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10766,"column":0},"generated":{"line":10767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10767,"column":0},"generated":{"line":10768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10768,"column":0},"generated":{"line":10769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10769,"column":0},"generated":{"line":10770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10770,"column":0},"generated":{"line":10771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10771,"column":0},"generated":{"line":10772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10772,"column":0},"generated":{"line":10773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10773,"column":0},"generated":{"line":10774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10774,"column":0},"generated":{"line":10775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10775,"column":0},"generated":{"line":10776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10776,"column":0},"generated":{"line":10777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10777,"column":0},"generated":{"line":10778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10778,"column":0},"generated":{"line":10779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10779,"column":0},"generated":{"line":10780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10780,"column":0},"generated":{"line":10781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10781,"column":0},"generated":{"line":10782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10782,"column":0},"generated":{"line":10783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10783,"column":0},"generated":{"line":10784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10784,"column":0},"generated":{"line":10785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10785,"column":0},"generated":{"line":10786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10786,"column":0},"generated":{"line":10787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10787,"column":0},"generated":{"line":10788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10788,"column":0},"generated":{"line":10789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10789,"column":0},"generated":{"line":10790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10790,"column":0},"generated":{"line":10791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10791,"column":0},"generated":{"line":10792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10792,"column":0},"generated":{"line":10793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10793,"column":0},"generated":{"line":10794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10794,"column":0},"generated":{"line":10795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10795,"column":0},"generated":{"line":10796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10796,"column":0},"generated":{"line":10797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10797,"column":0},"generated":{"line":10798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10798,"column":0},"generated":{"line":10799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10799,"column":0},"generated":{"line":10800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10800,"column":0},"generated":{"line":10801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10801,"column":0},"generated":{"line":10802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10802,"column":0},"generated":{"line":10803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10803,"column":0},"generated":{"line":10804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10804,"column":0},"generated":{"line":10805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10805,"column":0},"generated":{"line":10806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10806,"column":0},"generated":{"line":10807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10807,"column":0},"generated":{"line":10808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10808,"column":0},"generated":{"line":10809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10809,"column":0},"generated":{"line":10810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10810,"column":0},"generated":{"line":10811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10811,"column":0},"generated":{"line":10812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10812,"column":0},"generated":{"line":10813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10813,"column":0},"generated":{"line":10814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10814,"column":0},"generated":{"line":10815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10815,"column":0},"generated":{"line":10816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10816,"column":0},"generated":{"line":10817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10817,"column":0},"generated":{"line":10818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10818,"column":0},"generated":{"line":10819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10819,"column":0},"generated":{"line":10820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10820,"column":0},"generated":{"line":10821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10821,"column":0},"generated":{"line":10822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10822,"column":0},"generated":{"line":10823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10823,"column":0},"generated":{"line":10824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10824,"column":0},"generated":{"line":10825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10825,"column":0},"generated":{"line":10826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10826,"column":0},"generated":{"line":10827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10827,"column":0},"generated":{"line":10828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10828,"column":0},"generated":{"line":10829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10829,"column":0},"generated":{"line":10830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10830,"column":0},"generated":{"line":10831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10831,"column":0},"generated":{"line":10832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10832,"column":0},"generated":{"line":10833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10833,"column":0},"generated":{"line":10834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10834,"column":0},"generated":{"line":10835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10835,"column":0},"generated":{"line":10836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10836,"column":0},"generated":{"line":10837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10837,"column":0},"generated":{"line":10838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10838,"column":0},"generated":{"line":10839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10839,"column":0},"generated":{"line":10840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10840,"column":0},"generated":{"line":10841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10841,"column":0},"generated":{"line":10842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10842,"column":0},"generated":{"line":10843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10843,"column":0},"generated":{"line":10844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10844,"column":0},"generated":{"line":10845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10845,"column":0},"generated":{"line":10846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10846,"column":0},"generated":{"line":10847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10847,"column":0},"generated":{"line":10848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10848,"column":0},"generated":{"line":10849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10849,"column":0},"generated":{"line":10850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10850,"column":0},"generated":{"line":10851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10851,"column":0},"generated":{"line":10852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10852,"column":0},"generated":{"line":10853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10853,"column":0},"generated":{"line":10854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10854,"column":0},"generated":{"line":10855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10855,"column":0},"generated":{"line":10856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10856,"column":0},"generated":{"line":10857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10857,"column":0},"generated":{"line":10858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10858,"column":0},"generated":{"line":10859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10859,"column":0},"generated":{"line":10860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10860,"column":0},"generated":{"line":10861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10861,"column":0},"generated":{"line":10862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10862,"column":0},"generated":{"line":10863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10863,"column":0},"generated":{"line":10864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10864,"column":0},"generated":{"line":10865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10865,"column":0},"generated":{"line":10866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10866,"column":0},"generated":{"line":10867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10867,"column":0},"generated":{"line":10868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10868,"column":0},"generated":{"line":10869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10869,"column":0},"generated":{"line":10870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10870,"column":0},"generated":{"line":10871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10871,"column":0},"generated":{"line":10872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10872,"column":0},"generated":{"line":10873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10873,"column":0},"generated":{"line":10874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10874,"column":0},"generated":{"line":10875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10875,"column":0},"generated":{"line":10876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10876,"column":0},"generated":{"line":10877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10877,"column":0},"generated":{"line":10878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10878,"column":0},"generated":{"line":10879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10879,"column":0},"generated":{"line":10880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10880,"column":0},"generated":{"line":10881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10881,"column":0},"generated":{"line":10882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10882,"column":0},"generated":{"line":10883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10883,"column":0},"generated":{"line":10884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10884,"column":0},"generated":{"line":10885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10885,"column":0},"generated":{"line":10886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10886,"column":0},"generated":{"line":10887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10887,"column":0},"generated":{"line":10888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10888,"column":0},"generated":{"line":10889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10889,"column":0},"generated":{"line":10890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10890,"column":0},"generated":{"line":10891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10891,"column":0},"generated":{"line":10892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10892,"column":0},"generated":{"line":10893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10893,"column":0},"generated":{"line":10894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10894,"column":0},"generated":{"line":10895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10895,"column":0},"generated":{"line":10896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10896,"column":0},"generated":{"line":10897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10897,"column":0},"generated":{"line":10898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10898,"column":0},"generated":{"line":10899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10899,"column":0},"generated":{"line":10900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10900,"column":0},"generated":{"line":10901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10901,"column":0},"generated":{"line":10902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10902,"column":0},"generated":{"line":10903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10903,"column":0},"generated":{"line":10904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10904,"column":0},"generated":{"line":10905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10905,"column":0},"generated":{"line":10906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10906,"column":0},"generated":{"line":10907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10907,"column":0},"generated":{"line":10908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10908,"column":0},"generated":{"line":10909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10909,"column":0},"generated":{"line":10910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10910,"column":0},"generated":{"line":10911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10911,"column":0},"generated":{"line":10912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10912,"column":0},"generated":{"line":10913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10913,"column":0},"generated":{"line":10914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10914,"column":0},"generated":{"line":10915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10915,"column":0},"generated":{"line":10916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10916,"column":0},"generated":{"line":10917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10917,"column":0},"generated":{"line":10918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10918,"column":0},"generated":{"line":10919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10919,"column":0},"generated":{"line":10920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10920,"column":0},"generated":{"line":10921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10921,"column":0},"generated":{"line":10922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10922,"column":0},"generated":{"line":10923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10923,"column":0},"generated":{"line":10924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10924,"column":0},"generated":{"line":10925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10925,"column":0},"generated":{"line":10926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10926,"column":0},"generated":{"line":10927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10927,"column":0},"generated":{"line":10928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10928,"column":0},"generated":{"line":10929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10929,"column":0},"generated":{"line":10930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10930,"column":0},"generated":{"line":10931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10931,"column":0},"generated":{"line":10932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10932,"column":0},"generated":{"line":10933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10933,"column":0},"generated":{"line":10934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10934,"column":0},"generated":{"line":10935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10935,"column":0},"generated":{"line":10936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10936,"column":0},"generated":{"line":10937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10937,"column":0},"generated":{"line":10938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10938,"column":0},"generated":{"line":10939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10939,"column":0},"generated":{"line":10940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10940,"column":0},"generated":{"line":10941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10941,"column":0},"generated":{"line":10942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10942,"column":0},"generated":{"line":10943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10943,"column":0},"generated":{"line":10944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10944,"column":0},"generated":{"line":10945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10945,"column":0},"generated":{"line":10946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10946,"column":0},"generated":{"line":10947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10947,"column":0},"generated":{"line":10948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10948,"column":0},"generated":{"line":10949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10949,"column":0},"generated":{"line":10950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10950,"column":0},"generated":{"line":10951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10951,"column":0},"generated":{"line":10952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10952,"column":0},"generated":{"line":10953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10953,"column":0},"generated":{"line":10954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10954,"column":0},"generated":{"line":10955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10955,"column":0},"generated":{"line":10956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10956,"column":0},"generated":{"line":10957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10957,"column":0},"generated":{"line":10958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10958,"column":0},"generated":{"line":10959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10959,"column":0},"generated":{"line":10960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10960,"column":0},"generated":{"line":10961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10961,"column":0},"generated":{"line":10962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10962,"column":0},"generated":{"line":10963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10963,"column":0},"generated":{"line":10964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10964,"column":0},"generated":{"line":10965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10965,"column":0},"generated":{"line":10966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10966,"column":0},"generated":{"line":10967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10967,"column":0},"generated":{"line":10968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10968,"column":0},"generated":{"line":10969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10969,"column":0},"generated":{"line":10970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10970,"column":0},"generated":{"line":10971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10971,"column":0},"generated":{"line":10972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10972,"column":0},"generated":{"line":10973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10973,"column":0},"generated":{"line":10974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10974,"column":0},"generated":{"line":10975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10975,"column":0},"generated":{"line":10976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10976,"column":0},"generated":{"line":10977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10977,"column":0},"generated":{"line":10978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10978,"column":0},"generated":{"line":10979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10979,"column":0},"generated":{"line":10980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10980,"column":0},"generated":{"line":10981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10981,"column":0},"generated":{"line":10982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10982,"column":0},"generated":{"line":10983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10983,"column":0},"generated":{"line":10984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10984,"column":0},"generated":{"line":10985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10985,"column":0},"generated":{"line":10986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10986,"column":0},"generated":{"line":10987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10987,"column":0},"generated":{"line":10988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10988,"column":0},"generated":{"line":10989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10989,"column":0},"generated":{"line":10990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10990,"column":0},"generated":{"line":10991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10991,"column":0},"generated":{"line":10992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10992,"column":0},"generated":{"line":10993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10993,"column":0},"generated":{"line":10994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10994,"column":0},"generated":{"line":10995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10995,"column":0},"generated":{"line":10996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10996,"column":0},"generated":{"line":10997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10997,"column":0},"generated":{"line":10998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10998,"column":0},"generated":{"line":10999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":10999,"column":0},"generated":{"line":11000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11000,"column":0},"generated":{"line":11001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11001,"column":0},"generated":{"line":11002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11002,"column":0},"generated":{"line":11003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11003,"column":0},"generated":{"line":11004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11004,"column":0},"generated":{"line":11005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11005,"column":0},"generated":{"line":11006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11006,"column":0},"generated":{"line":11007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11007,"column":0},"generated":{"line":11008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11008,"column":0},"generated":{"line":11009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11009,"column":0},"generated":{"line":11010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11010,"column":0},"generated":{"line":11011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11011,"column":0},"generated":{"line":11012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11012,"column":0},"generated":{"line":11013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11013,"column":0},"generated":{"line":11014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11014,"column":0},"generated":{"line":11015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11015,"column":0},"generated":{"line":11016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11016,"column":0},"generated":{"line":11017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11017,"column":0},"generated":{"line":11018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11018,"column":0},"generated":{"line":11019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11019,"column":0},"generated":{"line":11020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11020,"column":0},"generated":{"line":11021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11021,"column":0},"generated":{"line":11022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11022,"column":0},"generated":{"line":11023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11023,"column":0},"generated":{"line":11024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11024,"column":0},"generated":{"line":11025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11025,"column":0},"generated":{"line":11026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11026,"column":0},"generated":{"line":11027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11027,"column":0},"generated":{"line":11028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11028,"column":0},"generated":{"line":11029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11029,"column":0},"generated":{"line":11030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11030,"column":0},"generated":{"line":11031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11031,"column":0},"generated":{"line":11032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11032,"column":0},"generated":{"line":11033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11033,"column":0},"generated":{"line":11034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11034,"column":0},"generated":{"line":11035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11035,"column":0},"generated":{"line":11036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11036,"column":0},"generated":{"line":11037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11037,"column":0},"generated":{"line":11038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11038,"column":0},"generated":{"line":11039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11039,"column":0},"generated":{"line":11040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11040,"column":0},"generated":{"line":11041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11041,"column":0},"generated":{"line":11042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11042,"column":0},"generated":{"line":11043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11043,"column":0},"generated":{"line":11044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11044,"column":0},"generated":{"line":11045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11045,"column":0},"generated":{"line":11046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11046,"column":0},"generated":{"line":11047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11047,"column":0},"generated":{"line":11048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11048,"column":0},"generated":{"line":11049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11049,"column":0},"generated":{"line":11050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11050,"column":0},"generated":{"line":11051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11051,"column":0},"generated":{"line":11052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11052,"column":0},"generated":{"line":11053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11053,"column":0},"generated":{"line":11054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11054,"column":0},"generated":{"line":11055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11055,"column":0},"generated":{"line":11056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11056,"column":0},"generated":{"line":11057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11057,"column":0},"generated":{"line":11058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11058,"column":0},"generated":{"line":11059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11059,"column":0},"generated":{"line":11060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11060,"column":0},"generated":{"line":11061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11061,"column":0},"generated":{"line":11062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11062,"column":0},"generated":{"line":11063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11063,"column":0},"generated":{"line":11064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11064,"column":0},"generated":{"line":11065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11065,"column":0},"generated":{"line":11066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11066,"column":0},"generated":{"line":11067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11067,"column":0},"generated":{"line":11068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11068,"column":0},"generated":{"line":11069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11069,"column":0},"generated":{"line":11070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11070,"column":0},"generated":{"line":11071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11071,"column":0},"generated":{"line":11072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11072,"column":0},"generated":{"line":11073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11073,"column":0},"generated":{"line":11074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11074,"column":0},"generated":{"line":11075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11075,"column":0},"generated":{"line":11076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11076,"column":0},"generated":{"line":11077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11077,"column":0},"generated":{"line":11078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11078,"column":0},"generated":{"line":11079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11079,"column":0},"generated":{"line":11080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11080,"column":0},"generated":{"line":11081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11081,"column":0},"generated":{"line":11082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11082,"column":0},"generated":{"line":11083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11083,"column":0},"generated":{"line":11084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11084,"column":0},"generated":{"line":11085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11085,"column":0},"generated":{"line":11086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11086,"column":0},"generated":{"line":11087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11087,"column":0},"generated":{"line":11088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11088,"column":0},"generated":{"line":11089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11089,"column":0},"generated":{"line":11090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11090,"column":0},"generated":{"line":11091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11091,"column":0},"generated":{"line":11092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11092,"column":0},"generated":{"line":11093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11093,"column":0},"generated":{"line":11094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11094,"column":0},"generated":{"line":11095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11095,"column":0},"generated":{"line":11096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11096,"column":0},"generated":{"line":11097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11097,"column":0},"generated":{"line":11098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11098,"column":0},"generated":{"line":11099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11099,"column":0},"generated":{"line":11100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11100,"column":0},"generated":{"line":11101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11101,"column":0},"generated":{"line":11102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11102,"column":0},"generated":{"line":11103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11103,"column":0},"generated":{"line":11104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11104,"column":0},"generated":{"line":11105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11105,"column":0},"generated":{"line":11106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11106,"column":0},"generated":{"line":11107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11107,"column":0},"generated":{"line":11108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11108,"column":0},"generated":{"line":11109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11109,"column":0},"generated":{"line":11110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11110,"column":0},"generated":{"line":11111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11111,"column":0},"generated":{"line":11112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11112,"column":0},"generated":{"line":11113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11113,"column":0},"generated":{"line":11114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11114,"column":0},"generated":{"line":11115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11115,"column":0},"generated":{"line":11116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11116,"column":0},"generated":{"line":11117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11117,"column":0},"generated":{"line":11118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11118,"column":0},"generated":{"line":11119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11119,"column":0},"generated":{"line":11120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11120,"column":0},"generated":{"line":11121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11121,"column":0},"generated":{"line":11122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11122,"column":0},"generated":{"line":11123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11123,"column":0},"generated":{"line":11124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11124,"column":0},"generated":{"line":11125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11125,"column":0},"generated":{"line":11126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11126,"column":0},"generated":{"line":11127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11127,"column":0},"generated":{"line":11128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11128,"column":0},"generated":{"line":11129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11129,"column":0},"generated":{"line":11130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11130,"column":0},"generated":{"line":11131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11131,"column":0},"generated":{"line":11132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11132,"column":0},"generated":{"line":11133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11133,"column":0},"generated":{"line":11134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11134,"column":0},"generated":{"line":11135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11135,"column":0},"generated":{"line":11136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11136,"column":0},"generated":{"line":11137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11137,"column":0},"generated":{"line":11138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11138,"column":0},"generated":{"line":11139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11139,"column":0},"generated":{"line":11140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11140,"column":0},"generated":{"line":11141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11141,"column":0},"generated":{"line":11142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11142,"column":0},"generated":{"line":11143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11143,"column":0},"generated":{"line":11144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11144,"column":0},"generated":{"line":11145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11145,"column":0},"generated":{"line":11146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11146,"column":0},"generated":{"line":11147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11147,"column":0},"generated":{"line":11148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11148,"column":0},"generated":{"line":11149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11149,"column":0},"generated":{"line":11150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11150,"column":0},"generated":{"line":11151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11151,"column":0},"generated":{"line":11152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11152,"column":0},"generated":{"line":11153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11153,"column":0},"generated":{"line":11154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11154,"column":0},"generated":{"line":11155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11155,"column":0},"generated":{"line":11156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11156,"column":0},"generated":{"line":11157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11157,"column":0},"generated":{"line":11158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11158,"column":0},"generated":{"line":11159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11159,"column":0},"generated":{"line":11160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11160,"column":0},"generated":{"line":11161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11161,"column":0},"generated":{"line":11162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11162,"column":0},"generated":{"line":11163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11163,"column":0},"generated":{"line":11164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11164,"column":0},"generated":{"line":11165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11165,"column":0},"generated":{"line":11166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11166,"column":0},"generated":{"line":11167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11167,"column":0},"generated":{"line":11168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11168,"column":0},"generated":{"line":11169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11169,"column":0},"generated":{"line":11170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11170,"column":0},"generated":{"line":11171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11171,"column":0},"generated":{"line":11172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11172,"column":0},"generated":{"line":11173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11173,"column":0},"generated":{"line":11174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11174,"column":0},"generated":{"line":11175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11175,"column":0},"generated":{"line":11176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11176,"column":0},"generated":{"line":11177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11177,"column":0},"generated":{"line":11178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11178,"column":0},"generated":{"line":11179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11179,"column":0},"generated":{"line":11180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11180,"column":0},"generated":{"line":11181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11181,"column":0},"generated":{"line":11182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11182,"column":0},"generated":{"line":11183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11183,"column":0},"generated":{"line":11184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11184,"column":0},"generated":{"line":11185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11185,"column":0},"generated":{"line":11186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11186,"column":0},"generated":{"line":11187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11187,"column":0},"generated":{"line":11188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11188,"column":0},"generated":{"line":11189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11189,"column":0},"generated":{"line":11190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11190,"column":0},"generated":{"line":11191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11191,"column":0},"generated":{"line":11192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11192,"column":0},"generated":{"line":11193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11193,"column":0},"generated":{"line":11194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11194,"column":0},"generated":{"line":11195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11195,"column":0},"generated":{"line":11196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11196,"column":0},"generated":{"line":11197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11197,"column":0},"generated":{"line":11198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11198,"column":0},"generated":{"line":11199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11199,"column":0},"generated":{"line":11200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11200,"column":0},"generated":{"line":11201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11201,"column":0},"generated":{"line":11202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11202,"column":0},"generated":{"line":11203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11203,"column":0},"generated":{"line":11204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11204,"column":0},"generated":{"line":11205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11205,"column":0},"generated":{"line":11206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11206,"column":0},"generated":{"line":11207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11207,"column":0},"generated":{"line":11208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11208,"column":0},"generated":{"line":11209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11209,"column":0},"generated":{"line":11210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11210,"column":0},"generated":{"line":11211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11211,"column":0},"generated":{"line":11212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11212,"column":0},"generated":{"line":11213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11213,"column":0},"generated":{"line":11214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11214,"column":0},"generated":{"line":11215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11215,"column":0},"generated":{"line":11216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11216,"column":0},"generated":{"line":11217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11217,"column":0},"generated":{"line":11218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11218,"column":0},"generated":{"line":11219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11219,"column":0},"generated":{"line":11220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11220,"column":0},"generated":{"line":11221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11221,"column":0},"generated":{"line":11222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11222,"column":0},"generated":{"line":11223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11223,"column":0},"generated":{"line":11224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11224,"column":0},"generated":{"line":11225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11225,"column":0},"generated":{"line":11226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11226,"column":0},"generated":{"line":11227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11227,"column":0},"generated":{"line":11228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11228,"column":0},"generated":{"line":11229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11229,"column":0},"generated":{"line":11230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11230,"column":0},"generated":{"line":11231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11231,"column":0},"generated":{"line":11232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11232,"column":0},"generated":{"line":11233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11233,"column":0},"generated":{"line":11234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11234,"column":0},"generated":{"line":11235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11235,"column":0},"generated":{"line":11236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11236,"column":0},"generated":{"line":11237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11237,"column":0},"generated":{"line":11238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11238,"column":0},"generated":{"line":11239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11239,"column":0},"generated":{"line":11240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11240,"column":0},"generated":{"line":11241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11241,"column":0},"generated":{"line":11242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11242,"column":0},"generated":{"line":11243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11243,"column":0},"generated":{"line":11244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11244,"column":0},"generated":{"line":11245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11245,"column":0},"generated":{"line":11246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11246,"column":0},"generated":{"line":11247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11247,"column":0},"generated":{"line":11248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11248,"column":0},"generated":{"line":11249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11249,"column":0},"generated":{"line":11250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11250,"column":0},"generated":{"line":11251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11251,"column":0},"generated":{"line":11252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11252,"column":0},"generated":{"line":11253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11253,"column":0},"generated":{"line":11254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11254,"column":0},"generated":{"line":11255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11255,"column":0},"generated":{"line":11256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11256,"column":0},"generated":{"line":11257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11257,"column":0},"generated":{"line":11258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11258,"column":0},"generated":{"line":11259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11259,"column":0},"generated":{"line":11260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11260,"column":0},"generated":{"line":11261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11261,"column":0},"generated":{"line":11262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11262,"column":0},"generated":{"line":11263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11263,"column":0},"generated":{"line":11264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11264,"column":0},"generated":{"line":11265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11265,"column":0},"generated":{"line":11266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11266,"column":0},"generated":{"line":11267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11267,"column":0},"generated":{"line":11268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11268,"column":0},"generated":{"line":11269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11269,"column":0},"generated":{"line":11270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11270,"column":0},"generated":{"line":11271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11271,"column":0},"generated":{"line":11272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11272,"column":0},"generated":{"line":11273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11273,"column":0},"generated":{"line":11274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11274,"column":0},"generated":{"line":11275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11275,"column":0},"generated":{"line":11276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11276,"column":0},"generated":{"line":11277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11277,"column":0},"generated":{"line":11278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11278,"column":0},"generated":{"line":11279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11279,"column":0},"generated":{"line":11280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11280,"column":0},"generated":{"line":11281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11281,"column":0},"generated":{"line":11282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11282,"column":0},"generated":{"line":11283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11283,"column":0},"generated":{"line":11284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11284,"column":0},"generated":{"line":11285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11285,"column":0},"generated":{"line":11286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11286,"column":0},"generated":{"line":11287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11287,"column":0},"generated":{"line":11288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11288,"column":0},"generated":{"line":11289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11289,"column":0},"generated":{"line":11290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11290,"column":0},"generated":{"line":11291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11291,"column":0},"generated":{"line":11292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11292,"column":0},"generated":{"line":11293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11293,"column":0},"generated":{"line":11294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11294,"column":0},"generated":{"line":11295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11295,"column":0},"generated":{"line":11296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11296,"column":0},"generated":{"line":11297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11297,"column":0},"generated":{"line":11298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11298,"column":0},"generated":{"line":11299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11299,"column":0},"generated":{"line":11300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11300,"column":0},"generated":{"line":11301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11301,"column":0},"generated":{"line":11302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11302,"column":0},"generated":{"line":11303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11303,"column":0},"generated":{"line":11304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11304,"column":0},"generated":{"line":11305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11305,"column":0},"generated":{"line":11306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11306,"column":0},"generated":{"line":11307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11307,"column":0},"generated":{"line":11308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11308,"column":0},"generated":{"line":11309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11309,"column":0},"generated":{"line":11310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11310,"column":0},"generated":{"line":11311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11311,"column":0},"generated":{"line":11312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11312,"column":0},"generated":{"line":11313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11313,"column":0},"generated":{"line":11314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11314,"column":0},"generated":{"line":11315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11315,"column":0},"generated":{"line":11316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11316,"column":0},"generated":{"line":11317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11317,"column":0},"generated":{"line":11318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11318,"column":0},"generated":{"line":11319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11319,"column":0},"generated":{"line":11320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11320,"column":0},"generated":{"line":11321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11321,"column":0},"generated":{"line":11322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11322,"column":0},"generated":{"line":11323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11323,"column":0},"generated":{"line":11324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11324,"column":0},"generated":{"line":11325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11325,"column":0},"generated":{"line":11326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11326,"column":0},"generated":{"line":11327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11327,"column":0},"generated":{"line":11328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11328,"column":0},"generated":{"line":11329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11329,"column":0},"generated":{"line":11330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11330,"column":0},"generated":{"line":11331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11331,"column":0},"generated":{"line":11332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11332,"column":0},"generated":{"line":11333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11333,"column":0},"generated":{"line":11334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11334,"column":0},"generated":{"line":11335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11335,"column":0},"generated":{"line":11336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11336,"column":0},"generated":{"line":11337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11337,"column":0},"generated":{"line":11338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11338,"column":0},"generated":{"line":11339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11339,"column":0},"generated":{"line":11340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11340,"column":0},"generated":{"line":11341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11341,"column":0},"generated":{"line":11342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11342,"column":0},"generated":{"line":11343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11343,"column":0},"generated":{"line":11344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11344,"column":0},"generated":{"line":11345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11345,"column":0},"generated":{"line":11346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11346,"column":0},"generated":{"line":11347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11347,"column":0},"generated":{"line":11348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11348,"column":0},"generated":{"line":11349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11349,"column":0},"generated":{"line":11350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11350,"column":0},"generated":{"line":11351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11351,"column":0},"generated":{"line":11352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11352,"column":0},"generated":{"line":11353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11353,"column":0},"generated":{"line":11354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11354,"column":0},"generated":{"line":11355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11355,"column":0},"generated":{"line":11356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11356,"column":0},"generated":{"line":11357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11357,"column":0},"generated":{"line":11358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11358,"column":0},"generated":{"line":11359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11359,"column":0},"generated":{"line":11360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11360,"column":0},"generated":{"line":11361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11361,"column":0},"generated":{"line":11362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11362,"column":0},"generated":{"line":11363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11363,"column":0},"generated":{"line":11364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11364,"column":0},"generated":{"line":11365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11365,"column":0},"generated":{"line":11366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11366,"column":0},"generated":{"line":11367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11367,"column":0},"generated":{"line":11368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11368,"column":0},"generated":{"line":11369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11369,"column":0},"generated":{"line":11370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11370,"column":0},"generated":{"line":11371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11371,"column":0},"generated":{"line":11372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11372,"column":0},"generated":{"line":11373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11373,"column":0},"generated":{"line":11374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11374,"column":0},"generated":{"line":11375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11375,"column":0},"generated":{"line":11376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11376,"column":0},"generated":{"line":11377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11377,"column":0},"generated":{"line":11378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11378,"column":0},"generated":{"line":11379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11379,"column":0},"generated":{"line":11380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11380,"column":0},"generated":{"line":11381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11381,"column":0},"generated":{"line":11382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11382,"column":0},"generated":{"line":11383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11383,"column":0},"generated":{"line":11384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11384,"column":0},"generated":{"line":11385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11385,"column":0},"generated":{"line":11386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11386,"column":0},"generated":{"line":11387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11387,"column":0},"generated":{"line":11388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11388,"column":0},"generated":{"line":11389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11389,"column":0},"generated":{"line":11390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11390,"column":0},"generated":{"line":11391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11391,"column":0},"generated":{"line":11392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11392,"column":0},"generated":{"line":11393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11393,"column":0},"generated":{"line":11394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11394,"column":0},"generated":{"line":11395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11395,"column":0},"generated":{"line":11396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11396,"column":0},"generated":{"line":11397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11397,"column":0},"generated":{"line":11398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11398,"column":0},"generated":{"line":11399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11399,"column":0},"generated":{"line":11400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11400,"column":0},"generated":{"line":11401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11401,"column":0},"generated":{"line":11402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11402,"column":0},"generated":{"line":11403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11403,"column":0},"generated":{"line":11404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11404,"column":0},"generated":{"line":11405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11405,"column":0},"generated":{"line":11406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11406,"column":0},"generated":{"line":11407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11407,"column":0},"generated":{"line":11408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11408,"column":0},"generated":{"line":11409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11409,"column":0},"generated":{"line":11410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11410,"column":0},"generated":{"line":11411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11411,"column":0},"generated":{"line":11412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11412,"column":0},"generated":{"line":11413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11413,"column":0},"generated":{"line":11414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11414,"column":0},"generated":{"line":11415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11415,"column":0},"generated":{"line":11416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11416,"column":0},"generated":{"line":11417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11417,"column":0},"generated":{"line":11418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11418,"column":0},"generated":{"line":11419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11419,"column":0},"generated":{"line":11420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11420,"column":0},"generated":{"line":11421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11421,"column":0},"generated":{"line":11422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11422,"column":0},"generated":{"line":11423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11423,"column":0},"generated":{"line":11424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11424,"column":0},"generated":{"line":11425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11425,"column":0},"generated":{"line":11426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11426,"column":0},"generated":{"line":11427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11427,"column":0},"generated":{"line":11428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11428,"column":0},"generated":{"line":11429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11429,"column":0},"generated":{"line":11430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11430,"column":0},"generated":{"line":11431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11431,"column":0},"generated":{"line":11432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11432,"column":0},"generated":{"line":11433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11433,"column":0},"generated":{"line":11434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11434,"column":0},"generated":{"line":11435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11435,"column":0},"generated":{"line":11436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11436,"column":0},"generated":{"line":11437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11437,"column":0},"generated":{"line":11438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11438,"column":0},"generated":{"line":11439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11439,"column":0},"generated":{"line":11440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11440,"column":0},"generated":{"line":11441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11441,"column":0},"generated":{"line":11442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11442,"column":0},"generated":{"line":11443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11443,"column":0},"generated":{"line":11444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11444,"column":0},"generated":{"line":11445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11445,"column":0},"generated":{"line":11446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11446,"column":0},"generated":{"line":11447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11447,"column":0},"generated":{"line":11448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11448,"column":0},"generated":{"line":11449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11449,"column":0},"generated":{"line":11450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11450,"column":0},"generated":{"line":11451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11451,"column":0},"generated":{"line":11452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11452,"column":0},"generated":{"line":11453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11453,"column":0},"generated":{"line":11454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11454,"column":0},"generated":{"line":11455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11455,"column":0},"generated":{"line":11456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11456,"column":0},"generated":{"line":11457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11457,"column":0},"generated":{"line":11458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11458,"column":0},"generated":{"line":11459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11459,"column":0},"generated":{"line":11460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11460,"column":0},"generated":{"line":11461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11461,"column":0},"generated":{"line":11462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11462,"column":0},"generated":{"line":11463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11463,"column":0},"generated":{"line":11464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11464,"column":0},"generated":{"line":11465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11465,"column":0},"generated":{"line":11466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11466,"column":0},"generated":{"line":11467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11467,"column":0},"generated":{"line":11468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11468,"column":0},"generated":{"line":11469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11469,"column":0},"generated":{"line":11470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11470,"column":0},"generated":{"line":11471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11471,"column":0},"generated":{"line":11472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11472,"column":0},"generated":{"line":11473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11473,"column":0},"generated":{"line":11474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11474,"column":0},"generated":{"line":11475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11475,"column":0},"generated":{"line":11476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11476,"column":0},"generated":{"line":11477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11477,"column":0},"generated":{"line":11478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11478,"column":0},"generated":{"line":11479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11479,"column":0},"generated":{"line":11480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11480,"column":0},"generated":{"line":11481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11481,"column":0},"generated":{"line":11482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11482,"column":0},"generated":{"line":11483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11483,"column":0},"generated":{"line":11484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11484,"column":0},"generated":{"line":11485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11485,"column":0},"generated":{"line":11486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11486,"column":0},"generated":{"line":11487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11487,"column":0},"generated":{"line":11488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11488,"column":0},"generated":{"line":11489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11489,"column":0},"generated":{"line":11490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11490,"column":0},"generated":{"line":11491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11491,"column":0},"generated":{"line":11492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11492,"column":0},"generated":{"line":11493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11493,"column":0},"generated":{"line":11494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11494,"column":0},"generated":{"line":11495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11495,"column":0},"generated":{"line":11496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11496,"column":0},"generated":{"line":11497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11497,"column":0},"generated":{"line":11498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11498,"column":0},"generated":{"line":11499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11499,"column":0},"generated":{"line":11500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11500,"column":0},"generated":{"line":11501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11501,"column":0},"generated":{"line":11502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11502,"column":0},"generated":{"line":11503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11503,"column":0},"generated":{"line":11504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11504,"column":0},"generated":{"line":11505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11505,"column":0},"generated":{"line":11506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11506,"column":0},"generated":{"line":11507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11507,"column":0},"generated":{"line":11508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11508,"column":0},"generated":{"line":11509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11509,"column":0},"generated":{"line":11510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11510,"column":0},"generated":{"line":11511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11511,"column":0},"generated":{"line":11512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11512,"column":0},"generated":{"line":11513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11513,"column":0},"generated":{"line":11514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11514,"column":0},"generated":{"line":11515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11515,"column":0},"generated":{"line":11516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11516,"column":0},"generated":{"line":11517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11517,"column":0},"generated":{"line":11518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11518,"column":0},"generated":{"line":11519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11519,"column":0},"generated":{"line":11520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11520,"column":0},"generated":{"line":11521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11521,"column":0},"generated":{"line":11522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11522,"column":0},"generated":{"line":11523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11523,"column":0},"generated":{"line":11524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11524,"column":0},"generated":{"line":11525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11525,"column":0},"generated":{"line":11526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11526,"column":0},"generated":{"line":11527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11527,"column":0},"generated":{"line":11528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11528,"column":0},"generated":{"line":11529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11529,"column":0},"generated":{"line":11530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11530,"column":0},"generated":{"line":11531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11531,"column":0},"generated":{"line":11532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11532,"column":0},"generated":{"line":11533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11533,"column":0},"generated":{"line":11534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11534,"column":0},"generated":{"line":11535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11535,"column":0},"generated":{"line":11536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11536,"column":0},"generated":{"line":11537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11537,"column":0},"generated":{"line":11538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11538,"column":0},"generated":{"line":11539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11539,"column":0},"generated":{"line":11540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11540,"column":0},"generated":{"line":11541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11541,"column":0},"generated":{"line":11542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11542,"column":0},"generated":{"line":11543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11543,"column":0},"generated":{"line":11544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11544,"column":0},"generated":{"line":11545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11545,"column":0},"generated":{"line":11546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11546,"column":0},"generated":{"line":11547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11547,"column":0},"generated":{"line":11548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11548,"column":0},"generated":{"line":11549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11549,"column":0},"generated":{"line":11550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11550,"column":0},"generated":{"line":11551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11551,"column":0},"generated":{"line":11552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11552,"column":0},"generated":{"line":11553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11553,"column":0},"generated":{"line":11554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11554,"column":0},"generated":{"line":11555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11555,"column":0},"generated":{"line":11556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11556,"column":0},"generated":{"line":11557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11557,"column":0},"generated":{"line":11558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11558,"column":0},"generated":{"line":11559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11559,"column":0},"generated":{"line":11560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11560,"column":0},"generated":{"line":11561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11561,"column":0},"generated":{"line":11562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11562,"column":0},"generated":{"line":11563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11563,"column":0},"generated":{"line":11564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11564,"column":0},"generated":{"line":11565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11565,"column":0},"generated":{"line":11566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11566,"column":0},"generated":{"line":11567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11567,"column":0},"generated":{"line":11568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11568,"column":0},"generated":{"line":11569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11569,"column":0},"generated":{"line":11570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11570,"column":0},"generated":{"line":11571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11571,"column":0},"generated":{"line":11572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11572,"column":0},"generated":{"line":11573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11573,"column":0},"generated":{"line":11574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11574,"column":0},"generated":{"line":11575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11575,"column":0},"generated":{"line":11576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11576,"column":0},"generated":{"line":11577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11577,"column":0},"generated":{"line":11578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11578,"column":0},"generated":{"line":11579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11579,"column":0},"generated":{"line":11580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11580,"column":0},"generated":{"line":11581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11581,"column":0},"generated":{"line":11582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11582,"column":0},"generated":{"line":11583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11583,"column":0},"generated":{"line":11584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11584,"column":0},"generated":{"line":11585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11585,"column":0},"generated":{"line":11586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11586,"column":0},"generated":{"line":11587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11587,"column":0},"generated":{"line":11588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11588,"column":0},"generated":{"line":11589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11589,"column":0},"generated":{"line":11590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11590,"column":0},"generated":{"line":11591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11591,"column":0},"generated":{"line":11592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11592,"column":0},"generated":{"line":11593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11593,"column":0},"generated":{"line":11594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11594,"column":0},"generated":{"line":11595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11595,"column":0},"generated":{"line":11596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11596,"column":0},"generated":{"line":11597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11597,"column":0},"generated":{"line":11598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11598,"column":0},"generated":{"line":11599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11599,"column":0},"generated":{"line":11600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11600,"column":0},"generated":{"line":11601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11601,"column":0},"generated":{"line":11602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11602,"column":0},"generated":{"line":11603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11603,"column":0},"generated":{"line":11604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11604,"column":0},"generated":{"line":11605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11605,"column":0},"generated":{"line":11606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11606,"column":0},"generated":{"line":11607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11607,"column":0},"generated":{"line":11608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11608,"column":0},"generated":{"line":11609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11609,"column":0},"generated":{"line":11610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11610,"column":0},"generated":{"line":11611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11611,"column":0},"generated":{"line":11612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11612,"column":0},"generated":{"line":11613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11613,"column":0},"generated":{"line":11614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11614,"column":0},"generated":{"line":11615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11615,"column":0},"generated":{"line":11616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11616,"column":0},"generated":{"line":11617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11617,"column":0},"generated":{"line":11618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11618,"column":0},"generated":{"line":11619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11619,"column":0},"generated":{"line":11620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11620,"column":0},"generated":{"line":11621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11621,"column":0},"generated":{"line":11622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11622,"column":0},"generated":{"line":11623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11623,"column":0},"generated":{"line":11624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11624,"column":0},"generated":{"line":11625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11625,"column":0},"generated":{"line":11626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11626,"column":0},"generated":{"line":11627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11627,"column":0},"generated":{"line":11628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11628,"column":0},"generated":{"line":11629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11629,"column":0},"generated":{"line":11630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11630,"column":0},"generated":{"line":11631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11631,"column":0},"generated":{"line":11632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11632,"column":0},"generated":{"line":11633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11633,"column":0},"generated":{"line":11634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11634,"column":0},"generated":{"line":11635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11635,"column":0},"generated":{"line":11636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11636,"column":0},"generated":{"line":11637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11637,"column":0},"generated":{"line":11638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11638,"column":0},"generated":{"line":11639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11639,"column":0},"generated":{"line":11640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11640,"column":0},"generated":{"line":11641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11641,"column":0},"generated":{"line":11642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11642,"column":0},"generated":{"line":11643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11643,"column":0},"generated":{"line":11644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11644,"column":0},"generated":{"line":11645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11645,"column":0},"generated":{"line":11646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11646,"column":0},"generated":{"line":11647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11647,"column":0},"generated":{"line":11648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11648,"column":0},"generated":{"line":11649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11649,"column":0},"generated":{"line":11650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11650,"column":0},"generated":{"line":11651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11651,"column":0},"generated":{"line":11652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11652,"column":0},"generated":{"line":11653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11653,"column":0},"generated":{"line":11654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11654,"column":0},"generated":{"line":11655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11655,"column":0},"generated":{"line":11656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11656,"column":0},"generated":{"line":11657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11657,"column":0},"generated":{"line":11658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11658,"column":0},"generated":{"line":11659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11659,"column":0},"generated":{"line":11660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11660,"column":0},"generated":{"line":11661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11661,"column":0},"generated":{"line":11662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11662,"column":0},"generated":{"line":11663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11663,"column":0},"generated":{"line":11664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11664,"column":0},"generated":{"line":11665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11665,"column":0},"generated":{"line":11666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11666,"column":0},"generated":{"line":11667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11667,"column":0},"generated":{"line":11668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11668,"column":0},"generated":{"line":11669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11669,"column":0},"generated":{"line":11670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11670,"column":0},"generated":{"line":11671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11671,"column":0},"generated":{"line":11672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11672,"column":0},"generated":{"line":11673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11673,"column":0},"generated":{"line":11674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11674,"column":0},"generated":{"line":11675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11675,"column":0},"generated":{"line":11676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11676,"column":0},"generated":{"line":11677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11677,"column":0},"generated":{"line":11678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11678,"column":0},"generated":{"line":11679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11679,"column":0},"generated":{"line":11680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11680,"column":0},"generated":{"line":11681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11681,"column":0},"generated":{"line":11682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11682,"column":0},"generated":{"line":11683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11683,"column":0},"generated":{"line":11684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11684,"column":0},"generated":{"line":11685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11685,"column":0},"generated":{"line":11686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11686,"column":0},"generated":{"line":11687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11687,"column":0},"generated":{"line":11688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11688,"column":0},"generated":{"line":11689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11689,"column":0},"generated":{"line":11690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11690,"column":0},"generated":{"line":11691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11691,"column":0},"generated":{"line":11692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11692,"column":0},"generated":{"line":11693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11693,"column":0},"generated":{"line":11694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11694,"column":0},"generated":{"line":11695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11695,"column":0},"generated":{"line":11696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11696,"column":0},"generated":{"line":11697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11697,"column":0},"generated":{"line":11698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11698,"column":0},"generated":{"line":11699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11699,"column":0},"generated":{"line":11700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11700,"column":0},"generated":{"line":11701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11701,"column":0},"generated":{"line":11702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11702,"column":0},"generated":{"line":11703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11703,"column":0},"generated":{"line":11704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11704,"column":0},"generated":{"line":11705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11705,"column":0},"generated":{"line":11706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11706,"column":0},"generated":{"line":11707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11707,"column":0},"generated":{"line":11708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11708,"column":0},"generated":{"line":11709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11709,"column":0},"generated":{"line":11710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11710,"column":0},"generated":{"line":11711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11711,"column":0},"generated":{"line":11712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11712,"column":0},"generated":{"line":11713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11713,"column":0},"generated":{"line":11714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11714,"column":0},"generated":{"line":11715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11715,"column":0},"generated":{"line":11716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11716,"column":0},"generated":{"line":11717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11717,"column":0},"generated":{"line":11718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11718,"column":0},"generated":{"line":11719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11719,"column":0},"generated":{"line":11720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11720,"column":0},"generated":{"line":11721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11721,"column":0},"generated":{"line":11722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11722,"column":0},"generated":{"line":11723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11723,"column":0},"generated":{"line":11724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11724,"column":0},"generated":{"line":11725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11725,"column":0},"generated":{"line":11726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11726,"column":0},"generated":{"line":11727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11727,"column":0},"generated":{"line":11728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11728,"column":0},"generated":{"line":11729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11729,"column":0},"generated":{"line":11730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11730,"column":0},"generated":{"line":11731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11731,"column":0},"generated":{"line":11732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11732,"column":0},"generated":{"line":11733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11733,"column":0},"generated":{"line":11734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11734,"column":0},"generated":{"line":11735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11735,"column":0},"generated":{"line":11736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11736,"column":0},"generated":{"line":11737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11737,"column":0},"generated":{"line":11738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11738,"column":0},"generated":{"line":11739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11739,"column":0},"generated":{"line":11740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11740,"column":0},"generated":{"line":11741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11741,"column":0},"generated":{"line":11742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11742,"column":0},"generated":{"line":11743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11743,"column":0},"generated":{"line":11744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11744,"column":0},"generated":{"line":11745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11745,"column":0},"generated":{"line":11746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11746,"column":0},"generated":{"line":11747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11747,"column":0},"generated":{"line":11748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11748,"column":0},"generated":{"line":11749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11749,"column":0},"generated":{"line":11750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11750,"column":0},"generated":{"line":11751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11751,"column":0},"generated":{"line":11752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11752,"column":0},"generated":{"line":11753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11753,"column":0},"generated":{"line":11754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11754,"column":0},"generated":{"line":11755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11755,"column":0},"generated":{"line":11756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11756,"column":0},"generated":{"line":11757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11757,"column":0},"generated":{"line":11758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11758,"column":0},"generated":{"line":11759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11759,"column":0},"generated":{"line":11760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11760,"column":0},"generated":{"line":11761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11761,"column":0},"generated":{"line":11762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11762,"column":0},"generated":{"line":11763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11763,"column":0},"generated":{"line":11764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11764,"column":0},"generated":{"line":11765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11765,"column":0},"generated":{"line":11766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11766,"column":0},"generated":{"line":11767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11767,"column":0},"generated":{"line":11768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11768,"column":0},"generated":{"line":11769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11769,"column":0},"generated":{"line":11770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11770,"column":0},"generated":{"line":11771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11771,"column":0},"generated":{"line":11772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11772,"column":0},"generated":{"line":11773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11773,"column":0},"generated":{"line":11774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11774,"column":0},"generated":{"line":11775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11775,"column":0},"generated":{"line":11776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11776,"column":0},"generated":{"line":11777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11777,"column":0},"generated":{"line":11778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11778,"column":0},"generated":{"line":11779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11779,"column":0},"generated":{"line":11780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11780,"column":0},"generated":{"line":11781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11781,"column":0},"generated":{"line":11782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11782,"column":0},"generated":{"line":11783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11783,"column":0},"generated":{"line":11784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11784,"column":0},"generated":{"line":11785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11785,"column":0},"generated":{"line":11786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11786,"column":0},"generated":{"line":11787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11787,"column":0},"generated":{"line":11788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11788,"column":0},"generated":{"line":11789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11789,"column":0},"generated":{"line":11790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11790,"column":0},"generated":{"line":11791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11791,"column":0},"generated":{"line":11792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11792,"column":0},"generated":{"line":11793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11793,"column":0},"generated":{"line":11794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11794,"column":0},"generated":{"line":11795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11795,"column":0},"generated":{"line":11796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11796,"column":0},"generated":{"line":11797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11797,"column":0},"generated":{"line":11798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11798,"column":0},"generated":{"line":11799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11799,"column":0},"generated":{"line":11800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11800,"column":0},"generated":{"line":11801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11801,"column":0},"generated":{"line":11802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11802,"column":0},"generated":{"line":11803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11803,"column":0},"generated":{"line":11804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11804,"column":0},"generated":{"line":11805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11805,"column":0},"generated":{"line":11806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11806,"column":0},"generated":{"line":11807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11807,"column":0},"generated":{"line":11808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11808,"column":0},"generated":{"line":11809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11809,"column":0},"generated":{"line":11810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11810,"column":0},"generated":{"line":11811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11811,"column":0},"generated":{"line":11812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11812,"column":0},"generated":{"line":11813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11813,"column":0},"generated":{"line":11814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11814,"column":0},"generated":{"line":11815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11815,"column":0},"generated":{"line":11816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11816,"column":0},"generated":{"line":11817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11817,"column":0},"generated":{"line":11818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11818,"column":0},"generated":{"line":11819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11819,"column":0},"generated":{"line":11820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11820,"column":0},"generated":{"line":11821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11821,"column":0},"generated":{"line":11822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11822,"column":0},"generated":{"line":11823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11823,"column":0},"generated":{"line":11824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11824,"column":0},"generated":{"line":11825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11825,"column":0},"generated":{"line":11826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11826,"column":0},"generated":{"line":11827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11827,"column":0},"generated":{"line":11828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11828,"column":0},"generated":{"line":11829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11829,"column":0},"generated":{"line":11830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11830,"column":0},"generated":{"line":11831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11831,"column":0},"generated":{"line":11832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11832,"column":0},"generated":{"line":11833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11833,"column":0},"generated":{"line":11834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11834,"column":0},"generated":{"line":11835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11835,"column":0},"generated":{"line":11836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11836,"column":0},"generated":{"line":11837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11837,"column":0},"generated":{"line":11838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11838,"column":0},"generated":{"line":11839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11839,"column":0},"generated":{"line":11840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11840,"column":0},"generated":{"line":11841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11841,"column":0},"generated":{"line":11842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11842,"column":0},"generated":{"line":11843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11843,"column":0},"generated":{"line":11844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11844,"column":0},"generated":{"line":11845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11845,"column":0},"generated":{"line":11846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11846,"column":0},"generated":{"line":11847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11847,"column":0},"generated":{"line":11848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11848,"column":0},"generated":{"line":11849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11849,"column":0},"generated":{"line":11850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11850,"column":0},"generated":{"line":11851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11851,"column":0},"generated":{"line":11852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11852,"column":0},"generated":{"line":11853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11853,"column":0},"generated":{"line":11854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11854,"column":0},"generated":{"line":11855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11855,"column":0},"generated":{"line":11856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11856,"column":0},"generated":{"line":11857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11857,"column":0},"generated":{"line":11858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11858,"column":0},"generated":{"line":11859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11859,"column":0},"generated":{"line":11860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11860,"column":0},"generated":{"line":11861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11861,"column":0},"generated":{"line":11862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11862,"column":0},"generated":{"line":11863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11863,"column":0},"generated":{"line":11864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11864,"column":0},"generated":{"line":11865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11865,"column":0},"generated":{"line":11866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11866,"column":0},"generated":{"line":11867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11867,"column":0},"generated":{"line":11868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11868,"column":0},"generated":{"line":11869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11869,"column":0},"generated":{"line":11870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11870,"column":0},"generated":{"line":11871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11871,"column":0},"generated":{"line":11872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11872,"column":0},"generated":{"line":11873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11873,"column":0},"generated":{"line":11874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11874,"column":0},"generated":{"line":11875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11875,"column":0},"generated":{"line":11876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11876,"column":0},"generated":{"line":11877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11877,"column":0},"generated":{"line":11878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11878,"column":0},"generated":{"line":11879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11879,"column":0},"generated":{"line":11880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11880,"column":0},"generated":{"line":11881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11881,"column":0},"generated":{"line":11882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11882,"column":0},"generated":{"line":11883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11883,"column":0},"generated":{"line":11884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11884,"column":0},"generated":{"line":11885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11885,"column":0},"generated":{"line":11886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11886,"column":0},"generated":{"line":11887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11887,"column":0},"generated":{"line":11888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11888,"column":0},"generated":{"line":11889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11889,"column":0},"generated":{"line":11890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11890,"column":0},"generated":{"line":11891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11891,"column":0},"generated":{"line":11892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11892,"column":0},"generated":{"line":11893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11893,"column":0},"generated":{"line":11894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11894,"column":0},"generated":{"line":11895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11895,"column":0},"generated":{"line":11896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11896,"column":0},"generated":{"line":11897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11897,"column":0},"generated":{"line":11898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11898,"column":0},"generated":{"line":11899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11899,"column":0},"generated":{"line":11900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11900,"column":0},"generated":{"line":11901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11901,"column":0},"generated":{"line":11902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11902,"column":0},"generated":{"line":11903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11903,"column":0},"generated":{"line":11904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11904,"column":0},"generated":{"line":11905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11905,"column":0},"generated":{"line":11906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11906,"column":0},"generated":{"line":11907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11907,"column":0},"generated":{"line":11908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11908,"column":0},"generated":{"line":11909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11909,"column":0},"generated":{"line":11910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11910,"column":0},"generated":{"line":11911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11911,"column":0},"generated":{"line":11912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11912,"column":0},"generated":{"line":11913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11913,"column":0},"generated":{"line":11914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11914,"column":0},"generated":{"line":11915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11915,"column":0},"generated":{"line":11916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11916,"column":0},"generated":{"line":11917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11917,"column":0},"generated":{"line":11918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11918,"column":0},"generated":{"line":11919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11919,"column":0},"generated":{"line":11920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11920,"column":0},"generated":{"line":11921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11921,"column":0},"generated":{"line":11922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11922,"column":0},"generated":{"line":11923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11923,"column":0},"generated":{"line":11924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11924,"column":0},"generated":{"line":11925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11925,"column":0},"generated":{"line":11926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11926,"column":0},"generated":{"line":11927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11927,"column":0},"generated":{"line":11928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11928,"column":0},"generated":{"line":11929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11929,"column":0},"generated":{"line":11930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11930,"column":0},"generated":{"line":11931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11931,"column":0},"generated":{"line":11932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11932,"column":0},"generated":{"line":11933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11933,"column":0},"generated":{"line":11934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11934,"column":0},"generated":{"line":11935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11935,"column":0},"generated":{"line":11936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11936,"column":0},"generated":{"line":11937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11937,"column":0},"generated":{"line":11938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11938,"column":0},"generated":{"line":11939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11939,"column":0},"generated":{"line":11940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11940,"column":0},"generated":{"line":11941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11941,"column":0},"generated":{"line":11942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11942,"column":0},"generated":{"line":11943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11943,"column":0},"generated":{"line":11944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11944,"column":0},"generated":{"line":11945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11945,"column":0},"generated":{"line":11946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11946,"column":0},"generated":{"line":11947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11947,"column":0},"generated":{"line":11948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11948,"column":0},"generated":{"line":11949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11949,"column":0},"generated":{"line":11950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11950,"column":0},"generated":{"line":11951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11951,"column":0},"generated":{"line":11952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11952,"column":0},"generated":{"line":11953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11953,"column":0},"generated":{"line":11954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11954,"column":0},"generated":{"line":11955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11955,"column":0},"generated":{"line":11956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11956,"column":0},"generated":{"line":11957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11957,"column":0},"generated":{"line":11958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11958,"column":0},"generated":{"line":11959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11959,"column":0},"generated":{"line":11960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11960,"column":0},"generated":{"line":11961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11961,"column":0},"generated":{"line":11962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11962,"column":0},"generated":{"line":11963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11963,"column":0},"generated":{"line":11964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11964,"column":0},"generated":{"line":11965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11965,"column":0},"generated":{"line":11966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11966,"column":0},"generated":{"line":11967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11967,"column":0},"generated":{"line":11968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11968,"column":0},"generated":{"line":11969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11969,"column":0},"generated":{"line":11970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11970,"column":0},"generated":{"line":11971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11971,"column":0},"generated":{"line":11972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11972,"column":0},"generated":{"line":11973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11973,"column":0},"generated":{"line":11974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11974,"column":0},"generated":{"line":11975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11975,"column":0},"generated":{"line":11976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11976,"column":0},"generated":{"line":11977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11977,"column":0},"generated":{"line":11978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11978,"column":0},"generated":{"line":11979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11979,"column":0},"generated":{"line":11980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11980,"column":0},"generated":{"line":11981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11981,"column":0},"generated":{"line":11982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11982,"column":0},"generated":{"line":11983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11983,"column":0},"generated":{"line":11984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11984,"column":0},"generated":{"line":11985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11985,"column":0},"generated":{"line":11986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11986,"column":0},"generated":{"line":11987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11987,"column":0},"generated":{"line":11988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11988,"column":0},"generated":{"line":11989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11989,"column":0},"generated":{"line":11990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11990,"column":0},"generated":{"line":11991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11991,"column":0},"generated":{"line":11992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11992,"column":0},"generated":{"line":11993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11993,"column":0},"generated":{"line":11994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11994,"column":0},"generated":{"line":11995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11995,"column":0},"generated":{"line":11996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11996,"column":0},"generated":{"line":11997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11997,"column":0},"generated":{"line":11998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11998,"column":0},"generated":{"line":11999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":11999,"column":0},"generated":{"line":12000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12000,"column":0},"generated":{"line":12001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12001,"column":0},"generated":{"line":12002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12002,"column":0},"generated":{"line":12003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12003,"column":0},"generated":{"line":12004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12004,"column":0},"generated":{"line":12005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12005,"column":0},"generated":{"line":12006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12006,"column":0},"generated":{"line":12007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12007,"column":0},"generated":{"line":12008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12008,"column":0},"generated":{"line":12009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12009,"column":0},"generated":{"line":12010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12010,"column":0},"generated":{"line":12011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12011,"column":0},"generated":{"line":12012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12012,"column":0},"generated":{"line":12013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12013,"column":0},"generated":{"line":12014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12014,"column":0},"generated":{"line":12015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12015,"column":0},"generated":{"line":12016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12016,"column":0},"generated":{"line":12017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12017,"column":0},"generated":{"line":12018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12018,"column":0},"generated":{"line":12019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12019,"column":0},"generated":{"line":12020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12020,"column":0},"generated":{"line":12021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12021,"column":0},"generated":{"line":12022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12022,"column":0},"generated":{"line":12023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12023,"column":0},"generated":{"line":12024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12024,"column":0},"generated":{"line":12025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12025,"column":0},"generated":{"line":12026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12026,"column":0},"generated":{"line":12027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12027,"column":0},"generated":{"line":12028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12028,"column":0},"generated":{"line":12029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12029,"column":0},"generated":{"line":12030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12030,"column":0},"generated":{"line":12031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12031,"column":0},"generated":{"line":12032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12032,"column":0},"generated":{"line":12033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12033,"column":0},"generated":{"line":12034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12034,"column":0},"generated":{"line":12035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12035,"column":0},"generated":{"line":12036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12036,"column":0},"generated":{"line":12037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12037,"column":0},"generated":{"line":12038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12038,"column":0},"generated":{"line":12039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12039,"column":0},"generated":{"line":12040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12040,"column":0},"generated":{"line":12041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12041,"column":0},"generated":{"line":12042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12042,"column":0},"generated":{"line":12043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12043,"column":0},"generated":{"line":12044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12044,"column":0},"generated":{"line":12045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12045,"column":0},"generated":{"line":12046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12046,"column":0},"generated":{"line":12047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12047,"column":0},"generated":{"line":12048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12048,"column":0},"generated":{"line":12049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12049,"column":0},"generated":{"line":12050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12050,"column":0},"generated":{"line":12051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12051,"column":0},"generated":{"line":12052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12052,"column":0},"generated":{"line":12053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12053,"column":0},"generated":{"line":12054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12054,"column":0},"generated":{"line":12055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12055,"column":0},"generated":{"line":12056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12056,"column":0},"generated":{"line":12057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12057,"column":0},"generated":{"line":12058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12058,"column":0},"generated":{"line":12059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12059,"column":0},"generated":{"line":12060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12060,"column":0},"generated":{"line":12061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12061,"column":0},"generated":{"line":12062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12062,"column":0},"generated":{"line":12063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12063,"column":0},"generated":{"line":12064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12064,"column":0},"generated":{"line":12065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12065,"column":0},"generated":{"line":12066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12066,"column":0},"generated":{"line":12067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12067,"column":0},"generated":{"line":12068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12068,"column":0},"generated":{"line":12069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12069,"column":0},"generated":{"line":12070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12070,"column":0},"generated":{"line":12071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12071,"column":0},"generated":{"line":12072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12072,"column":0},"generated":{"line":12073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12073,"column":0},"generated":{"line":12074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12074,"column":0},"generated":{"line":12075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12075,"column":0},"generated":{"line":12076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12076,"column":0},"generated":{"line":12077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12077,"column":0},"generated":{"line":12078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12078,"column":0},"generated":{"line":12079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12079,"column":0},"generated":{"line":12080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12080,"column":0},"generated":{"line":12081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12081,"column":0},"generated":{"line":12082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12082,"column":0},"generated":{"line":12083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12083,"column":0},"generated":{"line":12084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12084,"column":0},"generated":{"line":12085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12085,"column":0},"generated":{"line":12086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12086,"column":0},"generated":{"line":12087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12087,"column":0},"generated":{"line":12088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12088,"column":0},"generated":{"line":12089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12089,"column":0},"generated":{"line":12090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12090,"column":0},"generated":{"line":12091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12091,"column":0},"generated":{"line":12092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12092,"column":0},"generated":{"line":12093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12093,"column":0},"generated":{"line":12094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12094,"column":0},"generated":{"line":12095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12095,"column":0},"generated":{"line":12096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12096,"column":0},"generated":{"line":12097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12097,"column":0},"generated":{"line":12098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12098,"column":0},"generated":{"line":12099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12099,"column":0},"generated":{"line":12100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12100,"column":0},"generated":{"line":12101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12101,"column":0},"generated":{"line":12102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12102,"column":0},"generated":{"line":12103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12103,"column":0},"generated":{"line":12104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12104,"column":0},"generated":{"line":12105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12105,"column":0},"generated":{"line":12106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12106,"column":0},"generated":{"line":12107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12107,"column":0},"generated":{"line":12108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12108,"column":0},"generated":{"line":12109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12109,"column":0},"generated":{"line":12110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12110,"column":0},"generated":{"line":12111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12111,"column":0},"generated":{"line":12112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12112,"column":0},"generated":{"line":12113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12113,"column":0},"generated":{"line":12114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12114,"column":0},"generated":{"line":12115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12115,"column":0},"generated":{"line":12116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12116,"column":0},"generated":{"line":12117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12117,"column":0},"generated":{"line":12118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12118,"column":0},"generated":{"line":12119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12119,"column":0},"generated":{"line":12120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12120,"column":0},"generated":{"line":12121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12121,"column":0},"generated":{"line":12122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12122,"column":0},"generated":{"line":12123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12123,"column":0},"generated":{"line":12124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12124,"column":0},"generated":{"line":12125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12125,"column":0},"generated":{"line":12126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12126,"column":0},"generated":{"line":12127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12127,"column":0},"generated":{"line":12128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12128,"column":0},"generated":{"line":12129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12129,"column":0},"generated":{"line":12130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12130,"column":0},"generated":{"line":12131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12131,"column":0},"generated":{"line":12132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12132,"column":0},"generated":{"line":12133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12133,"column":0},"generated":{"line":12134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12134,"column":0},"generated":{"line":12135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12135,"column":0},"generated":{"line":12136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12136,"column":0},"generated":{"line":12137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12137,"column":0},"generated":{"line":12138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12138,"column":0},"generated":{"line":12139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12139,"column":0},"generated":{"line":12140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12140,"column":0},"generated":{"line":12141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12141,"column":0},"generated":{"line":12142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12142,"column":0},"generated":{"line":12143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12143,"column":0},"generated":{"line":12144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12144,"column":0},"generated":{"line":12145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12145,"column":0},"generated":{"line":12146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12146,"column":0},"generated":{"line":12147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12147,"column":0},"generated":{"line":12148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12148,"column":0},"generated":{"line":12149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12149,"column":0},"generated":{"line":12150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12150,"column":0},"generated":{"line":12151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12151,"column":0},"generated":{"line":12152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12152,"column":0},"generated":{"line":12153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12153,"column":0},"generated":{"line":12154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12154,"column":0},"generated":{"line":12155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12155,"column":0},"generated":{"line":12156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12156,"column":0},"generated":{"line":12157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12157,"column":0},"generated":{"line":12158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12158,"column":0},"generated":{"line":12159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12159,"column":0},"generated":{"line":12160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12160,"column":0},"generated":{"line":12161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12161,"column":0},"generated":{"line":12162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12162,"column":0},"generated":{"line":12163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12163,"column":0},"generated":{"line":12164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12164,"column":0},"generated":{"line":12165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12165,"column":0},"generated":{"line":12166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12166,"column":0},"generated":{"line":12167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12167,"column":0},"generated":{"line":12168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12168,"column":0},"generated":{"line":12169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12169,"column":0},"generated":{"line":12170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12170,"column":0},"generated":{"line":12171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12171,"column":0},"generated":{"line":12172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12172,"column":0},"generated":{"line":12173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12173,"column":0},"generated":{"line":12174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12174,"column":0},"generated":{"line":12175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12175,"column":0},"generated":{"line":12176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12176,"column":0},"generated":{"line":12177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12177,"column":0},"generated":{"line":12178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12178,"column":0},"generated":{"line":12179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12179,"column":0},"generated":{"line":12180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12180,"column":0},"generated":{"line":12181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12181,"column":0},"generated":{"line":12182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12182,"column":0},"generated":{"line":12183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12183,"column":0},"generated":{"line":12184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12184,"column":0},"generated":{"line":12185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12185,"column":0},"generated":{"line":12186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12186,"column":0},"generated":{"line":12187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12187,"column":0},"generated":{"line":12188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12188,"column":0},"generated":{"line":12189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12189,"column":0},"generated":{"line":12190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12190,"column":0},"generated":{"line":12191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12191,"column":0},"generated":{"line":12192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12192,"column":0},"generated":{"line":12193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12193,"column":0},"generated":{"line":12194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12194,"column":0},"generated":{"line":12195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12195,"column":0},"generated":{"line":12196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12196,"column":0},"generated":{"line":12197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12197,"column":0},"generated":{"line":12198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12198,"column":0},"generated":{"line":12199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12199,"column":0},"generated":{"line":12200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12200,"column":0},"generated":{"line":12201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12201,"column":0},"generated":{"line":12202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12202,"column":0},"generated":{"line":12203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12203,"column":0},"generated":{"line":12204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12204,"column":0},"generated":{"line":12205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12205,"column":0},"generated":{"line":12206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12206,"column":0},"generated":{"line":12207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12207,"column":0},"generated":{"line":12208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12208,"column":0},"generated":{"line":12209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12209,"column":0},"generated":{"line":12210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12210,"column":0},"generated":{"line":12211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12211,"column":0},"generated":{"line":12212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12212,"column":0},"generated":{"line":12213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12213,"column":0},"generated":{"line":12214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12214,"column":0},"generated":{"line":12215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12215,"column":0},"generated":{"line":12216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12216,"column":0},"generated":{"line":12217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12217,"column":0},"generated":{"line":12218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12218,"column":0},"generated":{"line":12219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12219,"column":0},"generated":{"line":12220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12220,"column":0},"generated":{"line":12221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12221,"column":0},"generated":{"line":12222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12222,"column":0},"generated":{"line":12223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12223,"column":0},"generated":{"line":12224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12224,"column":0},"generated":{"line":12225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12225,"column":0},"generated":{"line":12226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12226,"column":0},"generated":{"line":12227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12227,"column":0},"generated":{"line":12228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12228,"column":0},"generated":{"line":12229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12229,"column":0},"generated":{"line":12230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12230,"column":0},"generated":{"line":12231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12231,"column":0},"generated":{"line":12232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12232,"column":0},"generated":{"line":12233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12233,"column":0},"generated":{"line":12234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12234,"column":0},"generated":{"line":12235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12235,"column":0},"generated":{"line":12236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12236,"column":0},"generated":{"line":12237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12237,"column":0},"generated":{"line":12238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12238,"column":0},"generated":{"line":12239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12239,"column":0},"generated":{"line":12240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12240,"column":0},"generated":{"line":12241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12241,"column":0},"generated":{"line":12242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12242,"column":0},"generated":{"line":12243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12243,"column":0},"generated":{"line":12244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12244,"column":0},"generated":{"line":12245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12245,"column":0},"generated":{"line":12246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12246,"column":0},"generated":{"line":12247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12247,"column":0},"generated":{"line":12248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12248,"column":0},"generated":{"line":12249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12249,"column":0},"generated":{"line":12250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12250,"column":0},"generated":{"line":12251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12251,"column":0},"generated":{"line":12252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12252,"column":0},"generated":{"line":12253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12253,"column":0},"generated":{"line":12254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12254,"column":0},"generated":{"line":12255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12255,"column":0},"generated":{"line":12256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12256,"column":0},"generated":{"line":12257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12257,"column":0},"generated":{"line":12258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12258,"column":0},"generated":{"line":12259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12259,"column":0},"generated":{"line":12260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12260,"column":0},"generated":{"line":12261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12261,"column":0},"generated":{"line":12262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12262,"column":0},"generated":{"line":12263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12263,"column":0},"generated":{"line":12264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12264,"column":0},"generated":{"line":12265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12265,"column":0},"generated":{"line":12266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12266,"column":0},"generated":{"line":12267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12267,"column":0},"generated":{"line":12268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12268,"column":0},"generated":{"line":12269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12269,"column":0},"generated":{"line":12270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12270,"column":0},"generated":{"line":12271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12271,"column":0},"generated":{"line":12272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12272,"column":0},"generated":{"line":12273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12273,"column":0},"generated":{"line":12274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12274,"column":0},"generated":{"line":12275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12275,"column":0},"generated":{"line":12276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12276,"column":0},"generated":{"line":12277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12277,"column":0},"generated":{"line":12278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12278,"column":0},"generated":{"line":12279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12279,"column":0},"generated":{"line":12280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12280,"column":0},"generated":{"line":12281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12281,"column":0},"generated":{"line":12282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12282,"column":0},"generated":{"line":12283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12283,"column":0},"generated":{"line":12284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12284,"column":0},"generated":{"line":12285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12285,"column":0},"generated":{"line":12286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12286,"column":0},"generated":{"line":12287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12287,"column":0},"generated":{"line":12288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12288,"column":0},"generated":{"line":12289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12289,"column":0},"generated":{"line":12290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12290,"column":0},"generated":{"line":12291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12291,"column":0},"generated":{"line":12292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12292,"column":0},"generated":{"line":12293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12293,"column":0},"generated":{"line":12294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12294,"column":0},"generated":{"line":12295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12295,"column":0},"generated":{"line":12296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12296,"column":0},"generated":{"line":12297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12297,"column":0},"generated":{"line":12298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12298,"column":0},"generated":{"line":12299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12299,"column":0},"generated":{"line":12300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12300,"column":0},"generated":{"line":12301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12301,"column":0},"generated":{"line":12302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12302,"column":0},"generated":{"line":12303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12303,"column":0},"generated":{"line":12304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12304,"column":0},"generated":{"line":12305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12305,"column":0},"generated":{"line":12306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12306,"column":0},"generated":{"line":12307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12307,"column":0},"generated":{"line":12308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12308,"column":0},"generated":{"line":12309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12309,"column":0},"generated":{"line":12310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12310,"column":0},"generated":{"line":12311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12311,"column":0},"generated":{"line":12312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12312,"column":0},"generated":{"line":12313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12313,"column":0},"generated":{"line":12314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12314,"column":0},"generated":{"line":12315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12315,"column":0},"generated":{"line":12316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12316,"column":0},"generated":{"line":12317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12317,"column":0},"generated":{"line":12318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12318,"column":0},"generated":{"line":12319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12319,"column":0},"generated":{"line":12320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12320,"column":0},"generated":{"line":12321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12321,"column":0},"generated":{"line":12322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12322,"column":0},"generated":{"line":12323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12323,"column":0},"generated":{"line":12324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12324,"column":0},"generated":{"line":12325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12325,"column":0},"generated":{"line":12326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12326,"column":0},"generated":{"line":12327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12327,"column":0},"generated":{"line":12328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12328,"column":0},"generated":{"line":12329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12329,"column":0},"generated":{"line":12330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12330,"column":0},"generated":{"line":12331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12331,"column":0},"generated":{"line":12332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12332,"column":0},"generated":{"line":12333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12333,"column":0},"generated":{"line":12334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12334,"column":0},"generated":{"line":12335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12335,"column":0},"generated":{"line":12336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12336,"column":0},"generated":{"line":12337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12337,"column":0},"generated":{"line":12338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12338,"column":0},"generated":{"line":12339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12339,"column":0},"generated":{"line":12340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12340,"column":0},"generated":{"line":12341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12341,"column":0},"generated":{"line":12342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12342,"column":0},"generated":{"line":12343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12343,"column":0},"generated":{"line":12344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12344,"column":0},"generated":{"line":12345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12345,"column":0},"generated":{"line":12346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12346,"column":0},"generated":{"line":12347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12347,"column":0},"generated":{"line":12348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12348,"column":0},"generated":{"line":12349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12349,"column":0},"generated":{"line":12350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12350,"column":0},"generated":{"line":12351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12351,"column":0},"generated":{"line":12352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12352,"column":0},"generated":{"line":12353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12353,"column":0},"generated":{"line":12354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12354,"column":0},"generated":{"line":12355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12355,"column":0},"generated":{"line":12356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12356,"column":0},"generated":{"line":12357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12357,"column":0},"generated":{"line":12358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12358,"column":0},"generated":{"line":12359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12359,"column":0},"generated":{"line":12360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12360,"column":0},"generated":{"line":12361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12361,"column":0},"generated":{"line":12362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12362,"column":0},"generated":{"line":12363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12363,"column":0},"generated":{"line":12364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12364,"column":0},"generated":{"line":12365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12365,"column":0},"generated":{"line":12366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12366,"column":0},"generated":{"line":12367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12367,"column":0},"generated":{"line":12368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12368,"column":0},"generated":{"line":12369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12369,"column":0},"generated":{"line":12370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12370,"column":0},"generated":{"line":12371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12371,"column":0},"generated":{"line":12372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12372,"column":0},"generated":{"line":12373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12373,"column":0},"generated":{"line":12374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12374,"column":0},"generated":{"line":12375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12375,"column":0},"generated":{"line":12376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12376,"column":0},"generated":{"line":12377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12377,"column":0},"generated":{"line":12378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12378,"column":0},"generated":{"line":12379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12379,"column":0},"generated":{"line":12380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12380,"column":0},"generated":{"line":12381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12381,"column":0},"generated":{"line":12382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12382,"column":0},"generated":{"line":12383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12383,"column":0},"generated":{"line":12384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12384,"column":0},"generated":{"line":12385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12385,"column":0},"generated":{"line":12386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12386,"column":0},"generated":{"line":12387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12387,"column":0},"generated":{"line":12388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12388,"column":0},"generated":{"line":12389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12389,"column":0},"generated":{"line":12390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12390,"column":0},"generated":{"line":12391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12391,"column":0},"generated":{"line":12392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12392,"column":0},"generated":{"line":12393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12393,"column":0},"generated":{"line":12394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12394,"column":0},"generated":{"line":12395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12395,"column":0},"generated":{"line":12396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12396,"column":0},"generated":{"line":12397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12397,"column":0},"generated":{"line":12398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12398,"column":0},"generated":{"line":12399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12399,"column":0},"generated":{"line":12400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12400,"column":0},"generated":{"line":12401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12401,"column":0},"generated":{"line":12402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12402,"column":0},"generated":{"line":12403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12403,"column":0},"generated":{"line":12404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12404,"column":0},"generated":{"line":12405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12405,"column":0},"generated":{"line":12406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12406,"column":0},"generated":{"line":12407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12407,"column":0},"generated":{"line":12408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12408,"column":0},"generated":{"line":12409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12409,"column":0},"generated":{"line":12410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12410,"column":0},"generated":{"line":12411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12411,"column":0},"generated":{"line":12412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12412,"column":0},"generated":{"line":12413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12413,"column":0},"generated":{"line":12414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12414,"column":0},"generated":{"line":12415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12415,"column":0},"generated":{"line":12416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12416,"column":0},"generated":{"line":12417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12417,"column":0},"generated":{"line":12418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12418,"column":0},"generated":{"line":12419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12419,"column":0},"generated":{"line":12420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12420,"column":0},"generated":{"line":12421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12421,"column":0},"generated":{"line":12422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12422,"column":0},"generated":{"line":12423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12423,"column":0},"generated":{"line":12424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12424,"column":0},"generated":{"line":12425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12425,"column":0},"generated":{"line":12426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12426,"column":0},"generated":{"line":12427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12427,"column":0},"generated":{"line":12428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12428,"column":0},"generated":{"line":12429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12429,"column":0},"generated":{"line":12430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12430,"column":0},"generated":{"line":12431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12431,"column":0},"generated":{"line":12432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12432,"column":0},"generated":{"line":12433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12433,"column":0},"generated":{"line":12434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12434,"column":0},"generated":{"line":12435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12435,"column":0},"generated":{"line":12436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12436,"column":0},"generated":{"line":12437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12437,"column":0},"generated":{"line":12438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12438,"column":0},"generated":{"line":12439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12439,"column":0},"generated":{"line":12440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12440,"column":0},"generated":{"line":12441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12441,"column":0},"generated":{"line":12442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12442,"column":0},"generated":{"line":12443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12443,"column":0},"generated":{"line":12444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12444,"column":0},"generated":{"line":12445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12445,"column":0},"generated":{"line":12446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12446,"column":0},"generated":{"line":12447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12447,"column":0},"generated":{"line":12448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12448,"column":0},"generated":{"line":12449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12449,"column":0},"generated":{"line":12450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12450,"column":0},"generated":{"line":12451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12451,"column":0},"generated":{"line":12452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12452,"column":0},"generated":{"line":12453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12453,"column":0},"generated":{"line":12454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12454,"column":0},"generated":{"line":12455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12455,"column":0},"generated":{"line":12456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12456,"column":0},"generated":{"line":12457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12457,"column":0},"generated":{"line":12458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12458,"column":0},"generated":{"line":12459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12459,"column":0},"generated":{"line":12460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12460,"column":0},"generated":{"line":12461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12461,"column":0},"generated":{"line":12462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12462,"column":0},"generated":{"line":12463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12463,"column":0},"generated":{"line":12464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12464,"column":0},"generated":{"line":12465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12465,"column":0},"generated":{"line":12466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12466,"column":0},"generated":{"line":12467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12467,"column":0},"generated":{"line":12468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12468,"column":0},"generated":{"line":12469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12469,"column":0},"generated":{"line":12470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12470,"column":0},"generated":{"line":12471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12471,"column":0},"generated":{"line":12472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12472,"column":0},"generated":{"line":12473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12473,"column":0},"generated":{"line":12474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12474,"column":0},"generated":{"line":12475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12475,"column":0},"generated":{"line":12476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12476,"column":0},"generated":{"line":12477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12477,"column":0},"generated":{"line":12478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12478,"column":0},"generated":{"line":12479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12479,"column":0},"generated":{"line":12480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12480,"column":0},"generated":{"line":12481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12481,"column":0},"generated":{"line":12482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12482,"column":0},"generated":{"line":12483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12483,"column":0},"generated":{"line":12484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12484,"column":0},"generated":{"line":12485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12485,"column":0},"generated":{"line":12486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12486,"column":0},"generated":{"line":12487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12487,"column":0},"generated":{"line":12488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12488,"column":0},"generated":{"line":12489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12489,"column":0},"generated":{"line":12490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12490,"column":0},"generated":{"line":12491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12491,"column":0},"generated":{"line":12492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12492,"column":0},"generated":{"line":12493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12493,"column":0},"generated":{"line":12494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12494,"column":0},"generated":{"line":12495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12495,"column":0},"generated":{"line":12496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12496,"column":0},"generated":{"line":12497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12497,"column":0},"generated":{"line":12498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12498,"column":0},"generated":{"line":12499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12499,"column":0},"generated":{"line":12500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12500,"column":0},"generated":{"line":12501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12501,"column":0},"generated":{"line":12502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12502,"column":0},"generated":{"line":12503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12503,"column":0},"generated":{"line":12504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12504,"column":0},"generated":{"line":12505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12505,"column":0},"generated":{"line":12506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12506,"column":0},"generated":{"line":12507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12507,"column":0},"generated":{"line":12508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12508,"column":0},"generated":{"line":12509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12509,"column":0},"generated":{"line":12510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12510,"column":0},"generated":{"line":12511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12511,"column":0},"generated":{"line":12512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12512,"column":0},"generated":{"line":12513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12513,"column":0},"generated":{"line":12514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12514,"column":0},"generated":{"line":12515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12515,"column":0},"generated":{"line":12516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12516,"column":0},"generated":{"line":12517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12517,"column":0},"generated":{"line":12518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12518,"column":0},"generated":{"line":12519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12519,"column":0},"generated":{"line":12520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12520,"column":0},"generated":{"line":12521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12521,"column":0},"generated":{"line":12522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12522,"column":0},"generated":{"line":12523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12523,"column":0},"generated":{"line":12524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12524,"column":0},"generated":{"line":12525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12525,"column":0},"generated":{"line":12526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12526,"column":0},"generated":{"line":12527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12527,"column":0},"generated":{"line":12528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12528,"column":0},"generated":{"line":12529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12529,"column":0},"generated":{"line":12530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12530,"column":0},"generated":{"line":12531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12531,"column":0},"generated":{"line":12532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12532,"column":0},"generated":{"line":12533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12533,"column":0},"generated":{"line":12534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12534,"column":0},"generated":{"line":12535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12535,"column":0},"generated":{"line":12536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12536,"column":0},"generated":{"line":12537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12537,"column":0},"generated":{"line":12538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12538,"column":0},"generated":{"line":12539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12539,"column":0},"generated":{"line":12540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12540,"column":0},"generated":{"line":12541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12541,"column":0},"generated":{"line":12542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12542,"column":0},"generated":{"line":12543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12543,"column":0},"generated":{"line":12544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12544,"column":0},"generated":{"line":12545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12545,"column":0},"generated":{"line":12546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12546,"column":0},"generated":{"line":12547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12547,"column":0},"generated":{"line":12548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12548,"column":0},"generated":{"line":12549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12549,"column":0},"generated":{"line":12550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12550,"column":0},"generated":{"line":12551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12551,"column":0},"generated":{"line":12552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12552,"column":0},"generated":{"line":12553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12553,"column":0},"generated":{"line":12554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12554,"column":0},"generated":{"line":12555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12555,"column":0},"generated":{"line":12556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12556,"column":0},"generated":{"line":12557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12557,"column":0},"generated":{"line":12558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12558,"column":0},"generated":{"line":12559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12559,"column":0},"generated":{"line":12560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12560,"column":0},"generated":{"line":12561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12561,"column":0},"generated":{"line":12562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12562,"column":0},"generated":{"line":12563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12563,"column":0},"generated":{"line":12564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12564,"column":0},"generated":{"line":12565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12565,"column":0},"generated":{"line":12566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12566,"column":0},"generated":{"line":12567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12567,"column":0},"generated":{"line":12568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12568,"column":0},"generated":{"line":12569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12569,"column":0},"generated":{"line":12570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12570,"column":0},"generated":{"line":12571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12571,"column":0},"generated":{"line":12572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12572,"column":0},"generated":{"line":12573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12573,"column":0},"generated":{"line":12574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12574,"column":0},"generated":{"line":12575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12575,"column":0},"generated":{"line":12576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12576,"column":0},"generated":{"line":12577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12577,"column":0},"generated":{"line":12578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12578,"column":0},"generated":{"line":12579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12579,"column":0},"generated":{"line":12580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12580,"column":0},"generated":{"line":12581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12581,"column":0},"generated":{"line":12582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12582,"column":0},"generated":{"line":12583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12583,"column":0},"generated":{"line":12584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12584,"column":0},"generated":{"line":12585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12585,"column":0},"generated":{"line":12586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12586,"column":0},"generated":{"line":12587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12587,"column":0},"generated":{"line":12588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12588,"column":0},"generated":{"line":12589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12589,"column":0},"generated":{"line":12590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12590,"column":0},"generated":{"line":12591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12591,"column":0},"generated":{"line":12592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12592,"column":0},"generated":{"line":12593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12593,"column":0},"generated":{"line":12594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12594,"column":0},"generated":{"line":12595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12595,"column":0},"generated":{"line":12596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12596,"column":0},"generated":{"line":12597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12597,"column":0},"generated":{"line":12598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12598,"column":0},"generated":{"line":12599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12599,"column":0},"generated":{"line":12600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12600,"column":0},"generated":{"line":12601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12601,"column":0},"generated":{"line":12602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12602,"column":0},"generated":{"line":12603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12603,"column":0},"generated":{"line":12604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12604,"column":0},"generated":{"line":12605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12605,"column":0},"generated":{"line":12606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12606,"column":0},"generated":{"line":12607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12607,"column":0},"generated":{"line":12608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12608,"column":0},"generated":{"line":12609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12609,"column":0},"generated":{"line":12610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12610,"column":0},"generated":{"line":12611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12611,"column":0},"generated":{"line":12612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12612,"column":0},"generated":{"line":12613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12613,"column":0},"generated":{"line":12614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12614,"column":0},"generated":{"line":12615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12615,"column":0},"generated":{"line":12616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12616,"column":0},"generated":{"line":12617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12617,"column":0},"generated":{"line":12618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12618,"column":0},"generated":{"line":12619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12619,"column":0},"generated":{"line":12620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12620,"column":0},"generated":{"line":12621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12621,"column":0},"generated":{"line":12622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12622,"column":0},"generated":{"line":12623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12623,"column":0},"generated":{"line":12624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12624,"column":0},"generated":{"line":12625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12625,"column":0},"generated":{"line":12626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12626,"column":0},"generated":{"line":12627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12627,"column":0},"generated":{"line":12628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12628,"column":0},"generated":{"line":12629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12629,"column":0},"generated":{"line":12630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12630,"column":0},"generated":{"line":12631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12631,"column":0},"generated":{"line":12632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12632,"column":0},"generated":{"line":12633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12633,"column":0},"generated":{"line":12634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12634,"column":0},"generated":{"line":12635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12635,"column":0},"generated":{"line":12636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12636,"column":0},"generated":{"line":12637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12637,"column":0},"generated":{"line":12638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12638,"column":0},"generated":{"line":12639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12639,"column":0},"generated":{"line":12640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12640,"column":0},"generated":{"line":12641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12641,"column":0},"generated":{"line":12642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12642,"column":0},"generated":{"line":12643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12643,"column":0},"generated":{"line":12644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12644,"column":0},"generated":{"line":12645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12645,"column":0},"generated":{"line":12646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12646,"column":0},"generated":{"line":12647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12647,"column":0},"generated":{"line":12648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12648,"column":0},"generated":{"line":12649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12649,"column":0},"generated":{"line":12650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12650,"column":0},"generated":{"line":12651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12651,"column":0},"generated":{"line":12652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12652,"column":0},"generated":{"line":12653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12653,"column":0},"generated":{"line":12654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12654,"column":0},"generated":{"line":12655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12655,"column":0},"generated":{"line":12656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12656,"column":0},"generated":{"line":12657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12657,"column":0},"generated":{"line":12658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12658,"column":0},"generated":{"line":12659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12659,"column":0},"generated":{"line":12660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12660,"column":0},"generated":{"line":12661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12661,"column":0},"generated":{"line":12662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12662,"column":0},"generated":{"line":12663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12663,"column":0},"generated":{"line":12664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12664,"column":0},"generated":{"line":12665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12665,"column":0},"generated":{"line":12666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12666,"column":0},"generated":{"line":12667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12667,"column":0},"generated":{"line":12668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12668,"column":0},"generated":{"line":12669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12669,"column":0},"generated":{"line":12670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12670,"column":0},"generated":{"line":12671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12671,"column":0},"generated":{"line":12672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12672,"column":0},"generated":{"line":12673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12673,"column":0},"generated":{"line":12674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12674,"column":0},"generated":{"line":12675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12675,"column":0},"generated":{"line":12676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12676,"column":0},"generated":{"line":12677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12677,"column":0},"generated":{"line":12678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12678,"column":0},"generated":{"line":12679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12679,"column":0},"generated":{"line":12680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12680,"column":0},"generated":{"line":12681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12681,"column":0},"generated":{"line":12682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12682,"column":0},"generated":{"line":12683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12683,"column":0},"generated":{"line":12684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12684,"column":0},"generated":{"line":12685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12685,"column":0},"generated":{"line":12686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12686,"column":0},"generated":{"line":12687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12687,"column":0},"generated":{"line":12688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12688,"column":0},"generated":{"line":12689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12689,"column":0},"generated":{"line":12690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12690,"column":0},"generated":{"line":12691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12691,"column":0},"generated":{"line":12692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12692,"column":0},"generated":{"line":12693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12693,"column":0},"generated":{"line":12694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12694,"column":0},"generated":{"line":12695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12695,"column":0},"generated":{"line":12696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12696,"column":0},"generated":{"line":12697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12697,"column":0},"generated":{"line":12698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12698,"column":0},"generated":{"line":12699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12699,"column":0},"generated":{"line":12700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12700,"column":0},"generated":{"line":12701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12701,"column":0},"generated":{"line":12702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12702,"column":0},"generated":{"line":12703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12703,"column":0},"generated":{"line":12704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12704,"column":0},"generated":{"line":12705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12705,"column":0},"generated":{"line":12706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12706,"column":0},"generated":{"line":12707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12707,"column":0},"generated":{"line":12708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12708,"column":0},"generated":{"line":12709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12709,"column":0},"generated":{"line":12710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12710,"column":0},"generated":{"line":12711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12711,"column":0},"generated":{"line":12712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12712,"column":0},"generated":{"line":12713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12713,"column":0},"generated":{"line":12714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12714,"column":0},"generated":{"line":12715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12715,"column":0},"generated":{"line":12716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12716,"column":0},"generated":{"line":12717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12717,"column":0},"generated":{"line":12718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12718,"column":0},"generated":{"line":12719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12719,"column":0},"generated":{"line":12720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12720,"column":0},"generated":{"line":12721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12721,"column":0},"generated":{"line":12722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12722,"column":0},"generated":{"line":12723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12723,"column":0},"generated":{"line":12724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12724,"column":0},"generated":{"line":12725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12725,"column":0},"generated":{"line":12726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12726,"column":0},"generated":{"line":12727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12727,"column":0},"generated":{"line":12728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12728,"column":0},"generated":{"line":12729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12729,"column":0},"generated":{"line":12730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12730,"column":0},"generated":{"line":12731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12731,"column":0},"generated":{"line":12732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12732,"column":0},"generated":{"line":12733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12733,"column":0},"generated":{"line":12734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12734,"column":0},"generated":{"line":12735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12735,"column":0},"generated":{"line":12736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12736,"column":0},"generated":{"line":12737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12737,"column":0},"generated":{"line":12738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12738,"column":0},"generated":{"line":12739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12739,"column":0},"generated":{"line":12740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12740,"column":0},"generated":{"line":12741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12741,"column":0},"generated":{"line":12742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12742,"column":0},"generated":{"line":12743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12743,"column":0},"generated":{"line":12744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12744,"column":0},"generated":{"line":12745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12745,"column":0},"generated":{"line":12746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12746,"column":0},"generated":{"line":12747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12747,"column":0},"generated":{"line":12748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12748,"column":0},"generated":{"line":12749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12749,"column":0},"generated":{"line":12750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12750,"column":0},"generated":{"line":12751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12751,"column":0},"generated":{"line":12752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12752,"column":0},"generated":{"line":12753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12753,"column":0},"generated":{"line":12754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12754,"column":0},"generated":{"line":12755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12755,"column":0},"generated":{"line":12756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12756,"column":0},"generated":{"line":12757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12757,"column":0},"generated":{"line":12758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12758,"column":0},"generated":{"line":12759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12759,"column":0},"generated":{"line":12760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12760,"column":0},"generated":{"line":12761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12761,"column":0},"generated":{"line":12762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12762,"column":0},"generated":{"line":12763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12763,"column":0},"generated":{"line":12764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12764,"column":0},"generated":{"line":12765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12765,"column":0},"generated":{"line":12766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12766,"column":0},"generated":{"line":12767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12767,"column":0},"generated":{"line":12768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12768,"column":0},"generated":{"line":12769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12769,"column":0},"generated":{"line":12770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12770,"column":0},"generated":{"line":12771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12771,"column":0},"generated":{"line":12772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12772,"column":0},"generated":{"line":12773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12773,"column":0},"generated":{"line":12774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12774,"column":0},"generated":{"line":12775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12775,"column":0},"generated":{"line":12776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12776,"column":0},"generated":{"line":12777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12777,"column":0},"generated":{"line":12778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12778,"column":0},"generated":{"line":12779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12779,"column":0},"generated":{"line":12780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12780,"column":0},"generated":{"line":12781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12781,"column":0},"generated":{"line":12782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12782,"column":0},"generated":{"line":12783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12783,"column":0},"generated":{"line":12784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12784,"column":0},"generated":{"line":12785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12785,"column":0},"generated":{"line":12786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12786,"column":0},"generated":{"line":12787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12787,"column":0},"generated":{"line":12788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12788,"column":0},"generated":{"line":12789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12789,"column":0},"generated":{"line":12790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12790,"column":0},"generated":{"line":12791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12791,"column":0},"generated":{"line":12792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12792,"column":0},"generated":{"line":12793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12793,"column":0},"generated":{"line":12794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12794,"column":0},"generated":{"line":12795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12795,"column":0},"generated":{"line":12796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12796,"column":0},"generated":{"line":12797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12797,"column":0},"generated":{"line":12798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12798,"column":0},"generated":{"line":12799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12799,"column":0},"generated":{"line":12800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12800,"column":0},"generated":{"line":12801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12801,"column":0},"generated":{"line":12802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12802,"column":0},"generated":{"line":12803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12803,"column":0},"generated":{"line":12804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12804,"column":0},"generated":{"line":12805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12805,"column":0},"generated":{"line":12806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12806,"column":0},"generated":{"line":12807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12807,"column":0},"generated":{"line":12808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12808,"column":0},"generated":{"line":12809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12809,"column":0},"generated":{"line":12810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12810,"column":0},"generated":{"line":12811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12811,"column":0},"generated":{"line":12812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12812,"column":0},"generated":{"line":12813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12813,"column":0},"generated":{"line":12814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12814,"column":0},"generated":{"line":12815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12815,"column":0},"generated":{"line":12816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12816,"column":0},"generated":{"line":12817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12817,"column":0},"generated":{"line":12818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12818,"column":0},"generated":{"line":12819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12819,"column":0},"generated":{"line":12820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12820,"column":0},"generated":{"line":12821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12821,"column":0},"generated":{"line":12822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12822,"column":0},"generated":{"line":12823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12823,"column":0},"generated":{"line":12824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12824,"column":0},"generated":{"line":12825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12825,"column":0},"generated":{"line":12826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12826,"column":0},"generated":{"line":12827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12827,"column":0},"generated":{"line":12828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12828,"column":0},"generated":{"line":12829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12829,"column":0},"generated":{"line":12830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12830,"column":0},"generated":{"line":12831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12831,"column":0},"generated":{"line":12832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12832,"column":0},"generated":{"line":12833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12833,"column":0},"generated":{"line":12834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12834,"column":0},"generated":{"line":12835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12835,"column":0},"generated":{"line":12836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12836,"column":0},"generated":{"line":12837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12837,"column":0},"generated":{"line":12838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12838,"column":0},"generated":{"line":12839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12839,"column":0},"generated":{"line":12840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12840,"column":0},"generated":{"line":12841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12841,"column":0},"generated":{"line":12842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12842,"column":0},"generated":{"line":12843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12843,"column":0},"generated":{"line":12844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12844,"column":0},"generated":{"line":12845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12845,"column":0},"generated":{"line":12846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12846,"column":0},"generated":{"line":12847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12847,"column":0},"generated":{"line":12848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12848,"column":0},"generated":{"line":12849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12849,"column":0},"generated":{"line":12850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12850,"column":0},"generated":{"line":12851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12851,"column":0},"generated":{"line":12852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12852,"column":0},"generated":{"line":12853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12853,"column":0},"generated":{"line":12854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12854,"column":0},"generated":{"line":12855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12855,"column":0},"generated":{"line":12856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12856,"column":0},"generated":{"line":12857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12857,"column":0},"generated":{"line":12858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12858,"column":0},"generated":{"line":12859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12859,"column":0},"generated":{"line":12860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12860,"column":0},"generated":{"line":12861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12861,"column":0},"generated":{"line":12862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12862,"column":0},"generated":{"line":12863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12863,"column":0},"generated":{"line":12864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12864,"column":0},"generated":{"line":12865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12865,"column":0},"generated":{"line":12866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12866,"column":0},"generated":{"line":12867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12867,"column":0},"generated":{"line":12868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12868,"column":0},"generated":{"line":12869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12869,"column":0},"generated":{"line":12870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12870,"column":0},"generated":{"line":12871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12871,"column":0},"generated":{"line":12872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12872,"column":0},"generated":{"line":12873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12873,"column":0},"generated":{"line":12874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12874,"column":0},"generated":{"line":12875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12875,"column":0},"generated":{"line":12876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12876,"column":0},"generated":{"line":12877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12877,"column":0},"generated":{"line":12878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12878,"column":0},"generated":{"line":12879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12879,"column":0},"generated":{"line":12880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12880,"column":0},"generated":{"line":12881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12881,"column":0},"generated":{"line":12882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12882,"column":0},"generated":{"line":12883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12883,"column":0},"generated":{"line":12884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12884,"column":0},"generated":{"line":12885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12885,"column":0},"generated":{"line":12886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12886,"column":0},"generated":{"line":12887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12887,"column":0},"generated":{"line":12888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12888,"column":0},"generated":{"line":12889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12889,"column":0},"generated":{"line":12890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12890,"column":0},"generated":{"line":12891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12891,"column":0},"generated":{"line":12892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12892,"column":0},"generated":{"line":12893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12893,"column":0},"generated":{"line":12894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12894,"column":0},"generated":{"line":12895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12895,"column":0},"generated":{"line":12896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12896,"column":0},"generated":{"line":12897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12897,"column":0},"generated":{"line":12898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12898,"column":0},"generated":{"line":12899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12899,"column":0},"generated":{"line":12900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12900,"column":0},"generated":{"line":12901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12901,"column":0},"generated":{"line":12902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12902,"column":0},"generated":{"line":12903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12903,"column":0},"generated":{"line":12904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12904,"column":0},"generated":{"line":12905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12905,"column":0},"generated":{"line":12906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12906,"column":0},"generated":{"line":12907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12907,"column":0},"generated":{"line":12908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12908,"column":0},"generated":{"line":12909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12909,"column":0},"generated":{"line":12910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12910,"column":0},"generated":{"line":12911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12911,"column":0},"generated":{"line":12912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12912,"column":0},"generated":{"line":12913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12913,"column":0},"generated":{"line":12914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12914,"column":0},"generated":{"line":12915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12915,"column":0},"generated":{"line":12916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12916,"column":0},"generated":{"line":12917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12917,"column":0},"generated":{"line":12918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12918,"column":0},"generated":{"line":12919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12919,"column":0},"generated":{"line":12920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12920,"column":0},"generated":{"line":12921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12921,"column":0},"generated":{"line":12922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12922,"column":0},"generated":{"line":12923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12923,"column":0},"generated":{"line":12924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12924,"column":0},"generated":{"line":12925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12925,"column":0},"generated":{"line":12926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12926,"column":0},"generated":{"line":12927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12927,"column":0},"generated":{"line":12928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12928,"column":0},"generated":{"line":12929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12929,"column":0},"generated":{"line":12930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12930,"column":0},"generated":{"line":12931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12931,"column":0},"generated":{"line":12932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12932,"column":0},"generated":{"line":12933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12933,"column":0},"generated":{"line":12934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12934,"column":0},"generated":{"line":12935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12935,"column":0},"generated":{"line":12936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12936,"column":0},"generated":{"line":12937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12937,"column":0},"generated":{"line":12938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12938,"column":0},"generated":{"line":12939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12939,"column":0},"generated":{"line":12940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12940,"column":0},"generated":{"line":12941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12941,"column":0},"generated":{"line":12942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12942,"column":0},"generated":{"line":12943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12943,"column":0},"generated":{"line":12944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12944,"column":0},"generated":{"line":12945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12945,"column":0},"generated":{"line":12946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12946,"column":0},"generated":{"line":12947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12947,"column":0},"generated":{"line":12948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12948,"column":0},"generated":{"line":12949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12949,"column":0},"generated":{"line":12950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12950,"column":0},"generated":{"line":12951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12951,"column":0},"generated":{"line":12952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12952,"column":0},"generated":{"line":12953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12953,"column":0},"generated":{"line":12954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12954,"column":0},"generated":{"line":12955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12955,"column":0},"generated":{"line":12956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12956,"column":0},"generated":{"line":12957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12957,"column":0},"generated":{"line":12958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12958,"column":0},"generated":{"line":12959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12959,"column":0},"generated":{"line":12960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12960,"column":0},"generated":{"line":12961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12961,"column":0},"generated":{"line":12962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12962,"column":0},"generated":{"line":12963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12963,"column":0},"generated":{"line":12964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12964,"column":0},"generated":{"line":12965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12965,"column":0},"generated":{"line":12966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12966,"column":0},"generated":{"line":12967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12967,"column":0},"generated":{"line":12968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12968,"column":0},"generated":{"line":12969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12969,"column":0},"generated":{"line":12970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12970,"column":0},"generated":{"line":12971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12971,"column":0},"generated":{"line":12972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12972,"column":0},"generated":{"line":12973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12973,"column":0},"generated":{"line":12974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12974,"column":0},"generated":{"line":12975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12975,"column":0},"generated":{"line":12976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12976,"column":0},"generated":{"line":12977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12977,"column":0},"generated":{"line":12978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12978,"column":0},"generated":{"line":12979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12979,"column":0},"generated":{"line":12980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12980,"column":0},"generated":{"line":12981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12981,"column":0},"generated":{"line":12982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12982,"column":0},"generated":{"line":12983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12983,"column":0},"generated":{"line":12984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12984,"column":0},"generated":{"line":12985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12985,"column":0},"generated":{"line":12986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12986,"column":0},"generated":{"line":12987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12987,"column":0},"generated":{"line":12988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12988,"column":0},"generated":{"line":12989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12989,"column":0},"generated":{"line":12990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12990,"column":0},"generated":{"line":12991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12991,"column":0},"generated":{"line":12992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12992,"column":0},"generated":{"line":12993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12993,"column":0},"generated":{"line":12994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12994,"column":0},"generated":{"line":12995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12995,"column":0},"generated":{"line":12996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12996,"column":0},"generated":{"line":12997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12997,"column":0},"generated":{"line":12998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12998,"column":0},"generated":{"line":12999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":12999,"column":0},"generated":{"line":13000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13000,"column":0},"generated":{"line":13001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13001,"column":0},"generated":{"line":13002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13002,"column":0},"generated":{"line":13003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13003,"column":0},"generated":{"line":13004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13004,"column":0},"generated":{"line":13005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13005,"column":0},"generated":{"line":13006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13006,"column":0},"generated":{"line":13007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13007,"column":0},"generated":{"line":13008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13008,"column":0},"generated":{"line":13009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13009,"column":0},"generated":{"line":13010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13010,"column":0},"generated":{"line":13011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13011,"column":0},"generated":{"line":13012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13012,"column":0},"generated":{"line":13013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13013,"column":0},"generated":{"line":13014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13014,"column":0},"generated":{"line":13015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13015,"column":0},"generated":{"line":13016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13016,"column":0},"generated":{"line":13017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13017,"column":0},"generated":{"line":13018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13018,"column":0},"generated":{"line":13019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13019,"column":0},"generated":{"line":13020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13020,"column":0},"generated":{"line":13021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13021,"column":0},"generated":{"line":13022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13022,"column":0},"generated":{"line":13023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13023,"column":0},"generated":{"line":13024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13024,"column":0},"generated":{"line":13025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13025,"column":0},"generated":{"line":13026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13026,"column":0},"generated":{"line":13027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13027,"column":0},"generated":{"line":13028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13028,"column":0},"generated":{"line":13029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13029,"column":0},"generated":{"line":13030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13030,"column":0},"generated":{"line":13031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13031,"column":0},"generated":{"line":13032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13032,"column":0},"generated":{"line":13033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13033,"column":0},"generated":{"line":13034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13034,"column":0},"generated":{"line":13035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13035,"column":0},"generated":{"line":13036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13036,"column":0},"generated":{"line":13037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13037,"column":0},"generated":{"line":13038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13038,"column":0},"generated":{"line":13039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13039,"column":0},"generated":{"line":13040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13040,"column":0},"generated":{"line":13041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13041,"column":0},"generated":{"line":13042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13042,"column":0},"generated":{"line":13043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13043,"column":0},"generated":{"line":13044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13044,"column":0},"generated":{"line":13045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13045,"column":0},"generated":{"line":13046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13046,"column":0},"generated":{"line":13047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13047,"column":0},"generated":{"line":13048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13048,"column":0},"generated":{"line":13049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13049,"column":0},"generated":{"line":13050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13050,"column":0},"generated":{"line":13051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13051,"column":0},"generated":{"line":13052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13052,"column":0},"generated":{"line":13053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13053,"column":0},"generated":{"line":13054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13054,"column":0},"generated":{"line":13055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13055,"column":0},"generated":{"line":13056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13056,"column":0},"generated":{"line":13057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13057,"column":0},"generated":{"line":13058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13058,"column":0},"generated":{"line":13059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13059,"column":0},"generated":{"line":13060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13060,"column":0},"generated":{"line":13061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13061,"column":0},"generated":{"line":13062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13062,"column":0},"generated":{"line":13063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13063,"column":0},"generated":{"line":13064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13064,"column":0},"generated":{"line":13065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13065,"column":0},"generated":{"line":13066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13066,"column":0},"generated":{"line":13067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13067,"column":0},"generated":{"line":13068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13068,"column":0},"generated":{"line":13069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13069,"column":0},"generated":{"line":13070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13070,"column":0},"generated":{"line":13071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13071,"column":0},"generated":{"line":13072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13072,"column":0},"generated":{"line":13073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13073,"column":0},"generated":{"line":13074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13074,"column":0},"generated":{"line":13075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13075,"column":0},"generated":{"line":13076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13076,"column":0},"generated":{"line":13077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13077,"column":0},"generated":{"line":13078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13078,"column":0},"generated":{"line":13079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13079,"column":0},"generated":{"line":13080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13080,"column":0},"generated":{"line":13081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13081,"column":0},"generated":{"line":13082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13082,"column":0},"generated":{"line":13083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13083,"column":0},"generated":{"line":13084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13084,"column":0},"generated":{"line":13085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13085,"column":0},"generated":{"line":13086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13086,"column":0},"generated":{"line":13087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13087,"column":0},"generated":{"line":13088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13088,"column":0},"generated":{"line":13089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13089,"column":0},"generated":{"line":13090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13090,"column":0},"generated":{"line":13091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13091,"column":0},"generated":{"line":13092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13092,"column":0},"generated":{"line":13093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13093,"column":0},"generated":{"line":13094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13094,"column":0},"generated":{"line":13095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13095,"column":0},"generated":{"line":13096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13096,"column":0},"generated":{"line":13097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13097,"column":0},"generated":{"line":13098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13098,"column":0},"generated":{"line":13099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13099,"column":0},"generated":{"line":13100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13100,"column":0},"generated":{"line":13101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13101,"column":0},"generated":{"line":13102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13102,"column":0},"generated":{"line":13103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13103,"column":0},"generated":{"line":13104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13104,"column":0},"generated":{"line":13105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13105,"column":0},"generated":{"line":13106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13106,"column":0},"generated":{"line":13107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13107,"column":0},"generated":{"line":13108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13108,"column":0},"generated":{"line":13109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13109,"column":0},"generated":{"line":13110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13110,"column":0},"generated":{"line":13111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13111,"column":0},"generated":{"line":13112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13112,"column":0},"generated":{"line":13113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13113,"column":0},"generated":{"line":13114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13114,"column":0},"generated":{"line":13115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13115,"column":0},"generated":{"line":13116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13116,"column":0},"generated":{"line":13117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13117,"column":0},"generated":{"line":13118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13118,"column":0},"generated":{"line":13119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13119,"column":0},"generated":{"line":13120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13120,"column":0},"generated":{"line":13121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13121,"column":0},"generated":{"line":13122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13122,"column":0},"generated":{"line":13123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13123,"column":0},"generated":{"line":13124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13124,"column":0},"generated":{"line":13125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13125,"column":0},"generated":{"line":13126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13126,"column":0},"generated":{"line":13127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13127,"column":0},"generated":{"line":13128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13128,"column":0},"generated":{"line":13129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13129,"column":0},"generated":{"line":13130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13130,"column":0},"generated":{"line":13131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13131,"column":0},"generated":{"line":13132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13132,"column":0},"generated":{"line":13133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13133,"column":0},"generated":{"line":13134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13134,"column":0},"generated":{"line":13135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13135,"column":0},"generated":{"line":13136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13136,"column":0},"generated":{"line":13137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13137,"column":0},"generated":{"line":13138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13138,"column":0},"generated":{"line":13139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13139,"column":0},"generated":{"line":13140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13140,"column":0},"generated":{"line":13141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13141,"column":0},"generated":{"line":13142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13142,"column":0},"generated":{"line":13143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13143,"column":0},"generated":{"line":13144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13144,"column":0},"generated":{"line":13145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13145,"column":0},"generated":{"line":13146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13146,"column":0},"generated":{"line":13147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13147,"column":0},"generated":{"line":13148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13148,"column":0},"generated":{"line":13149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13149,"column":0},"generated":{"line":13150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13150,"column":0},"generated":{"line":13151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13151,"column":0},"generated":{"line":13152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13152,"column":0},"generated":{"line":13153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13153,"column":0},"generated":{"line":13154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13154,"column":0},"generated":{"line":13155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13155,"column":0},"generated":{"line":13156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13156,"column":0},"generated":{"line":13157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13157,"column":0},"generated":{"line":13158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13158,"column":0},"generated":{"line":13159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13159,"column":0},"generated":{"line":13160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13160,"column":0},"generated":{"line":13161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13161,"column":0},"generated":{"line":13162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13162,"column":0},"generated":{"line":13163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13163,"column":0},"generated":{"line":13164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13164,"column":0},"generated":{"line":13165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13165,"column":0},"generated":{"line":13166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13166,"column":0},"generated":{"line":13167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13167,"column":0},"generated":{"line":13168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13168,"column":0},"generated":{"line":13169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13169,"column":0},"generated":{"line":13170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13170,"column":0},"generated":{"line":13171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13171,"column":0},"generated":{"line":13172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13172,"column":0},"generated":{"line":13173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13173,"column":0},"generated":{"line":13174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13174,"column":0},"generated":{"line":13175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13175,"column":0},"generated":{"line":13176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13176,"column":0},"generated":{"line":13177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13177,"column":0},"generated":{"line":13178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13178,"column":0},"generated":{"line":13179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13179,"column":0},"generated":{"line":13180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13180,"column":0},"generated":{"line":13181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13181,"column":0},"generated":{"line":13182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13182,"column":0},"generated":{"line":13183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13183,"column":0},"generated":{"line":13184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13184,"column":0},"generated":{"line":13185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13185,"column":0},"generated":{"line":13186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13186,"column":0},"generated":{"line":13187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13187,"column":0},"generated":{"line":13188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13188,"column":0},"generated":{"line":13189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13189,"column":0},"generated":{"line":13190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13190,"column":0},"generated":{"line":13191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13191,"column":0},"generated":{"line":13192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13192,"column":0},"generated":{"line":13193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13193,"column":0},"generated":{"line":13194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13194,"column":0},"generated":{"line":13195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13195,"column":0},"generated":{"line":13196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13196,"column":0},"generated":{"line":13197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13197,"column":0},"generated":{"line":13198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13198,"column":0},"generated":{"line":13199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13199,"column":0},"generated":{"line":13200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13200,"column":0},"generated":{"line":13201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13201,"column":0},"generated":{"line":13202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13202,"column":0},"generated":{"line":13203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13203,"column":0},"generated":{"line":13204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13204,"column":0},"generated":{"line":13205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13205,"column":0},"generated":{"line":13206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13206,"column":0},"generated":{"line":13207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13207,"column":0},"generated":{"line":13208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13208,"column":0},"generated":{"line":13209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13209,"column":0},"generated":{"line":13210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13210,"column":0},"generated":{"line":13211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13211,"column":0},"generated":{"line":13212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13212,"column":0},"generated":{"line":13213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13213,"column":0},"generated":{"line":13214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13214,"column":0},"generated":{"line":13215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13215,"column":0},"generated":{"line":13216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13216,"column":0},"generated":{"line":13217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13217,"column":0},"generated":{"line":13218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13218,"column":0},"generated":{"line":13219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13219,"column":0},"generated":{"line":13220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13220,"column":0},"generated":{"line":13221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13221,"column":0},"generated":{"line":13222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13222,"column":0},"generated":{"line":13223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13223,"column":0},"generated":{"line":13224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13224,"column":0},"generated":{"line":13225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13225,"column":0},"generated":{"line":13226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13226,"column":0},"generated":{"line":13227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13227,"column":0},"generated":{"line":13228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13228,"column":0},"generated":{"line":13229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13229,"column":0},"generated":{"line":13230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13230,"column":0},"generated":{"line":13231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13231,"column":0},"generated":{"line":13232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13232,"column":0},"generated":{"line":13233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13233,"column":0},"generated":{"line":13234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13234,"column":0},"generated":{"line":13235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13235,"column":0},"generated":{"line":13236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13236,"column":0},"generated":{"line":13237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13237,"column":0},"generated":{"line":13238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13238,"column":0},"generated":{"line":13239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13239,"column":0},"generated":{"line":13240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13240,"column":0},"generated":{"line":13241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13241,"column":0},"generated":{"line":13242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13242,"column":0},"generated":{"line":13243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13243,"column":0},"generated":{"line":13244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13244,"column":0},"generated":{"line":13245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13245,"column":0},"generated":{"line":13246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13246,"column":0},"generated":{"line":13247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13247,"column":0},"generated":{"line":13248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13248,"column":0},"generated":{"line":13249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13249,"column":0},"generated":{"line":13250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13250,"column":0},"generated":{"line":13251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13251,"column":0},"generated":{"line":13252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13252,"column":0},"generated":{"line":13253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13253,"column":0},"generated":{"line":13254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13254,"column":0},"generated":{"line":13255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13255,"column":0},"generated":{"line":13256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13256,"column":0},"generated":{"line":13257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13257,"column":0},"generated":{"line":13258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13258,"column":0},"generated":{"line":13259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13259,"column":0},"generated":{"line":13260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13260,"column":0},"generated":{"line":13261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13261,"column":0},"generated":{"line":13262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13262,"column":0},"generated":{"line":13263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13263,"column":0},"generated":{"line":13264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13264,"column":0},"generated":{"line":13265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13265,"column":0},"generated":{"line":13266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13266,"column":0},"generated":{"line":13267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13267,"column":0},"generated":{"line":13268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13268,"column":0},"generated":{"line":13269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13269,"column":0},"generated":{"line":13270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13270,"column":0},"generated":{"line":13271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13271,"column":0},"generated":{"line":13272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13272,"column":0},"generated":{"line":13273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13273,"column":0},"generated":{"line":13274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13274,"column":0},"generated":{"line":13275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13275,"column":0},"generated":{"line":13276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13276,"column":0},"generated":{"line":13277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13277,"column":0},"generated":{"line":13278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13278,"column":0},"generated":{"line":13279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13279,"column":0},"generated":{"line":13280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13280,"column":0},"generated":{"line":13281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13281,"column":0},"generated":{"line":13282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13282,"column":0},"generated":{"line":13283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13283,"column":0},"generated":{"line":13284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13284,"column":0},"generated":{"line":13285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13285,"column":0},"generated":{"line":13286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13286,"column":0},"generated":{"line":13287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13287,"column":0},"generated":{"line":13288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13288,"column":0},"generated":{"line":13289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13289,"column":0},"generated":{"line":13290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13290,"column":0},"generated":{"line":13291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13291,"column":0},"generated":{"line":13292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13292,"column":0},"generated":{"line":13293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13293,"column":0},"generated":{"line":13294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13294,"column":0},"generated":{"line":13295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13295,"column":0},"generated":{"line":13296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13296,"column":0},"generated":{"line":13297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13297,"column":0},"generated":{"line":13298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13298,"column":0},"generated":{"line":13299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13299,"column":0},"generated":{"line":13300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13300,"column":0},"generated":{"line":13301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13301,"column":0},"generated":{"line":13302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13302,"column":0},"generated":{"line":13303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13303,"column":0},"generated":{"line":13304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13304,"column":0},"generated":{"line":13305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13305,"column":0},"generated":{"line":13306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13306,"column":0},"generated":{"line":13307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13307,"column":0},"generated":{"line":13308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13308,"column":0},"generated":{"line":13309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13309,"column":0},"generated":{"line":13310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13310,"column":0},"generated":{"line":13311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13311,"column":0},"generated":{"line":13312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13312,"column":0},"generated":{"line":13313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13313,"column":0},"generated":{"line":13314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13314,"column":0},"generated":{"line":13315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13315,"column":0},"generated":{"line":13316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13316,"column":0},"generated":{"line":13317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13317,"column":0},"generated":{"line":13318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13318,"column":0},"generated":{"line":13319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13319,"column":0},"generated":{"line":13320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13320,"column":0},"generated":{"line":13321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13321,"column":0},"generated":{"line":13322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13322,"column":0},"generated":{"line":13323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13323,"column":0},"generated":{"line":13324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13324,"column":0},"generated":{"line":13325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13325,"column":0},"generated":{"line":13326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13326,"column":0},"generated":{"line":13327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13327,"column":0},"generated":{"line":13328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13328,"column":0},"generated":{"line":13329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13329,"column":0},"generated":{"line":13330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13330,"column":0},"generated":{"line":13331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13331,"column":0},"generated":{"line":13332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13332,"column":0},"generated":{"line":13333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13333,"column":0},"generated":{"line":13334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13334,"column":0},"generated":{"line":13335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13335,"column":0},"generated":{"line":13336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13336,"column":0},"generated":{"line":13337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13337,"column":0},"generated":{"line":13338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13338,"column":0},"generated":{"line":13339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13339,"column":0},"generated":{"line":13340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13340,"column":0},"generated":{"line":13341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13341,"column":0},"generated":{"line":13342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13342,"column":0},"generated":{"line":13343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13343,"column":0},"generated":{"line":13344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13344,"column":0},"generated":{"line":13345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13345,"column":0},"generated":{"line":13346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13346,"column":0},"generated":{"line":13347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13347,"column":0},"generated":{"line":13348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13348,"column":0},"generated":{"line":13349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13349,"column":0},"generated":{"line":13350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13350,"column":0},"generated":{"line":13351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13351,"column":0},"generated":{"line":13352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13352,"column":0},"generated":{"line":13353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13353,"column":0},"generated":{"line":13354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13354,"column":0},"generated":{"line":13355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13355,"column":0},"generated":{"line":13356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13356,"column":0},"generated":{"line":13357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13357,"column":0},"generated":{"line":13358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13358,"column":0},"generated":{"line":13359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13359,"column":0},"generated":{"line":13360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13360,"column":0},"generated":{"line":13361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13361,"column":0},"generated":{"line":13362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13362,"column":0},"generated":{"line":13363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13363,"column":0},"generated":{"line":13364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13364,"column":0},"generated":{"line":13365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13365,"column":0},"generated":{"line":13366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13366,"column":0},"generated":{"line":13367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13367,"column":0},"generated":{"line":13368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13368,"column":0},"generated":{"line":13369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13369,"column":0},"generated":{"line":13370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13370,"column":0},"generated":{"line":13371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13371,"column":0},"generated":{"line":13372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13372,"column":0},"generated":{"line":13373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13373,"column":0},"generated":{"line":13374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13374,"column":0},"generated":{"line":13375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13375,"column":0},"generated":{"line":13376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13376,"column":0},"generated":{"line":13377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13377,"column":0},"generated":{"line":13378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13378,"column":0},"generated":{"line":13379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13379,"column":0},"generated":{"line":13380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13380,"column":0},"generated":{"line":13381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13381,"column":0},"generated":{"line":13382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13382,"column":0},"generated":{"line":13383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13383,"column":0},"generated":{"line":13384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13384,"column":0},"generated":{"line":13385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13385,"column":0},"generated":{"line":13386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13386,"column":0},"generated":{"line":13387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13387,"column":0},"generated":{"line":13388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13388,"column":0},"generated":{"line":13389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13389,"column":0},"generated":{"line":13390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13390,"column":0},"generated":{"line":13391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13391,"column":0},"generated":{"line":13392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13392,"column":0},"generated":{"line":13393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13393,"column":0},"generated":{"line":13394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13394,"column":0},"generated":{"line":13395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13395,"column":0},"generated":{"line":13396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13396,"column":0},"generated":{"line":13397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13397,"column":0},"generated":{"line":13398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13398,"column":0},"generated":{"line":13399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13399,"column":0},"generated":{"line":13400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13400,"column":0},"generated":{"line":13401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13401,"column":0},"generated":{"line":13402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13402,"column":0},"generated":{"line":13403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13403,"column":0},"generated":{"line":13404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13404,"column":0},"generated":{"line":13405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13405,"column":0},"generated":{"line":13406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13406,"column":0},"generated":{"line":13407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13407,"column":0},"generated":{"line":13408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13408,"column":0},"generated":{"line":13409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13409,"column":0},"generated":{"line":13410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13410,"column":0},"generated":{"line":13411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13411,"column":0},"generated":{"line":13412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13412,"column":0},"generated":{"line":13413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13413,"column":0},"generated":{"line":13414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13414,"column":0},"generated":{"line":13415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13415,"column":0},"generated":{"line":13416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13416,"column":0},"generated":{"line":13417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13417,"column":0},"generated":{"line":13418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13418,"column":0},"generated":{"line":13419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13419,"column":0},"generated":{"line":13420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13420,"column":0},"generated":{"line":13421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13421,"column":0},"generated":{"line":13422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13422,"column":0},"generated":{"line":13423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13423,"column":0},"generated":{"line":13424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13424,"column":0},"generated":{"line":13425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13425,"column":0},"generated":{"line":13426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13426,"column":0},"generated":{"line":13427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13427,"column":0},"generated":{"line":13428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13428,"column":0},"generated":{"line":13429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13429,"column":0},"generated":{"line":13430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13430,"column":0},"generated":{"line":13431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13431,"column":0},"generated":{"line":13432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13432,"column":0},"generated":{"line":13433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13433,"column":0},"generated":{"line":13434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13434,"column":0},"generated":{"line":13435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13435,"column":0},"generated":{"line":13436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13436,"column":0},"generated":{"line":13437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13437,"column":0},"generated":{"line":13438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13438,"column":0},"generated":{"line":13439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13439,"column":0},"generated":{"line":13440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13440,"column":0},"generated":{"line":13441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13441,"column":0},"generated":{"line":13442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13442,"column":0},"generated":{"line":13443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13443,"column":0},"generated":{"line":13444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13444,"column":0},"generated":{"line":13445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13445,"column":0},"generated":{"line":13446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13446,"column":0},"generated":{"line":13447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13447,"column":0},"generated":{"line":13448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13448,"column":0},"generated":{"line":13449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13449,"column":0},"generated":{"line":13450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13450,"column":0},"generated":{"line":13451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13451,"column":0},"generated":{"line":13452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13452,"column":0},"generated":{"line":13453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13453,"column":0},"generated":{"line":13454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13454,"column":0},"generated":{"line":13455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13455,"column":0},"generated":{"line":13456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13456,"column":0},"generated":{"line":13457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13457,"column":0},"generated":{"line":13458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13458,"column":0},"generated":{"line":13459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13459,"column":0},"generated":{"line":13460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13460,"column":0},"generated":{"line":13461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13461,"column":0},"generated":{"line":13462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13462,"column":0},"generated":{"line":13463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13463,"column":0},"generated":{"line":13464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13464,"column":0},"generated":{"line":13465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13465,"column":0},"generated":{"line":13466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13466,"column":0},"generated":{"line":13467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13467,"column":0},"generated":{"line":13468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13468,"column":0},"generated":{"line":13469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13469,"column":0},"generated":{"line":13470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13470,"column":0},"generated":{"line":13471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13471,"column":0},"generated":{"line":13472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13472,"column":0},"generated":{"line":13473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13473,"column":0},"generated":{"line":13474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13474,"column":0},"generated":{"line":13475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13475,"column":0},"generated":{"line":13476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13476,"column":0},"generated":{"line":13477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13477,"column":0},"generated":{"line":13478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13478,"column":0},"generated":{"line":13479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13479,"column":0},"generated":{"line":13480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13480,"column":0},"generated":{"line":13481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13481,"column":0},"generated":{"line":13482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13482,"column":0},"generated":{"line":13483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13483,"column":0},"generated":{"line":13484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13484,"column":0},"generated":{"line":13485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13485,"column":0},"generated":{"line":13486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13486,"column":0},"generated":{"line":13487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13487,"column":0},"generated":{"line":13488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13488,"column":0},"generated":{"line":13489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13489,"column":0},"generated":{"line":13490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13490,"column":0},"generated":{"line":13491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13491,"column":0},"generated":{"line":13492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13492,"column":0},"generated":{"line":13493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13493,"column":0},"generated":{"line":13494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13494,"column":0},"generated":{"line":13495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13495,"column":0},"generated":{"line":13496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13496,"column":0},"generated":{"line":13497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13497,"column":0},"generated":{"line":13498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13498,"column":0},"generated":{"line":13499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13499,"column":0},"generated":{"line":13500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13500,"column":0},"generated":{"line":13501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13501,"column":0},"generated":{"line":13502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13502,"column":0},"generated":{"line":13503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13503,"column":0},"generated":{"line":13504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13504,"column":0},"generated":{"line":13505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13505,"column":0},"generated":{"line":13506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13506,"column":0},"generated":{"line":13507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13507,"column":0},"generated":{"line":13508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13508,"column":0},"generated":{"line":13509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13509,"column":0},"generated":{"line":13510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13510,"column":0},"generated":{"line":13511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13511,"column":0},"generated":{"line":13512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13512,"column":0},"generated":{"line":13513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13513,"column":0},"generated":{"line":13514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13514,"column":0},"generated":{"line":13515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13515,"column":0},"generated":{"line":13516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13516,"column":0},"generated":{"line":13517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13517,"column":0},"generated":{"line":13518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13518,"column":0},"generated":{"line":13519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13519,"column":0},"generated":{"line":13520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13520,"column":0},"generated":{"line":13521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13521,"column":0},"generated":{"line":13522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13522,"column":0},"generated":{"line":13523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13523,"column":0},"generated":{"line":13524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13524,"column":0},"generated":{"line":13525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13525,"column":0},"generated":{"line":13526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13526,"column":0},"generated":{"line":13527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13527,"column":0},"generated":{"line":13528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13528,"column":0},"generated":{"line":13529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13529,"column":0},"generated":{"line":13530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13530,"column":0},"generated":{"line":13531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13531,"column":0},"generated":{"line":13532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13532,"column":0},"generated":{"line":13533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13533,"column":0},"generated":{"line":13534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13534,"column":0},"generated":{"line":13535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13535,"column":0},"generated":{"line":13536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13536,"column":0},"generated":{"line":13537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13537,"column":0},"generated":{"line":13538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13538,"column":0},"generated":{"line":13539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13539,"column":0},"generated":{"line":13540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13540,"column":0},"generated":{"line":13541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13541,"column":0},"generated":{"line":13542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13542,"column":0},"generated":{"line":13543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13543,"column":0},"generated":{"line":13544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13544,"column":0},"generated":{"line":13545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13545,"column":0},"generated":{"line":13546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13546,"column":0},"generated":{"line":13547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13547,"column":0},"generated":{"line":13548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13548,"column":0},"generated":{"line":13549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13549,"column":0},"generated":{"line":13550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13550,"column":0},"generated":{"line":13551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13551,"column":0},"generated":{"line":13552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13552,"column":0},"generated":{"line":13553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13553,"column":0},"generated":{"line":13554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13554,"column":0},"generated":{"line":13555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13555,"column":0},"generated":{"line":13556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13556,"column":0},"generated":{"line":13557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13557,"column":0},"generated":{"line":13558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13558,"column":0},"generated":{"line":13559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13559,"column":0},"generated":{"line":13560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13560,"column":0},"generated":{"line":13561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13561,"column":0},"generated":{"line":13562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13562,"column":0},"generated":{"line":13563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13563,"column":0},"generated":{"line":13564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13564,"column":0},"generated":{"line":13565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13565,"column":0},"generated":{"line":13566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13566,"column":0},"generated":{"line":13567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13567,"column":0},"generated":{"line":13568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13568,"column":0},"generated":{"line":13569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13569,"column":0},"generated":{"line":13570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13570,"column":0},"generated":{"line":13571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13571,"column":0},"generated":{"line":13572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13572,"column":0},"generated":{"line":13573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13573,"column":0},"generated":{"line":13574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13574,"column":0},"generated":{"line":13575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13575,"column":0},"generated":{"line":13576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13576,"column":0},"generated":{"line":13577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13577,"column":0},"generated":{"line":13578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13578,"column":0},"generated":{"line":13579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13579,"column":0},"generated":{"line":13580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13580,"column":0},"generated":{"line":13581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13581,"column":0},"generated":{"line":13582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13582,"column":0},"generated":{"line":13583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13583,"column":0},"generated":{"line":13584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13584,"column":0},"generated":{"line":13585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13585,"column":0},"generated":{"line":13586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13586,"column":0},"generated":{"line":13587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13587,"column":0},"generated":{"line":13588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13588,"column":0},"generated":{"line":13589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13589,"column":0},"generated":{"line":13590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13590,"column":0},"generated":{"line":13591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13591,"column":0},"generated":{"line":13592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13592,"column":0},"generated":{"line":13593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13593,"column":0},"generated":{"line":13594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13594,"column":0},"generated":{"line":13595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13595,"column":0},"generated":{"line":13596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13596,"column":0},"generated":{"line":13597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13597,"column":0},"generated":{"line":13598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13598,"column":0},"generated":{"line":13599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13599,"column":0},"generated":{"line":13600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13600,"column":0},"generated":{"line":13601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13601,"column":0},"generated":{"line":13602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13602,"column":0},"generated":{"line":13603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13603,"column":0},"generated":{"line":13604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13604,"column":0},"generated":{"line":13605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13605,"column":0},"generated":{"line":13606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13606,"column":0},"generated":{"line":13607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13607,"column":0},"generated":{"line":13608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13608,"column":0},"generated":{"line":13609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13609,"column":0},"generated":{"line":13610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13610,"column":0},"generated":{"line":13611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13611,"column":0},"generated":{"line":13612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13612,"column":0},"generated":{"line":13613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13613,"column":0},"generated":{"line":13614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13614,"column":0},"generated":{"line":13615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13615,"column":0},"generated":{"line":13616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13616,"column":0},"generated":{"line":13617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13617,"column":0},"generated":{"line":13618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13618,"column":0},"generated":{"line":13619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13619,"column":0},"generated":{"line":13620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13620,"column":0},"generated":{"line":13621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13621,"column":0},"generated":{"line":13622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13622,"column":0},"generated":{"line":13623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13623,"column":0},"generated":{"line":13624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13624,"column":0},"generated":{"line":13625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13625,"column":0},"generated":{"line":13626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13626,"column":0},"generated":{"line":13627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13627,"column":0},"generated":{"line":13628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13628,"column":0},"generated":{"line":13629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13629,"column":0},"generated":{"line":13630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13630,"column":0},"generated":{"line":13631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13631,"column":0},"generated":{"line":13632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13632,"column":0},"generated":{"line":13633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13633,"column":0},"generated":{"line":13634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13634,"column":0},"generated":{"line":13635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13635,"column":0},"generated":{"line":13636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13636,"column":0},"generated":{"line":13637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13637,"column":0},"generated":{"line":13638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13638,"column":0},"generated":{"line":13639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13639,"column":0},"generated":{"line":13640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13640,"column":0},"generated":{"line":13641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13641,"column":0},"generated":{"line":13642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13642,"column":0},"generated":{"line":13643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13643,"column":0},"generated":{"line":13644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13644,"column":0},"generated":{"line":13645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13645,"column":0},"generated":{"line":13646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13646,"column":0},"generated":{"line":13647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13647,"column":0},"generated":{"line":13648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13648,"column":0},"generated":{"line":13649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13649,"column":0},"generated":{"line":13650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13650,"column":0},"generated":{"line":13651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13651,"column":0},"generated":{"line":13652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13652,"column":0},"generated":{"line":13653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13653,"column":0},"generated":{"line":13654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13654,"column":0},"generated":{"line":13655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13655,"column":0},"generated":{"line":13656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13656,"column":0},"generated":{"line":13657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13657,"column":0},"generated":{"line":13658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13658,"column":0},"generated":{"line":13659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13659,"column":0},"generated":{"line":13660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13660,"column":0},"generated":{"line":13661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13661,"column":0},"generated":{"line":13662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13662,"column":0},"generated":{"line":13663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13663,"column":0},"generated":{"line":13664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13664,"column":0},"generated":{"line":13665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13665,"column":0},"generated":{"line":13666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13666,"column":0},"generated":{"line":13667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13667,"column":0},"generated":{"line":13668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13668,"column":0},"generated":{"line":13669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13669,"column":0},"generated":{"line":13670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13670,"column":0},"generated":{"line":13671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13671,"column":0},"generated":{"line":13672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13672,"column":0},"generated":{"line":13673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13673,"column":0},"generated":{"line":13674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13674,"column":0},"generated":{"line":13675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13675,"column":0},"generated":{"line":13676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13676,"column":0},"generated":{"line":13677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13677,"column":0},"generated":{"line":13678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13678,"column":0},"generated":{"line":13679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13679,"column":0},"generated":{"line":13680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13680,"column":0},"generated":{"line":13681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13681,"column":0},"generated":{"line":13682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13682,"column":0},"generated":{"line":13683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13683,"column":0},"generated":{"line":13684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13684,"column":0},"generated":{"line":13685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13685,"column":0},"generated":{"line":13686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13686,"column":0},"generated":{"line":13687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13687,"column":0},"generated":{"line":13688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13688,"column":0},"generated":{"line":13689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13689,"column":0},"generated":{"line":13690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13690,"column":0},"generated":{"line":13691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13691,"column":0},"generated":{"line":13692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13692,"column":0},"generated":{"line":13693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13693,"column":0},"generated":{"line":13694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13694,"column":0},"generated":{"line":13695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13695,"column":0},"generated":{"line":13696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13696,"column":0},"generated":{"line":13697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13697,"column":0},"generated":{"line":13698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13698,"column":0},"generated":{"line":13699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13699,"column":0},"generated":{"line":13700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13700,"column":0},"generated":{"line":13701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13701,"column":0},"generated":{"line":13702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13702,"column":0},"generated":{"line":13703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13703,"column":0},"generated":{"line":13704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13704,"column":0},"generated":{"line":13705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13705,"column":0},"generated":{"line":13706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13706,"column":0},"generated":{"line":13707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13707,"column":0},"generated":{"line":13708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13708,"column":0},"generated":{"line":13709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13709,"column":0},"generated":{"line":13710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13710,"column":0},"generated":{"line":13711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13711,"column":0},"generated":{"line":13712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13712,"column":0},"generated":{"line":13713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13713,"column":0},"generated":{"line":13714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13714,"column":0},"generated":{"line":13715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13715,"column":0},"generated":{"line":13716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13716,"column":0},"generated":{"line":13717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13717,"column":0},"generated":{"line":13718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13718,"column":0},"generated":{"line":13719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13719,"column":0},"generated":{"line":13720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13720,"column":0},"generated":{"line":13721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13721,"column":0},"generated":{"line":13722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13722,"column":0},"generated":{"line":13723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13723,"column":0},"generated":{"line":13724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13724,"column":0},"generated":{"line":13725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13725,"column":0},"generated":{"line":13726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13726,"column":0},"generated":{"line":13727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13727,"column":0},"generated":{"line":13728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13728,"column":0},"generated":{"line":13729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13729,"column":0},"generated":{"line":13730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13730,"column":0},"generated":{"line":13731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13731,"column":0},"generated":{"line":13732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13732,"column":0},"generated":{"line":13733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13733,"column":0},"generated":{"line":13734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13734,"column":0},"generated":{"line":13735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13735,"column":0},"generated":{"line":13736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13736,"column":0},"generated":{"line":13737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13737,"column":0},"generated":{"line":13738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13738,"column":0},"generated":{"line":13739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13739,"column":0},"generated":{"line":13740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13740,"column":0},"generated":{"line":13741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13741,"column":0},"generated":{"line":13742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13742,"column":0},"generated":{"line":13743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13743,"column":0},"generated":{"line":13744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13744,"column":0},"generated":{"line":13745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13745,"column":0},"generated":{"line":13746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13746,"column":0},"generated":{"line":13747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13747,"column":0},"generated":{"line":13748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13748,"column":0},"generated":{"line":13749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13749,"column":0},"generated":{"line":13750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13750,"column":0},"generated":{"line":13751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13751,"column":0},"generated":{"line":13752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13752,"column":0},"generated":{"line":13753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13753,"column":0},"generated":{"line":13754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13754,"column":0},"generated":{"line":13755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13755,"column":0},"generated":{"line":13756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13756,"column":0},"generated":{"line":13757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13757,"column":0},"generated":{"line":13758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13758,"column":0},"generated":{"line":13759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13759,"column":0},"generated":{"line":13760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13760,"column":0},"generated":{"line":13761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13761,"column":0},"generated":{"line":13762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13762,"column":0},"generated":{"line":13763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13763,"column":0},"generated":{"line":13764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13764,"column":0},"generated":{"line":13765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13765,"column":0},"generated":{"line":13766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13766,"column":0},"generated":{"line":13767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13767,"column":0},"generated":{"line":13768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13768,"column":0},"generated":{"line":13769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13769,"column":0},"generated":{"line":13770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13770,"column":0},"generated":{"line":13771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13771,"column":0},"generated":{"line":13772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13772,"column":0},"generated":{"line":13773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13773,"column":0},"generated":{"line":13774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13774,"column":0},"generated":{"line":13775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13775,"column":0},"generated":{"line":13776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13776,"column":0},"generated":{"line":13777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13777,"column":0},"generated":{"line":13778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13778,"column":0},"generated":{"line":13779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13779,"column":0},"generated":{"line":13780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13780,"column":0},"generated":{"line":13781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13781,"column":0},"generated":{"line":13782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13782,"column":0},"generated":{"line":13783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13783,"column":0},"generated":{"line":13784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13784,"column":0},"generated":{"line":13785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13785,"column":0},"generated":{"line":13786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13786,"column":0},"generated":{"line":13787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13787,"column":0},"generated":{"line":13788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13788,"column":0},"generated":{"line":13789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13789,"column":0},"generated":{"line":13790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13790,"column":0},"generated":{"line":13791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13791,"column":0},"generated":{"line":13792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13792,"column":0},"generated":{"line":13793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13793,"column":0},"generated":{"line":13794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13794,"column":0},"generated":{"line":13795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13795,"column":0},"generated":{"line":13796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13796,"column":0},"generated":{"line":13797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13797,"column":0},"generated":{"line":13798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13798,"column":0},"generated":{"line":13799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13799,"column":0},"generated":{"line":13800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13800,"column":0},"generated":{"line":13801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13801,"column":0},"generated":{"line":13802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13802,"column":0},"generated":{"line":13803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13803,"column":0},"generated":{"line":13804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13804,"column":0},"generated":{"line":13805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13805,"column":0},"generated":{"line":13806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13806,"column":0},"generated":{"line":13807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13807,"column":0},"generated":{"line":13808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13808,"column":0},"generated":{"line":13809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13809,"column":0},"generated":{"line":13810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13810,"column":0},"generated":{"line":13811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13811,"column":0},"generated":{"line":13812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13812,"column":0},"generated":{"line":13813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13813,"column":0},"generated":{"line":13814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13814,"column":0},"generated":{"line":13815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13815,"column":0},"generated":{"line":13816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13816,"column":0},"generated":{"line":13817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13817,"column":0},"generated":{"line":13818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13818,"column":0},"generated":{"line":13819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13819,"column":0},"generated":{"line":13820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13820,"column":0},"generated":{"line":13821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13821,"column":0},"generated":{"line":13822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13822,"column":0},"generated":{"line":13823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13823,"column":0},"generated":{"line":13824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13824,"column":0},"generated":{"line":13825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13825,"column":0},"generated":{"line":13826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13826,"column":0},"generated":{"line":13827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13827,"column":0},"generated":{"line":13828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13828,"column":0},"generated":{"line":13829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13829,"column":0},"generated":{"line":13830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13830,"column":0},"generated":{"line":13831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13831,"column":0},"generated":{"line":13832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13832,"column":0},"generated":{"line":13833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13833,"column":0},"generated":{"line":13834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13834,"column":0},"generated":{"line":13835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13835,"column":0},"generated":{"line":13836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13836,"column":0},"generated":{"line":13837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13837,"column":0},"generated":{"line":13838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13838,"column":0},"generated":{"line":13839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13839,"column":0},"generated":{"line":13840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13840,"column":0},"generated":{"line":13841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13841,"column":0},"generated":{"line":13842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13842,"column":0},"generated":{"line":13843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13843,"column":0},"generated":{"line":13844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13844,"column":0},"generated":{"line":13845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13845,"column":0},"generated":{"line":13846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13846,"column":0},"generated":{"line":13847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13847,"column":0},"generated":{"line":13848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13848,"column":0},"generated":{"line":13849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13849,"column":0},"generated":{"line":13850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13850,"column":0},"generated":{"line":13851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13851,"column":0},"generated":{"line":13852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13852,"column":0},"generated":{"line":13853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13853,"column":0},"generated":{"line":13854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13854,"column":0},"generated":{"line":13855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13855,"column":0},"generated":{"line":13856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13856,"column":0},"generated":{"line":13857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13857,"column":0},"generated":{"line":13858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13858,"column":0},"generated":{"line":13859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13859,"column":0},"generated":{"line":13860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13860,"column":0},"generated":{"line":13861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13861,"column":0},"generated":{"line":13862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13862,"column":0},"generated":{"line":13863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13863,"column":0},"generated":{"line":13864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13864,"column":0},"generated":{"line":13865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13865,"column":0},"generated":{"line":13866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13866,"column":0},"generated":{"line":13867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13867,"column":0},"generated":{"line":13868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13868,"column":0},"generated":{"line":13869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13869,"column":0},"generated":{"line":13870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13870,"column":0},"generated":{"line":13871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13871,"column":0},"generated":{"line":13872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13872,"column":0},"generated":{"line":13873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13873,"column":0},"generated":{"line":13874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13874,"column":0},"generated":{"line":13875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13875,"column":0},"generated":{"line":13876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13876,"column":0},"generated":{"line":13877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13877,"column":0},"generated":{"line":13878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13878,"column":0},"generated":{"line":13879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13879,"column":0},"generated":{"line":13880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13880,"column":0},"generated":{"line":13881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13881,"column":0},"generated":{"line":13882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13882,"column":0},"generated":{"line":13883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13883,"column":0},"generated":{"line":13884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13884,"column":0},"generated":{"line":13885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13885,"column":0},"generated":{"line":13886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13886,"column":0},"generated":{"line":13887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13887,"column":0},"generated":{"line":13888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13888,"column":0},"generated":{"line":13889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13889,"column":0},"generated":{"line":13890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13890,"column":0},"generated":{"line":13891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13891,"column":0},"generated":{"line":13892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13892,"column":0},"generated":{"line":13893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13893,"column":0},"generated":{"line":13894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13894,"column":0},"generated":{"line":13895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13895,"column":0},"generated":{"line":13896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13896,"column":0},"generated":{"line":13897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13897,"column":0},"generated":{"line":13898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13898,"column":0},"generated":{"line":13899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13899,"column":0},"generated":{"line":13900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13900,"column":0},"generated":{"line":13901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13901,"column":0},"generated":{"line":13902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13902,"column":0},"generated":{"line":13903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13903,"column":0},"generated":{"line":13904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13904,"column":0},"generated":{"line":13905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13905,"column":0},"generated":{"line":13906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13906,"column":0},"generated":{"line":13907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13907,"column":0},"generated":{"line":13908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13908,"column":0},"generated":{"line":13909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13909,"column":0},"generated":{"line":13910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13910,"column":0},"generated":{"line":13911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13911,"column":0},"generated":{"line":13912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13912,"column":0},"generated":{"line":13913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13913,"column":0},"generated":{"line":13914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13914,"column":0},"generated":{"line":13915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13915,"column":0},"generated":{"line":13916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13916,"column":0},"generated":{"line":13917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13917,"column":0},"generated":{"line":13918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13918,"column":0},"generated":{"line":13919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13919,"column":0},"generated":{"line":13920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13920,"column":0},"generated":{"line":13921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13921,"column":0},"generated":{"line":13922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13922,"column":0},"generated":{"line":13923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13923,"column":0},"generated":{"line":13924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13924,"column":0},"generated":{"line":13925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13925,"column":0},"generated":{"line":13926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13926,"column":0},"generated":{"line":13927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13927,"column":0},"generated":{"line":13928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13928,"column":0},"generated":{"line":13929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13929,"column":0},"generated":{"line":13930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13930,"column":0},"generated":{"line":13931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13931,"column":0},"generated":{"line":13932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13932,"column":0},"generated":{"line":13933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13933,"column":0},"generated":{"line":13934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13934,"column":0},"generated":{"line":13935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13935,"column":0},"generated":{"line":13936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13936,"column":0},"generated":{"line":13937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13937,"column":0},"generated":{"line":13938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13938,"column":0},"generated":{"line":13939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13939,"column":0},"generated":{"line":13940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13940,"column":0},"generated":{"line":13941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13941,"column":0},"generated":{"line":13942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13942,"column":0},"generated":{"line":13943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13943,"column":0},"generated":{"line":13944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13944,"column":0},"generated":{"line":13945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13945,"column":0},"generated":{"line":13946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13946,"column":0},"generated":{"line":13947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13947,"column":0},"generated":{"line":13948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13948,"column":0},"generated":{"line":13949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13949,"column":0},"generated":{"line":13950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13950,"column":0},"generated":{"line":13951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13951,"column":0},"generated":{"line":13952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13952,"column":0},"generated":{"line":13953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13953,"column":0},"generated":{"line":13954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13954,"column":0},"generated":{"line":13955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13955,"column":0},"generated":{"line":13956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13956,"column":0},"generated":{"line":13957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13957,"column":0},"generated":{"line":13958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13958,"column":0},"generated":{"line":13959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13959,"column":0},"generated":{"line":13960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13960,"column":0},"generated":{"line":13961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13961,"column":0},"generated":{"line":13962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13962,"column":0},"generated":{"line":13963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13963,"column":0},"generated":{"line":13964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13964,"column":0},"generated":{"line":13965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13965,"column":0},"generated":{"line":13966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13966,"column":0},"generated":{"line":13967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13967,"column":0},"generated":{"line":13968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13968,"column":0},"generated":{"line":13969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13969,"column":0},"generated":{"line":13970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13970,"column":0},"generated":{"line":13971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13971,"column":0},"generated":{"line":13972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13972,"column":0},"generated":{"line":13973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13973,"column":0},"generated":{"line":13974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13974,"column":0},"generated":{"line":13975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13975,"column":0},"generated":{"line":13976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13976,"column":0},"generated":{"line":13977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13977,"column":0},"generated":{"line":13978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13978,"column":0},"generated":{"line":13979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13979,"column":0},"generated":{"line":13980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13980,"column":0},"generated":{"line":13981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13981,"column":0},"generated":{"line":13982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13982,"column":0},"generated":{"line":13983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13983,"column":0},"generated":{"line":13984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13984,"column":0},"generated":{"line":13985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13985,"column":0},"generated":{"line":13986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13986,"column":0},"generated":{"line":13987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13987,"column":0},"generated":{"line":13988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13988,"column":0},"generated":{"line":13989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13989,"column":0},"generated":{"line":13990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13990,"column":0},"generated":{"line":13991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13991,"column":0},"generated":{"line":13992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13992,"column":0},"generated":{"line":13993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13993,"column":0},"generated":{"line":13994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13994,"column":0},"generated":{"line":13995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13995,"column":0},"generated":{"line":13996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13996,"column":0},"generated":{"line":13997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13997,"column":0},"generated":{"line":13998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13998,"column":0},"generated":{"line":13999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":13999,"column":0},"generated":{"line":14000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14000,"column":0},"generated":{"line":14001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14001,"column":0},"generated":{"line":14002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14002,"column":0},"generated":{"line":14003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14003,"column":0},"generated":{"line":14004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14004,"column":0},"generated":{"line":14005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14005,"column":0},"generated":{"line":14006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14006,"column":0},"generated":{"line":14007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14007,"column":0},"generated":{"line":14008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14008,"column":0},"generated":{"line":14009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14009,"column":0},"generated":{"line":14010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14010,"column":0},"generated":{"line":14011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14011,"column":0},"generated":{"line":14012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14012,"column":0},"generated":{"line":14013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14013,"column":0},"generated":{"line":14014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14014,"column":0},"generated":{"line":14015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14015,"column":0},"generated":{"line":14016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14016,"column":0},"generated":{"line":14017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14017,"column":0},"generated":{"line":14018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14018,"column":0},"generated":{"line":14019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14019,"column":0},"generated":{"line":14020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14020,"column":0},"generated":{"line":14021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14021,"column":0},"generated":{"line":14022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14022,"column":0},"generated":{"line":14023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14023,"column":0},"generated":{"line":14024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14024,"column":0},"generated":{"line":14025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14025,"column":0},"generated":{"line":14026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14026,"column":0},"generated":{"line":14027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14027,"column":0},"generated":{"line":14028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14028,"column":0},"generated":{"line":14029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14029,"column":0},"generated":{"line":14030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14030,"column":0},"generated":{"line":14031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14031,"column":0},"generated":{"line":14032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14032,"column":0},"generated":{"line":14033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14033,"column":0},"generated":{"line":14034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14034,"column":0},"generated":{"line":14035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14035,"column":0},"generated":{"line":14036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14036,"column":0},"generated":{"line":14037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14037,"column":0},"generated":{"line":14038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14038,"column":0},"generated":{"line":14039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14039,"column":0},"generated":{"line":14040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14040,"column":0},"generated":{"line":14041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14041,"column":0},"generated":{"line":14042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14042,"column":0},"generated":{"line":14043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14043,"column":0},"generated":{"line":14044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14044,"column":0},"generated":{"line":14045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14045,"column":0},"generated":{"line":14046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14046,"column":0},"generated":{"line":14047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14047,"column":0},"generated":{"line":14048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14048,"column":0},"generated":{"line":14049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14049,"column":0},"generated":{"line":14050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14050,"column":0},"generated":{"line":14051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14051,"column":0},"generated":{"line":14052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14052,"column":0},"generated":{"line":14053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14053,"column":0},"generated":{"line":14054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14054,"column":0},"generated":{"line":14055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14055,"column":0},"generated":{"line":14056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14056,"column":0},"generated":{"line":14057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14057,"column":0},"generated":{"line":14058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14058,"column":0},"generated":{"line":14059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14059,"column":0},"generated":{"line":14060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14060,"column":0},"generated":{"line":14061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14061,"column":0},"generated":{"line":14062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14062,"column":0},"generated":{"line":14063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14063,"column":0},"generated":{"line":14064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14064,"column":0},"generated":{"line":14065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14065,"column":0},"generated":{"line":14066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14066,"column":0},"generated":{"line":14067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14067,"column":0},"generated":{"line":14068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14068,"column":0},"generated":{"line":14069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14069,"column":0},"generated":{"line":14070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14070,"column":0},"generated":{"line":14071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14071,"column":0},"generated":{"line":14072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14072,"column":0},"generated":{"line":14073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14073,"column":0},"generated":{"line":14074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14074,"column":0},"generated":{"line":14075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14075,"column":0},"generated":{"line":14076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14076,"column":0},"generated":{"line":14077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14077,"column":0},"generated":{"line":14078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14078,"column":0},"generated":{"line":14079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14079,"column":0},"generated":{"line":14080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14080,"column":0},"generated":{"line":14081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14081,"column":0},"generated":{"line":14082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14082,"column":0},"generated":{"line":14083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14083,"column":0},"generated":{"line":14084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14084,"column":0},"generated":{"line":14085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14085,"column":0},"generated":{"line":14086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14086,"column":0},"generated":{"line":14087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14087,"column":0},"generated":{"line":14088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14088,"column":0},"generated":{"line":14089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14089,"column":0},"generated":{"line":14090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14090,"column":0},"generated":{"line":14091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14091,"column":0},"generated":{"line":14092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14092,"column":0},"generated":{"line":14093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14093,"column":0},"generated":{"line":14094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14094,"column":0},"generated":{"line":14095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14095,"column":0},"generated":{"line":14096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14096,"column":0},"generated":{"line":14097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14097,"column":0},"generated":{"line":14098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14098,"column":0},"generated":{"line":14099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14099,"column":0},"generated":{"line":14100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14100,"column":0},"generated":{"line":14101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14101,"column":0},"generated":{"line":14102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14102,"column":0},"generated":{"line":14103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14103,"column":0},"generated":{"line":14104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14104,"column":0},"generated":{"line":14105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14105,"column":0},"generated":{"line":14106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14106,"column":0},"generated":{"line":14107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14107,"column":0},"generated":{"line":14108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14108,"column":0},"generated":{"line":14109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14109,"column":0},"generated":{"line":14110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14110,"column":0},"generated":{"line":14111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14111,"column":0},"generated":{"line":14112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14112,"column":0},"generated":{"line":14113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14113,"column":0},"generated":{"line":14114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14114,"column":0},"generated":{"line":14115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14115,"column":0},"generated":{"line":14116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14116,"column":0},"generated":{"line":14117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14117,"column":0},"generated":{"line":14118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14118,"column":0},"generated":{"line":14119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14119,"column":0},"generated":{"line":14120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14120,"column":0},"generated":{"line":14121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14121,"column":0},"generated":{"line":14122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14122,"column":0},"generated":{"line":14123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14123,"column":0},"generated":{"line":14124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14124,"column":0},"generated":{"line":14125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14125,"column":0},"generated":{"line":14126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14126,"column":0},"generated":{"line":14127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14127,"column":0},"generated":{"line":14128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14128,"column":0},"generated":{"line":14129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14129,"column":0},"generated":{"line":14130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14130,"column":0},"generated":{"line":14131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14131,"column":0},"generated":{"line":14132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14132,"column":0},"generated":{"line":14133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14133,"column":0},"generated":{"line":14134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14134,"column":0},"generated":{"line":14135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14135,"column":0},"generated":{"line":14136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14136,"column":0},"generated":{"line":14137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14137,"column":0},"generated":{"line":14138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14138,"column":0},"generated":{"line":14139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14139,"column":0},"generated":{"line":14140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14140,"column":0},"generated":{"line":14141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14141,"column":0},"generated":{"line":14142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14142,"column":0},"generated":{"line":14143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14143,"column":0},"generated":{"line":14144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14144,"column":0},"generated":{"line":14145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14145,"column":0},"generated":{"line":14146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14146,"column":0},"generated":{"line":14147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14147,"column":0},"generated":{"line":14148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14148,"column":0},"generated":{"line":14149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14149,"column":0},"generated":{"line":14150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14150,"column":0},"generated":{"line":14151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14151,"column":0},"generated":{"line":14152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14152,"column":0},"generated":{"line":14153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14153,"column":0},"generated":{"line":14154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14154,"column":0},"generated":{"line":14155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14155,"column":0},"generated":{"line":14156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14156,"column":0},"generated":{"line":14157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14157,"column":0},"generated":{"line":14158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14158,"column":0},"generated":{"line":14159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14159,"column":0},"generated":{"line":14160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14160,"column":0},"generated":{"line":14161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14161,"column":0},"generated":{"line":14162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14162,"column":0},"generated":{"line":14163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14163,"column":0},"generated":{"line":14164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14164,"column":0},"generated":{"line":14165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14165,"column":0},"generated":{"line":14166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14166,"column":0},"generated":{"line":14167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14167,"column":0},"generated":{"line":14168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14168,"column":0},"generated":{"line":14169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14169,"column":0},"generated":{"line":14170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14170,"column":0},"generated":{"line":14171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14171,"column":0},"generated":{"line":14172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14172,"column":0},"generated":{"line":14173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14173,"column":0},"generated":{"line":14174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14174,"column":0},"generated":{"line":14175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14175,"column":0},"generated":{"line":14176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14176,"column":0},"generated":{"line":14177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14177,"column":0},"generated":{"line":14178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14178,"column":0},"generated":{"line":14179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14179,"column":0},"generated":{"line":14180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14180,"column":0},"generated":{"line":14181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14181,"column":0},"generated":{"line":14182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14182,"column":0},"generated":{"line":14183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14183,"column":0},"generated":{"line":14184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14184,"column":0},"generated":{"line":14185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14185,"column":0},"generated":{"line":14186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14186,"column":0},"generated":{"line":14187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14187,"column":0},"generated":{"line":14188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14188,"column":0},"generated":{"line":14189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14189,"column":0},"generated":{"line":14190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14190,"column":0},"generated":{"line":14191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14191,"column":0},"generated":{"line":14192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14192,"column":0},"generated":{"line":14193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14193,"column":0},"generated":{"line":14194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14194,"column":0},"generated":{"line":14195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14195,"column":0},"generated":{"line":14196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14196,"column":0},"generated":{"line":14197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14197,"column":0},"generated":{"line":14198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14198,"column":0},"generated":{"line":14199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14199,"column":0},"generated":{"line":14200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14200,"column":0},"generated":{"line":14201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14201,"column":0},"generated":{"line":14202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14202,"column":0},"generated":{"line":14203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14203,"column":0},"generated":{"line":14204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14204,"column":0},"generated":{"line":14205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14205,"column":0},"generated":{"line":14206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14206,"column":0},"generated":{"line":14207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14207,"column":0},"generated":{"line":14208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14208,"column":0},"generated":{"line":14209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14209,"column":0},"generated":{"line":14210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14210,"column":0},"generated":{"line":14211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14211,"column":0},"generated":{"line":14212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14212,"column":0},"generated":{"line":14213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14213,"column":0},"generated":{"line":14214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14214,"column":0},"generated":{"line":14215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14215,"column":0},"generated":{"line":14216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14216,"column":0},"generated":{"line":14217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14217,"column":0},"generated":{"line":14218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14218,"column":0},"generated":{"line":14219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14219,"column":0},"generated":{"line":14220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14220,"column":0},"generated":{"line":14221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14221,"column":0},"generated":{"line":14222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14222,"column":0},"generated":{"line":14223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14223,"column":0},"generated":{"line":14224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14224,"column":0},"generated":{"line":14225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14225,"column":0},"generated":{"line":14226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14226,"column":0},"generated":{"line":14227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14227,"column":0},"generated":{"line":14228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14228,"column":0},"generated":{"line":14229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14229,"column":0},"generated":{"line":14230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14230,"column":0},"generated":{"line":14231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14231,"column":0},"generated":{"line":14232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14232,"column":0},"generated":{"line":14233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14233,"column":0},"generated":{"line":14234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14234,"column":0},"generated":{"line":14235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14235,"column":0},"generated":{"line":14236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14236,"column":0},"generated":{"line":14237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14237,"column":0},"generated":{"line":14238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14238,"column":0},"generated":{"line":14239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14239,"column":0},"generated":{"line":14240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14240,"column":0},"generated":{"line":14241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14241,"column":0},"generated":{"line":14242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14242,"column":0},"generated":{"line":14243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14243,"column":0},"generated":{"line":14244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14244,"column":0},"generated":{"line":14245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14245,"column":0},"generated":{"line":14246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14246,"column":0},"generated":{"line":14247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14247,"column":0},"generated":{"line":14248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14248,"column":0},"generated":{"line":14249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14249,"column":0},"generated":{"line":14250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14250,"column":0},"generated":{"line":14251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14251,"column":0},"generated":{"line":14252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14252,"column":0},"generated":{"line":14253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14253,"column":0},"generated":{"line":14254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14254,"column":0},"generated":{"line":14255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14255,"column":0},"generated":{"line":14256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14256,"column":0},"generated":{"line":14257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14257,"column":0},"generated":{"line":14258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14258,"column":0},"generated":{"line":14259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14259,"column":0},"generated":{"line":14260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14260,"column":0},"generated":{"line":14261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14261,"column":0},"generated":{"line":14262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14262,"column":0},"generated":{"line":14263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14263,"column":0},"generated":{"line":14264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14264,"column":0},"generated":{"line":14265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14265,"column":0},"generated":{"line":14266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14266,"column":0},"generated":{"line":14267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14267,"column":0},"generated":{"line":14268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14268,"column":0},"generated":{"line":14269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14269,"column":0},"generated":{"line":14270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14270,"column":0},"generated":{"line":14271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14271,"column":0},"generated":{"line":14272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14272,"column":0},"generated":{"line":14273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14273,"column":0},"generated":{"line":14274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14274,"column":0},"generated":{"line":14275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14275,"column":0},"generated":{"line":14276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14276,"column":0},"generated":{"line":14277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14277,"column":0},"generated":{"line":14278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14278,"column":0},"generated":{"line":14279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14279,"column":0},"generated":{"line":14280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14280,"column":0},"generated":{"line":14281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14281,"column":0},"generated":{"line":14282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14282,"column":0},"generated":{"line":14283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14283,"column":0},"generated":{"line":14284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14284,"column":0},"generated":{"line":14285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14285,"column":0},"generated":{"line":14286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14286,"column":0},"generated":{"line":14287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14287,"column":0},"generated":{"line":14288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14288,"column":0},"generated":{"line":14289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14289,"column":0},"generated":{"line":14290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14290,"column":0},"generated":{"line":14291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14291,"column":0},"generated":{"line":14292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14292,"column":0},"generated":{"line":14293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14293,"column":0},"generated":{"line":14294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14294,"column":0},"generated":{"line":14295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14295,"column":0},"generated":{"line":14296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14296,"column":0},"generated":{"line":14297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14297,"column":0},"generated":{"line":14298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14298,"column":0},"generated":{"line":14299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14299,"column":0},"generated":{"line":14300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14300,"column":0},"generated":{"line":14301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14301,"column":0},"generated":{"line":14302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14302,"column":0},"generated":{"line":14303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14303,"column":0},"generated":{"line":14304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14304,"column":0},"generated":{"line":14305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14305,"column":0},"generated":{"line":14306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14306,"column":0},"generated":{"line":14307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14307,"column":0},"generated":{"line":14308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14308,"column":0},"generated":{"line":14309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14309,"column":0},"generated":{"line":14310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14310,"column":0},"generated":{"line":14311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14311,"column":0},"generated":{"line":14312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14312,"column":0},"generated":{"line":14313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14313,"column":0},"generated":{"line":14314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14314,"column":0},"generated":{"line":14315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14315,"column":0},"generated":{"line":14316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14316,"column":0},"generated":{"line":14317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14317,"column":0},"generated":{"line":14318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14318,"column":0},"generated":{"line":14319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14319,"column":0},"generated":{"line":14320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14320,"column":0},"generated":{"line":14321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14321,"column":0},"generated":{"line":14322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14322,"column":0},"generated":{"line":14323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14323,"column":0},"generated":{"line":14324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14324,"column":0},"generated":{"line":14325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14325,"column":0},"generated":{"line":14326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14326,"column":0},"generated":{"line":14327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14327,"column":0},"generated":{"line":14328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14328,"column":0},"generated":{"line":14329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14329,"column":0},"generated":{"line":14330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14330,"column":0},"generated":{"line":14331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14331,"column":0},"generated":{"line":14332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14332,"column":0},"generated":{"line":14333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14333,"column":0},"generated":{"line":14334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14334,"column":0},"generated":{"line":14335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14335,"column":0},"generated":{"line":14336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14336,"column":0},"generated":{"line":14337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14337,"column":0},"generated":{"line":14338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14338,"column":0},"generated":{"line":14339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14339,"column":0},"generated":{"line":14340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14340,"column":0},"generated":{"line":14341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14341,"column":0},"generated":{"line":14342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14342,"column":0},"generated":{"line":14343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14343,"column":0},"generated":{"line":14344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14344,"column":0},"generated":{"line":14345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14345,"column":0},"generated":{"line":14346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14346,"column":0},"generated":{"line":14347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14347,"column":0},"generated":{"line":14348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14348,"column":0},"generated":{"line":14349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14349,"column":0},"generated":{"line":14350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14350,"column":0},"generated":{"line":14351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14351,"column":0},"generated":{"line":14352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14352,"column":0},"generated":{"line":14353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14353,"column":0},"generated":{"line":14354,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14354,"column":0},"generated":{"line":14355,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14355,"column":0},"generated":{"line":14356,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14356,"column":0},"generated":{"line":14357,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14357,"column":0},"generated":{"line":14358,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14358,"column":0},"generated":{"line":14359,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14359,"column":0},"generated":{"line":14360,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14360,"column":0},"generated":{"line":14361,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14361,"column":0},"generated":{"line":14362,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14362,"column":0},"generated":{"line":14363,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14363,"column":0},"generated":{"line":14364,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14364,"column":0},"generated":{"line":14365,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14365,"column":0},"generated":{"line":14366,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14366,"column":0},"generated":{"line":14367,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14367,"column":0},"generated":{"line":14368,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14368,"column":0},"generated":{"line":14369,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14369,"column":0},"generated":{"line":14370,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14370,"column":0},"generated":{"line":14371,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14371,"column":0},"generated":{"line":14372,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14372,"column":0},"generated":{"line":14373,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14373,"column":0},"generated":{"line":14374,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14374,"column":0},"generated":{"line":14375,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14375,"column":0},"generated":{"line":14376,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14376,"column":0},"generated":{"line":14377,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14377,"column":0},"generated":{"line":14378,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14378,"column":0},"generated":{"line":14379,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14379,"column":0},"generated":{"line":14380,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14380,"column":0},"generated":{"line":14381,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14381,"column":0},"generated":{"line":14382,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14382,"column":0},"generated":{"line":14383,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14383,"column":0},"generated":{"line":14384,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14384,"column":0},"generated":{"line":14385,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14385,"column":0},"generated":{"line":14386,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14386,"column":0},"generated":{"line":14387,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14387,"column":0},"generated":{"line":14388,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14388,"column":0},"generated":{"line":14389,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14389,"column":0},"generated":{"line":14390,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14390,"column":0},"generated":{"line":14391,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14391,"column":0},"generated":{"line":14392,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14392,"column":0},"generated":{"line":14393,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14393,"column":0},"generated":{"line":14394,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14394,"column":0},"generated":{"line":14395,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14395,"column":0},"generated":{"line":14396,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14396,"column":0},"generated":{"line":14397,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14397,"column":0},"generated":{"line":14398,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14398,"column":0},"generated":{"line":14399,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14399,"column":0},"generated":{"line":14400,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14400,"column":0},"generated":{"line":14401,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14401,"column":0},"generated":{"line":14402,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14402,"column":0},"generated":{"line":14403,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14403,"column":0},"generated":{"line":14404,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14404,"column":0},"generated":{"line":14405,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14405,"column":0},"generated":{"line":14406,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14406,"column":0},"generated":{"line":14407,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14407,"column":0},"generated":{"line":14408,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14408,"column":0},"generated":{"line":14409,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14409,"column":0},"generated":{"line":14410,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14410,"column":0},"generated":{"line":14411,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14411,"column":0},"generated":{"line":14412,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14412,"column":0},"generated":{"line":14413,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14413,"column":0},"generated":{"line":14414,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14414,"column":0},"generated":{"line":14415,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14415,"column":0},"generated":{"line":14416,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14416,"column":0},"generated":{"line":14417,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14417,"column":0},"generated":{"line":14418,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14418,"column":0},"generated":{"line":14419,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14419,"column":0},"generated":{"line":14420,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14420,"column":0},"generated":{"line":14421,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14421,"column":0},"generated":{"line":14422,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14422,"column":0},"generated":{"line":14423,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14423,"column":0},"generated":{"line":14424,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14424,"column":0},"generated":{"line":14425,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14425,"column":0},"generated":{"line":14426,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14426,"column":0},"generated":{"line":14427,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14427,"column":0},"generated":{"line":14428,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14428,"column":0},"generated":{"line":14429,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14429,"column":0},"generated":{"line":14430,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14430,"column":0},"generated":{"line":14431,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14431,"column":0},"generated":{"line":14432,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14432,"column":0},"generated":{"line":14433,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14433,"column":0},"generated":{"line":14434,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14434,"column":0},"generated":{"line":14435,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14435,"column":0},"generated":{"line":14436,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14436,"column":0},"generated":{"line":14437,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14437,"column":0},"generated":{"line":14438,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14438,"column":0},"generated":{"line":14439,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14439,"column":0},"generated":{"line":14440,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14440,"column":0},"generated":{"line":14441,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14441,"column":0},"generated":{"line":14442,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14442,"column":0},"generated":{"line":14443,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14443,"column":0},"generated":{"line":14444,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14444,"column":0},"generated":{"line":14445,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14445,"column":0},"generated":{"line":14446,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14446,"column":0},"generated":{"line":14447,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14447,"column":0},"generated":{"line":14448,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14448,"column":0},"generated":{"line":14449,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14449,"column":0},"generated":{"line":14450,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14450,"column":0},"generated":{"line":14451,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14451,"column":0},"generated":{"line":14452,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14452,"column":0},"generated":{"line":14453,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14453,"column":0},"generated":{"line":14454,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14454,"column":0},"generated":{"line":14455,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14455,"column":0},"generated":{"line":14456,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14456,"column":0},"generated":{"line":14457,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14457,"column":0},"generated":{"line":14458,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14458,"column":0},"generated":{"line":14459,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14459,"column":0},"generated":{"line":14460,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14460,"column":0},"generated":{"line":14461,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14461,"column":0},"generated":{"line":14462,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14462,"column":0},"generated":{"line":14463,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14463,"column":0},"generated":{"line":14464,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14464,"column":0},"generated":{"line":14465,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14465,"column":0},"generated":{"line":14466,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14466,"column":0},"generated":{"line":14467,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14467,"column":0},"generated":{"line":14468,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14468,"column":0},"generated":{"line":14469,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14469,"column":0},"generated":{"line":14470,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14470,"column":0},"generated":{"line":14471,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14471,"column":0},"generated":{"line":14472,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14472,"column":0},"generated":{"line":14473,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14473,"column":0},"generated":{"line":14474,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14474,"column":0},"generated":{"line":14475,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14475,"column":0},"generated":{"line":14476,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14476,"column":0},"generated":{"line":14477,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14477,"column":0},"generated":{"line":14478,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14478,"column":0},"generated":{"line":14479,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14479,"column":0},"generated":{"line":14480,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14480,"column":0},"generated":{"line":14481,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14481,"column":0},"generated":{"line":14482,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14482,"column":0},"generated":{"line":14483,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14483,"column":0},"generated":{"line":14484,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14484,"column":0},"generated":{"line":14485,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14485,"column":0},"generated":{"line":14486,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14486,"column":0},"generated":{"line":14487,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14487,"column":0},"generated":{"line":14488,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14488,"column":0},"generated":{"line":14489,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14489,"column":0},"generated":{"line":14490,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14490,"column":0},"generated":{"line":14491,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14491,"column":0},"generated":{"line":14492,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14492,"column":0},"generated":{"line":14493,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14493,"column":0},"generated":{"line":14494,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14494,"column":0},"generated":{"line":14495,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14495,"column":0},"generated":{"line":14496,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14496,"column":0},"generated":{"line":14497,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14497,"column":0},"generated":{"line":14498,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14498,"column":0},"generated":{"line":14499,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14499,"column":0},"generated":{"line":14500,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14500,"column":0},"generated":{"line":14501,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14501,"column":0},"generated":{"line":14502,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14502,"column":0},"generated":{"line":14503,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14503,"column":0},"generated":{"line":14504,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14504,"column":0},"generated":{"line":14505,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14505,"column":0},"generated":{"line":14506,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14506,"column":0},"generated":{"line":14507,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14507,"column":0},"generated":{"line":14508,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14508,"column":0},"generated":{"line":14509,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14509,"column":0},"generated":{"line":14510,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14510,"column":0},"generated":{"line":14511,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14511,"column":0},"generated":{"line":14512,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14512,"column":0},"generated":{"line":14513,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14513,"column":0},"generated":{"line":14514,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14514,"column":0},"generated":{"line":14515,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14515,"column":0},"generated":{"line":14516,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14516,"column":0},"generated":{"line":14517,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14517,"column":0},"generated":{"line":14518,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14518,"column":0},"generated":{"line":14519,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14519,"column":0},"generated":{"line":14520,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14520,"column":0},"generated":{"line":14521,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14521,"column":0},"generated":{"line":14522,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14522,"column":0},"generated":{"line":14523,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14523,"column":0},"generated":{"line":14524,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14524,"column":0},"generated":{"line":14525,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14525,"column":0},"generated":{"line":14526,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14526,"column":0},"generated":{"line":14527,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14527,"column":0},"generated":{"line":14528,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14528,"column":0},"generated":{"line":14529,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14529,"column":0},"generated":{"line":14530,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14530,"column":0},"generated":{"line":14531,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14531,"column":0},"generated":{"line":14532,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14532,"column":0},"generated":{"line":14533,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14533,"column":0},"generated":{"line":14534,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14534,"column":0},"generated":{"line":14535,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14535,"column":0},"generated":{"line":14536,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14536,"column":0},"generated":{"line":14537,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14537,"column":0},"generated":{"line":14538,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14538,"column":0},"generated":{"line":14539,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14539,"column":0},"generated":{"line":14540,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14540,"column":0},"generated":{"line":14541,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14541,"column":0},"generated":{"line":14542,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14542,"column":0},"generated":{"line":14543,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14543,"column":0},"generated":{"line":14544,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14544,"column":0},"generated":{"line":14545,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14545,"column":0},"generated":{"line":14546,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14546,"column":0},"generated":{"line":14547,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14547,"column":0},"generated":{"line":14548,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14548,"column":0},"generated":{"line":14549,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14549,"column":0},"generated":{"line":14550,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14550,"column":0},"generated":{"line":14551,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14551,"column":0},"generated":{"line":14552,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14552,"column":0},"generated":{"line":14553,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14553,"column":0},"generated":{"line":14554,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14554,"column":0},"generated":{"line":14555,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14555,"column":0},"generated":{"line":14556,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14556,"column":0},"generated":{"line":14557,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14557,"column":0},"generated":{"line":14558,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14558,"column":0},"generated":{"line":14559,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14559,"column":0},"generated":{"line":14560,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14560,"column":0},"generated":{"line":14561,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14561,"column":0},"generated":{"line":14562,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14562,"column":0},"generated":{"line":14563,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14563,"column":0},"generated":{"line":14564,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14564,"column":0},"generated":{"line":14565,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14565,"column":0},"generated":{"line":14566,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14566,"column":0},"generated":{"line":14567,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14567,"column":0},"generated":{"line":14568,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14568,"column":0},"generated":{"line":14569,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14569,"column":0},"generated":{"line":14570,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14570,"column":0},"generated":{"line":14571,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14571,"column":0},"generated":{"line":14572,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14572,"column":0},"generated":{"line":14573,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14573,"column":0},"generated":{"line":14574,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14574,"column":0},"generated":{"line":14575,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14575,"column":0},"generated":{"line":14576,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14576,"column":0},"generated":{"line":14577,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14577,"column":0},"generated":{"line":14578,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14578,"column":0},"generated":{"line":14579,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14579,"column":0},"generated":{"line":14580,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14580,"column":0},"generated":{"line":14581,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14581,"column":0},"generated":{"line":14582,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14582,"column":0},"generated":{"line":14583,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14583,"column":0},"generated":{"line":14584,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14584,"column":0},"generated":{"line":14585,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14585,"column":0},"generated":{"line":14586,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14586,"column":0},"generated":{"line":14587,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14587,"column":0},"generated":{"line":14588,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14588,"column":0},"generated":{"line":14589,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14589,"column":0},"generated":{"line":14590,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14590,"column":0},"generated":{"line":14591,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14591,"column":0},"generated":{"line":14592,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14592,"column":0},"generated":{"line":14593,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14593,"column":0},"generated":{"line":14594,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14594,"column":0},"generated":{"line":14595,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14595,"column":0},"generated":{"line":14596,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14596,"column":0},"generated":{"line":14597,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14597,"column":0},"generated":{"line":14598,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14598,"column":0},"generated":{"line":14599,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14599,"column":0},"generated":{"line":14600,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14600,"column":0},"generated":{"line":14601,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14601,"column":0},"generated":{"line":14602,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14602,"column":0},"generated":{"line":14603,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14603,"column":0},"generated":{"line":14604,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14604,"column":0},"generated":{"line":14605,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14605,"column":0},"generated":{"line":14606,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14606,"column":0},"generated":{"line":14607,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14607,"column":0},"generated":{"line":14608,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14608,"column":0},"generated":{"line":14609,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14609,"column":0},"generated":{"line":14610,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14610,"column":0},"generated":{"line":14611,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14611,"column":0},"generated":{"line":14612,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14612,"column":0},"generated":{"line":14613,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14613,"column":0},"generated":{"line":14614,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14614,"column":0},"generated":{"line":14615,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14615,"column":0},"generated":{"line":14616,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14616,"column":0},"generated":{"line":14617,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14617,"column":0},"generated":{"line":14618,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14618,"column":0},"generated":{"line":14619,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14619,"column":0},"generated":{"line":14620,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14620,"column":0},"generated":{"line":14621,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14621,"column":0},"generated":{"line":14622,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14622,"column":0},"generated":{"line":14623,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14623,"column":0},"generated":{"line":14624,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14624,"column":0},"generated":{"line":14625,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14625,"column":0},"generated":{"line":14626,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14626,"column":0},"generated":{"line":14627,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14627,"column":0},"generated":{"line":14628,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14628,"column":0},"generated":{"line":14629,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14629,"column":0},"generated":{"line":14630,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14630,"column":0},"generated":{"line":14631,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14631,"column":0},"generated":{"line":14632,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14632,"column":0},"generated":{"line":14633,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14633,"column":0},"generated":{"line":14634,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14634,"column":0},"generated":{"line":14635,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14635,"column":0},"generated":{"line":14636,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14636,"column":0},"generated":{"line":14637,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14637,"column":0},"generated":{"line":14638,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14638,"column":0},"generated":{"line":14639,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14639,"column":0},"generated":{"line":14640,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14640,"column":0},"generated":{"line":14641,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14641,"column":0},"generated":{"line":14642,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14642,"column":0},"generated":{"line":14643,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14643,"column":0},"generated":{"line":14644,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14644,"column":0},"generated":{"line":14645,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14645,"column":0},"generated":{"line":14646,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14646,"column":0},"generated":{"line":14647,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14647,"column":0},"generated":{"line":14648,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14648,"column":0},"generated":{"line":14649,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14649,"column":0},"generated":{"line":14650,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14650,"column":0},"generated":{"line":14651,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14651,"column":0},"generated":{"line":14652,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14652,"column":0},"generated":{"line":14653,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14653,"column":0},"generated":{"line":14654,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14654,"column":0},"generated":{"line":14655,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14655,"column":0},"generated":{"line":14656,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14656,"column":0},"generated":{"line":14657,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14657,"column":0},"generated":{"line":14658,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14658,"column":0},"generated":{"line":14659,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14659,"column":0},"generated":{"line":14660,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14660,"column":0},"generated":{"line":14661,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14661,"column":0},"generated":{"line":14662,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14662,"column":0},"generated":{"line":14663,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14663,"column":0},"generated":{"line":14664,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14664,"column":0},"generated":{"line":14665,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14665,"column":0},"generated":{"line":14666,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14666,"column":0},"generated":{"line":14667,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14667,"column":0},"generated":{"line":14668,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14668,"column":0},"generated":{"line":14669,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14669,"column":0},"generated":{"line":14670,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14670,"column":0},"generated":{"line":14671,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14671,"column":0},"generated":{"line":14672,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14672,"column":0},"generated":{"line":14673,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14673,"column":0},"generated":{"line":14674,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14674,"column":0},"generated":{"line":14675,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14675,"column":0},"generated":{"line":14676,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14676,"column":0},"generated":{"line":14677,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14677,"column":0},"generated":{"line":14678,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14678,"column":0},"generated":{"line":14679,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14679,"column":0},"generated":{"line":14680,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14680,"column":0},"generated":{"line":14681,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14681,"column":0},"generated":{"line":14682,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14682,"column":0},"generated":{"line":14683,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14683,"column":0},"generated":{"line":14684,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14684,"column":0},"generated":{"line":14685,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14685,"column":0},"generated":{"line":14686,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14686,"column":0},"generated":{"line":14687,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14687,"column":0},"generated":{"line":14688,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14688,"column":0},"generated":{"line":14689,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14689,"column":0},"generated":{"line":14690,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14690,"column":0},"generated":{"line":14691,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14691,"column":0},"generated":{"line":14692,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14692,"column":0},"generated":{"line":14693,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14693,"column":0},"generated":{"line":14694,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14694,"column":0},"generated":{"line":14695,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14695,"column":0},"generated":{"line":14696,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14696,"column":0},"generated":{"line":14697,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14697,"column":0},"generated":{"line":14698,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14698,"column":0},"generated":{"line":14699,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14699,"column":0},"generated":{"line":14700,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14700,"column":0},"generated":{"line":14701,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14701,"column":0},"generated":{"line":14702,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14702,"column":0},"generated":{"line":14703,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14703,"column":0},"generated":{"line":14704,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14704,"column":0},"generated":{"line":14705,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14705,"column":0},"generated":{"line":14706,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14706,"column":0},"generated":{"line":14707,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14707,"column":0},"generated":{"line":14708,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14708,"column":0},"generated":{"line":14709,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14709,"column":0},"generated":{"line":14710,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14710,"column":0},"generated":{"line":14711,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14711,"column":0},"generated":{"line":14712,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14712,"column":0},"generated":{"line":14713,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14713,"column":0},"generated":{"line":14714,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14714,"column":0},"generated":{"line":14715,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14715,"column":0},"generated":{"line":14716,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14716,"column":0},"generated":{"line":14717,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14717,"column":0},"generated":{"line":14718,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14718,"column":0},"generated":{"line":14719,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14719,"column":0},"generated":{"line":14720,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14720,"column":0},"generated":{"line":14721,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14721,"column":0},"generated":{"line":14722,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14722,"column":0},"generated":{"line":14723,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14723,"column":0},"generated":{"line":14724,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14724,"column":0},"generated":{"line":14725,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14725,"column":0},"generated":{"line":14726,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14726,"column":0},"generated":{"line":14727,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14727,"column":0},"generated":{"line":14728,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14728,"column":0},"generated":{"line":14729,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14729,"column":0},"generated":{"line":14730,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14730,"column":0},"generated":{"line":14731,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14731,"column":0},"generated":{"line":14732,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14732,"column":0},"generated":{"line":14733,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14733,"column":0},"generated":{"line":14734,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14734,"column":0},"generated":{"line":14735,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14735,"column":0},"generated":{"line":14736,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14736,"column":0},"generated":{"line":14737,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14737,"column":0},"generated":{"line":14738,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14738,"column":0},"generated":{"line":14739,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14739,"column":0},"generated":{"line":14740,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14740,"column":0},"generated":{"line":14741,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14741,"column":0},"generated":{"line":14742,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14742,"column":0},"generated":{"line":14743,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14743,"column":0},"generated":{"line":14744,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14744,"column":0},"generated":{"line":14745,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14745,"column":0},"generated":{"line":14746,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14746,"column":0},"generated":{"line":14747,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14747,"column":0},"generated":{"line":14748,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14748,"column":0},"generated":{"line":14749,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14749,"column":0},"generated":{"line":14750,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14750,"column":0},"generated":{"line":14751,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14751,"column":0},"generated":{"line":14752,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14752,"column":0},"generated":{"line":14753,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14753,"column":0},"generated":{"line":14754,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14754,"column":0},"generated":{"line":14755,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14755,"column":0},"generated":{"line":14756,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14756,"column":0},"generated":{"line":14757,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14757,"column":0},"generated":{"line":14758,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14758,"column":0},"generated":{"line":14759,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14759,"column":0},"generated":{"line":14760,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14760,"column":0},"generated":{"line":14761,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14761,"column":0},"generated":{"line":14762,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14762,"column":0},"generated":{"line":14763,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14763,"column":0},"generated":{"line":14764,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14764,"column":0},"generated":{"line":14765,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14765,"column":0},"generated":{"line":14766,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14766,"column":0},"generated":{"line":14767,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14767,"column":0},"generated":{"line":14768,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14768,"column":0},"generated":{"line":14769,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14769,"column":0},"generated":{"line":14770,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14770,"column":0},"generated":{"line":14771,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14771,"column":0},"generated":{"line":14772,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14772,"column":0},"generated":{"line":14773,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14773,"column":0},"generated":{"line":14774,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14774,"column":0},"generated":{"line":14775,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14775,"column":0},"generated":{"line":14776,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14776,"column":0},"generated":{"line":14777,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14777,"column":0},"generated":{"line":14778,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14778,"column":0},"generated":{"line":14779,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14779,"column":0},"generated":{"line":14780,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14780,"column":0},"generated":{"line":14781,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14781,"column":0},"generated":{"line":14782,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14782,"column":0},"generated":{"line":14783,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14783,"column":0},"generated":{"line":14784,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14784,"column":0},"generated":{"line":14785,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14785,"column":0},"generated":{"line":14786,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14786,"column":0},"generated":{"line":14787,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14787,"column":0},"generated":{"line":14788,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14788,"column":0},"generated":{"line":14789,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14789,"column":0},"generated":{"line":14790,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14790,"column":0},"generated":{"line":14791,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14791,"column":0},"generated":{"line":14792,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14792,"column":0},"generated":{"line":14793,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14793,"column":0},"generated":{"line":14794,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14794,"column":0},"generated":{"line":14795,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14795,"column":0},"generated":{"line":14796,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14796,"column":0},"generated":{"line":14797,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14797,"column":0},"generated":{"line":14798,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14798,"column":0},"generated":{"line":14799,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14799,"column":0},"generated":{"line":14800,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14800,"column":0},"generated":{"line":14801,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14801,"column":0},"generated":{"line":14802,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14802,"column":0},"generated":{"line":14803,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14803,"column":0},"generated":{"line":14804,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14804,"column":0},"generated":{"line":14805,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14805,"column":0},"generated":{"line":14806,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14806,"column":0},"generated":{"line":14807,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14807,"column":0},"generated":{"line":14808,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14808,"column":0},"generated":{"line":14809,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14809,"column":0},"generated":{"line":14810,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14810,"column":0},"generated":{"line":14811,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14811,"column":0},"generated":{"line":14812,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14812,"column":0},"generated":{"line":14813,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14813,"column":0},"generated":{"line":14814,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14814,"column":0},"generated":{"line":14815,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14815,"column":0},"generated":{"line":14816,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14816,"column":0},"generated":{"line":14817,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14817,"column":0},"generated":{"line":14818,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14818,"column":0},"generated":{"line":14819,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14819,"column":0},"generated":{"line":14820,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14820,"column":0},"generated":{"line":14821,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14821,"column":0},"generated":{"line":14822,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14822,"column":0},"generated":{"line":14823,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14823,"column":0},"generated":{"line":14824,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14824,"column":0},"generated":{"line":14825,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14825,"column":0},"generated":{"line":14826,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14826,"column":0},"generated":{"line":14827,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14827,"column":0},"generated":{"line":14828,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14828,"column":0},"generated":{"line":14829,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14829,"column":0},"generated":{"line":14830,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14830,"column":0},"generated":{"line":14831,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14831,"column":0},"generated":{"line":14832,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14832,"column":0},"generated":{"line":14833,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14833,"column":0},"generated":{"line":14834,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14834,"column":0},"generated":{"line":14835,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14835,"column":0},"generated":{"line":14836,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14836,"column":0},"generated":{"line":14837,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14837,"column":0},"generated":{"line":14838,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14838,"column":0},"generated":{"line":14839,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14839,"column":0},"generated":{"line":14840,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14840,"column":0},"generated":{"line":14841,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14841,"column":0},"generated":{"line":14842,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14842,"column":0},"generated":{"line":14843,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14843,"column":0},"generated":{"line":14844,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14844,"column":0},"generated":{"line":14845,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14845,"column":0},"generated":{"line":14846,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14846,"column":0},"generated":{"line":14847,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14847,"column":0},"generated":{"line":14848,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14848,"column":0},"generated":{"line":14849,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14849,"column":0},"generated":{"line":14850,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14850,"column":0},"generated":{"line":14851,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14851,"column":0},"generated":{"line":14852,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14852,"column":0},"generated":{"line":14853,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14853,"column":0},"generated":{"line":14854,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14854,"column":0},"generated":{"line":14855,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14855,"column":0},"generated":{"line":14856,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14856,"column":0},"generated":{"line":14857,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14857,"column":0},"generated":{"line":14858,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14858,"column":0},"generated":{"line":14859,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14859,"column":0},"generated":{"line":14860,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14860,"column":0},"generated":{"line":14861,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14861,"column":0},"generated":{"line":14862,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14862,"column":0},"generated":{"line":14863,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14863,"column":0},"generated":{"line":14864,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14864,"column":0},"generated":{"line":14865,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14865,"column":0},"generated":{"line":14866,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14866,"column":0},"generated":{"line":14867,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14867,"column":0},"generated":{"line":14868,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14868,"column":0},"generated":{"line":14869,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14869,"column":0},"generated":{"line":14870,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14870,"column":0},"generated":{"line":14871,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14871,"column":0},"generated":{"line":14872,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14872,"column":0},"generated":{"line":14873,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14873,"column":0},"generated":{"line":14874,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14874,"column":0},"generated":{"line":14875,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14875,"column":0},"generated":{"line":14876,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14876,"column":0},"generated":{"line":14877,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14877,"column":0},"generated":{"line":14878,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14878,"column":0},"generated":{"line":14879,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14879,"column":0},"generated":{"line":14880,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14880,"column":0},"generated":{"line":14881,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14881,"column":0},"generated":{"line":14882,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14882,"column":0},"generated":{"line":14883,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14883,"column":0},"generated":{"line":14884,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14884,"column":0},"generated":{"line":14885,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14885,"column":0},"generated":{"line":14886,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14886,"column":0},"generated":{"line":14887,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14887,"column":0},"generated":{"line":14888,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14888,"column":0},"generated":{"line":14889,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14889,"column":0},"generated":{"line":14890,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14890,"column":0},"generated":{"line":14891,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14891,"column":0},"generated":{"line":14892,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14892,"column":0},"generated":{"line":14893,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14893,"column":0},"generated":{"line":14894,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14894,"column":0},"generated":{"line":14895,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14895,"column":0},"generated":{"line":14896,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14896,"column":0},"generated":{"line":14897,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14897,"column":0},"generated":{"line":14898,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14898,"column":0},"generated":{"line":14899,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14899,"column":0},"generated":{"line":14900,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14900,"column":0},"generated":{"line":14901,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14901,"column":0},"generated":{"line":14902,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14902,"column":0},"generated":{"line":14903,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14903,"column":0},"generated":{"line":14904,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14904,"column":0},"generated":{"line":14905,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14905,"column":0},"generated":{"line":14906,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14906,"column":0},"generated":{"line":14907,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14907,"column":0},"generated":{"line":14908,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14908,"column":0},"generated":{"line":14909,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14909,"column":0},"generated":{"line":14910,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14910,"column":0},"generated":{"line":14911,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14911,"column":0},"generated":{"line":14912,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14912,"column":0},"generated":{"line":14913,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14913,"column":0},"generated":{"line":14914,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14914,"column":0},"generated":{"line":14915,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14915,"column":0},"generated":{"line":14916,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14916,"column":0},"generated":{"line":14917,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14917,"column":0},"generated":{"line":14918,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14918,"column":0},"generated":{"line":14919,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14919,"column":0},"generated":{"line":14920,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14920,"column":0},"generated":{"line":14921,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14921,"column":0},"generated":{"line":14922,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14922,"column":0},"generated":{"line":14923,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14923,"column":0},"generated":{"line":14924,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14924,"column":0},"generated":{"line":14925,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14925,"column":0},"generated":{"line":14926,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14926,"column":0},"generated":{"line":14927,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14927,"column":0},"generated":{"line":14928,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14928,"column":0},"generated":{"line":14929,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14929,"column":0},"generated":{"line":14930,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14930,"column":0},"generated":{"line":14931,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14931,"column":0},"generated":{"line":14932,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14932,"column":0},"generated":{"line":14933,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14933,"column":0},"generated":{"line":14934,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14934,"column":0},"generated":{"line":14935,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14935,"column":0},"generated":{"line":14936,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14936,"column":0},"generated":{"line":14937,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14937,"column":0},"generated":{"line":14938,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14938,"column":0},"generated":{"line":14939,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14939,"column":0},"generated":{"line":14940,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14940,"column":0},"generated":{"line":14941,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14941,"column":0},"generated":{"line":14942,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14942,"column":0},"generated":{"line":14943,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14943,"column":0},"generated":{"line":14944,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14944,"column":0},"generated":{"line":14945,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14945,"column":0},"generated":{"line":14946,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14946,"column":0},"generated":{"line":14947,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14947,"column":0},"generated":{"line":14948,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14948,"column":0},"generated":{"line":14949,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14949,"column":0},"generated":{"line":14950,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14950,"column":0},"generated":{"line":14951,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14951,"column":0},"generated":{"line":14952,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14952,"column":0},"generated":{"line":14953,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14953,"column":0},"generated":{"line":14954,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14954,"column":0},"generated":{"line":14955,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14955,"column":0},"generated":{"line":14956,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14956,"column":0},"generated":{"line":14957,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14957,"column":0},"generated":{"line":14958,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14958,"column":0},"generated":{"line":14959,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14959,"column":0},"generated":{"line":14960,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14960,"column":0},"generated":{"line":14961,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14961,"column":0},"generated":{"line":14962,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14962,"column":0},"generated":{"line":14963,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14963,"column":0},"generated":{"line":14964,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14964,"column":0},"generated":{"line":14965,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14965,"column":0},"generated":{"line":14966,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14966,"column":0},"generated":{"line":14967,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14967,"column":0},"generated":{"line":14968,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14968,"column":0},"generated":{"line":14969,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14969,"column":0},"generated":{"line":14970,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14970,"column":0},"generated":{"line":14971,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14971,"column":0},"generated":{"line":14972,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14972,"column":0},"generated":{"line":14973,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14973,"column":0},"generated":{"line":14974,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14974,"column":0},"generated":{"line":14975,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14975,"column":0},"generated":{"line":14976,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14976,"column":0},"generated":{"line":14977,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14977,"column":0},"generated":{"line":14978,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14978,"column":0},"generated":{"line":14979,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14979,"column":0},"generated":{"line":14980,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14980,"column":0},"generated":{"line":14981,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14981,"column":0},"generated":{"line":14982,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14982,"column":0},"generated":{"line":14983,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14983,"column":0},"generated":{"line":14984,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14984,"column":0},"generated":{"line":14985,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14985,"column":0},"generated":{"line":14986,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14986,"column":0},"generated":{"line":14987,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14987,"column":0},"generated":{"line":14988,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14988,"column":0},"generated":{"line":14989,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14989,"column":0},"generated":{"line":14990,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14990,"column":0},"generated":{"line":14991,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14991,"column":0},"generated":{"line":14992,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14992,"column":0},"generated":{"line":14993,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14993,"column":0},"generated":{"line":14994,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14994,"column":0},"generated":{"line":14995,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14995,"column":0},"generated":{"line":14996,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14996,"column":0},"generated":{"line":14997,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14997,"column":0},"generated":{"line":14998,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14998,"column":0},"generated":{"line":14999,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":14999,"column":0},"generated":{"line":15000,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15000,"column":0},"generated":{"line":15001,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15001,"column":0},"generated":{"line":15002,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15002,"column":0},"generated":{"line":15003,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15003,"column":0},"generated":{"line":15004,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15004,"column":0},"generated":{"line":15005,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15005,"column":0},"generated":{"line":15006,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15006,"column":0},"generated":{"line":15007,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15007,"column":0},"generated":{"line":15008,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15008,"column":0},"generated":{"line":15009,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15009,"column":0},"generated":{"line":15010,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15010,"column":0},"generated":{"line":15011,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15011,"column":0},"generated":{"line":15012,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15012,"column":0},"generated":{"line":15013,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15013,"column":0},"generated":{"line":15014,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15014,"column":0},"generated":{"line":15015,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15015,"column":0},"generated":{"line":15016,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15016,"column":0},"generated":{"line":15017,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15017,"column":0},"generated":{"line":15018,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15018,"column":0},"generated":{"line":15019,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15019,"column":0},"generated":{"line":15020,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15020,"column":0},"generated":{"line":15021,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15021,"column":0},"generated":{"line":15022,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15022,"column":0},"generated":{"line":15023,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15023,"column":0},"generated":{"line":15024,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15024,"column":0},"generated":{"line":15025,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15025,"column":0},"generated":{"line":15026,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15026,"column":0},"generated":{"line":15027,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15027,"column":0},"generated":{"line":15028,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15028,"column":0},"generated":{"line":15029,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15029,"column":0},"generated":{"line":15030,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15030,"column":0},"generated":{"line":15031,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15031,"column":0},"generated":{"line":15032,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15032,"column":0},"generated":{"line":15033,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15033,"column":0},"generated":{"line":15034,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15034,"column":0},"generated":{"line":15035,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15035,"column":0},"generated":{"line":15036,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15036,"column":0},"generated":{"line":15037,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15037,"column":0},"generated":{"line":15038,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15038,"column":0},"generated":{"line":15039,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15039,"column":0},"generated":{"line":15040,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15040,"column":0},"generated":{"line":15041,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15041,"column":0},"generated":{"line":15042,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15042,"column":0},"generated":{"line":15043,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15043,"column":0},"generated":{"line":15044,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15044,"column":0},"generated":{"line":15045,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15045,"column":0},"generated":{"line":15046,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15046,"column":0},"generated":{"line":15047,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15047,"column":0},"generated":{"line":15048,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15048,"column":0},"generated":{"line":15049,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15049,"column":0},"generated":{"line":15050,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15050,"column":0},"generated":{"line":15051,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15051,"column":0},"generated":{"line":15052,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15052,"column":0},"generated":{"line":15053,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15053,"column":0},"generated":{"line":15054,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15054,"column":0},"generated":{"line":15055,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15055,"column":0},"generated":{"line":15056,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15056,"column":0},"generated":{"line":15057,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15057,"column":0},"generated":{"line":15058,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15058,"column":0},"generated":{"line":15059,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15059,"column":0},"generated":{"line":15060,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15060,"column":0},"generated":{"line":15061,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15061,"column":0},"generated":{"line":15062,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15062,"column":0},"generated":{"line":15063,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15063,"column":0},"generated":{"line":15064,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15064,"column":0},"generated":{"line":15065,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15065,"column":0},"generated":{"line":15066,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15066,"column":0},"generated":{"line":15067,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15067,"column":0},"generated":{"line":15068,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15068,"column":0},"generated":{"line":15069,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15069,"column":0},"generated":{"line":15070,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15070,"column":0},"generated":{"line":15071,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15071,"column":0},"generated":{"line":15072,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15072,"column":0},"generated":{"line":15073,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15073,"column":0},"generated":{"line":15074,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15074,"column":0},"generated":{"line":15075,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15075,"column":0},"generated":{"line":15076,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15076,"column":0},"generated":{"line":15077,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15077,"column":0},"generated":{"line":15078,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15078,"column":0},"generated":{"line":15079,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15079,"column":0},"generated":{"line":15080,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15080,"column":0},"generated":{"line":15081,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15081,"column":0},"generated":{"line":15082,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15082,"column":0},"generated":{"line":15083,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15083,"column":0},"generated":{"line":15084,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15084,"column":0},"generated":{"line":15085,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15085,"column":0},"generated":{"line":15086,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15086,"column":0},"generated":{"line":15087,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15087,"column":0},"generated":{"line":15088,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15088,"column":0},"generated":{"line":15089,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15089,"column":0},"generated":{"line":15090,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15090,"column":0},"generated":{"line":15091,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15091,"column":0},"generated":{"line":15092,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15092,"column":0},"generated":{"line":15093,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15093,"column":0},"generated":{"line":15094,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15094,"column":0},"generated":{"line":15095,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15095,"column":0},"generated":{"line":15096,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15096,"column":0},"generated":{"line":15097,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15097,"column":0},"generated":{"line":15098,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15098,"column":0},"generated":{"line":15099,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15099,"column":0},"generated":{"line":15100,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15100,"column":0},"generated":{"line":15101,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15101,"column":0},"generated":{"line":15102,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15102,"column":0},"generated":{"line":15103,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15103,"column":0},"generated":{"line":15104,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15104,"column":0},"generated":{"line":15105,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15105,"column":0},"generated":{"line":15106,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15106,"column":0},"generated":{"line":15107,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15107,"column":0},"generated":{"line":15108,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15108,"column":0},"generated":{"line":15109,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15109,"column":0},"generated":{"line":15110,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15110,"column":0},"generated":{"line":15111,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15111,"column":0},"generated":{"line":15112,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15112,"column":0},"generated":{"line":15113,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15113,"column":0},"generated":{"line":15114,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15114,"column":0},"generated":{"line":15115,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15115,"column":0},"generated":{"line":15116,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15116,"column":0},"generated":{"line":15117,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15117,"column":0},"generated":{"line":15118,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15118,"column":0},"generated":{"line":15119,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15119,"column":0},"generated":{"line":15120,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15120,"column":0},"generated":{"line":15121,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15121,"column":0},"generated":{"line":15122,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15122,"column":0},"generated":{"line":15123,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15123,"column":0},"generated":{"line":15124,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15124,"column":0},"generated":{"line":15125,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15125,"column":0},"generated":{"line":15126,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15126,"column":0},"generated":{"line":15127,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15127,"column":0},"generated":{"line":15128,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15128,"column":0},"generated":{"line":15129,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15129,"column":0},"generated":{"line":15130,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15130,"column":0},"generated":{"line":15131,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15131,"column":0},"generated":{"line":15132,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15132,"column":0},"generated":{"line":15133,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15133,"column":0},"generated":{"line":15134,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15134,"column":0},"generated":{"line":15135,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15135,"column":0},"generated":{"line":15136,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15136,"column":0},"generated":{"line":15137,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15137,"column":0},"generated":{"line":15138,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15138,"column":0},"generated":{"line":15139,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15139,"column":0},"generated":{"line":15140,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15140,"column":0},"generated":{"line":15141,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15141,"column":0},"generated":{"line":15142,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15142,"column":0},"generated":{"line":15143,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15143,"column":0},"generated":{"line":15144,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15144,"column":0},"generated":{"line":15145,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15145,"column":0},"generated":{"line":15146,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15146,"column":0},"generated":{"line":15147,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15147,"column":0},"generated":{"line":15148,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15148,"column":0},"generated":{"line":15149,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15149,"column":0},"generated":{"line":15150,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15150,"column":0},"generated":{"line":15151,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15151,"column":0},"generated":{"line":15152,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15152,"column":0},"generated":{"line":15153,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15153,"column":0},"generated":{"line":15154,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15154,"column":0},"generated":{"line":15155,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15155,"column":0},"generated":{"line":15156,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15156,"column":0},"generated":{"line":15157,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15157,"column":0},"generated":{"line":15158,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15158,"column":0},"generated":{"line":15159,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15159,"column":0},"generated":{"line":15160,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15160,"column":0},"generated":{"line":15161,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15161,"column":0},"generated":{"line":15162,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15162,"column":0},"generated":{"line":15163,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15163,"column":0},"generated":{"line":15164,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15164,"column":0},"generated":{"line":15165,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15165,"column":0},"generated":{"line":15166,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15166,"column":0},"generated":{"line":15167,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15167,"column":0},"generated":{"line":15168,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15168,"column":0},"generated":{"line":15169,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15169,"column":0},"generated":{"line":15170,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15170,"column":0},"generated":{"line":15171,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15171,"column":0},"generated":{"line":15172,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15172,"column":0},"generated":{"line":15173,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15173,"column":0},"generated":{"line":15174,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15174,"column":0},"generated":{"line":15175,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15175,"column":0},"generated":{"line":15176,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15176,"column":0},"generated":{"line":15177,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15177,"column":0},"generated":{"line":15178,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15178,"column":0},"generated":{"line":15179,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15179,"column":0},"generated":{"line":15180,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15180,"column":0},"generated":{"line":15181,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15181,"column":0},"generated":{"line":15182,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15182,"column":0},"generated":{"line":15183,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15183,"column":0},"generated":{"line":15184,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15184,"column":0},"generated":{"line":15185,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15185,"column":0},"generated":{"line":15186,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15186,"column":0},"generated":{"line":15187,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15187,"column":0},"generated":{"line":15188,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15188,"column":0},"generated":{"line":15189,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15189,"column":0},"generated":{"line":15190,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15190,"column":0},"generated":{"line":15191,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15191,"column":0},"generated":{"line":15192,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15192,"column":0},"generated":{"line":15193,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15193,"column":0},"generated":{"line":15194,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15194,"column":0},"generated":{"line":15195,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15195,"column":0},"generated":{"line":15196,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15196,"column":0},"generated":{"line":15197,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15197,"column":0},"generated":{"line":15198,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15198,"column":0},"generated":{"line":15199,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15199,"column":0},"generated":{"line":15200,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15200,"column":0},"generated":{"line":15201,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15201,"column":0},"generated":{"line":15202,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15202,"column":0},"generated":{"line":15203,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15203,"column":0},"generated":{"line":15204,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15204,"column":0},"generated":{"line":15205,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15205,"column":0},"generated":{"line":15206,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15206,"column":0},"generated":{"line":15207,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15207,"column":0},"generated":{"line":15208,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15208,"column":0},"generated":{"line":15209,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15209,"column":0},"generated":{"line":15210,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15210,"column":0},"generated":{"line":15211,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15211,"column":0},"generated":{"line":15212,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15212,"column":0},"generated":{"line":15213,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15213,"column":0},"generated":{"line":15214,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15214,"column":0},"generated":{"line":15215,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15215,"column":0},"generated":{"line":15216,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15216,"column":0},"generated":{"line":15217,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15217,"column":0},"generated":{"line":15218,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15218,"column":0},"generated":{"line":15219,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15219,"column":0},"generated":{"line":15220,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15220,"column":0},"generated":{"line":15221,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15221,"column":0},"generated":{"line":15222,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15222,"column":0},"generated":{"line":15223,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15223,"column":0},"generated":{"line":15224,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15224,"column":0},"generated":{"line":15225,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15225,"column":0},"generated":{"line":15226,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15226,"column":0},"generated":{"line":15227,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15227,"column":0},"generated":{"line":15228,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15228,"column":0},"generated":{"line":15229,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15229,"column":0},"generated":{"line":15230,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15230,"column":0},"generated":{"line":15231,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15231,"column":0},"generated":{"line":15232,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15232,"column":0},"generated":{"line":15233,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15233,"column":0},"generated":{"line":15234,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15234,"column":0},"generated":{"line":15235,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15235,"column":0},"generated":{"line":15236,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15236,"column":0},"generated":{"line":15237,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15237,"column":0},"generated":{"line":15238,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15238,"column":0},"generated":{"line":15239,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15239,"column":0},"generated":{"line":15240,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15240,"column":0},"generated":{"line":15241,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15241,"column":0},"generated":{"line":15242,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15242,"column":0},"generated":{"line":15243,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15243,"column":0},"generated":{"line":15244,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15244,"column":0},"generated":{"line":15245,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15245,"column":0},"generated":{"line":15246,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15246,"column":0},"generated":{"line":15247,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15247,"column":0},"generated":{"line":15248,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15248,"column":0},"generated":{"line":15249,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15249,"column":0},"generated":{"line":15250,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15250,"column":0},"generated":{"line":15251,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15251,"column":0},"generated":{"line":15252,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15252,"column":0},"generated":{"line":15253,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15253,"column":0},"generated":{"line":15254,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15254,"column":0},"generated":{"line":15255,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15255,"column":0},"generated":{"line":15256,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15256,"column":0},"generated":{"line":15257,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15257,"column":0},"generated":{"line":15258,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15258,"column":0},"generated":{"line":15259,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15259,"column":0},"generated":{"line":15260,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15260,"column":0},"generated":{"line":15261,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15261,"column":0},"generated":{"line":15262,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15262,"column":0},"generated":{"line":15263,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15263,"column":0},"generated":{"line":15264,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15264,"column":0},"generated":{"line":15265,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15265,"column":0},"generated":{"line":15266,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15266,"column":0},"generated":{"line":15267,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15267,"column":0},"generated":{"line":15268,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15268,"column":0},"generated":{"line":15269,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15269,"column":0},"generated":{"line":15270,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15270,"column":0},"generated":{"line":15271,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15271,"column":0},"generated":{"line":15272,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15272,"column":0},"generated":{"line":15273,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15273,"column":0},"generated":{"line":15274,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15274,"column":0},"generated":{"line":15275,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15275,"column":0},"generated":{"line":15276,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15276,"column":0},"generated":{"line":15277,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15277,"column":0},"generated":{"line":15278,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15278,"column":0},"generated":{"line":15279,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15279,"column":0},"generated":{"line":15280,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15280,"column":0},"generated":{"line":15281,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15281,"column":0},"generated":{"line":15282,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15282,"column":0},"generated":{"line":15283,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15283,"column":0},"generated":{"line":15284,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15284,"column":0},"generated":{"line":15285,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15285,"column":0},"generated":{"line":15286,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15286,"column":0},"generated":{"line":15287,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15287,"column":0},"generated":{"line":15288,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15288,"column":0},"generated":{"line":15289,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15289,"column":0},"generated":{"line":15290,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15290,"column":0},"generated":{"line":15291,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15291,"column":0},"generated":{"line":15292,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15292,"column":0},"generated":{"line":15293,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15293,"column":0},"generated":{"line":15294,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15294,"column":0},"generated":{"line":15295,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15295,"column":0},"generated":{"line":15296,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15296,"column":0},"generated":{"line":15297,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15297,"column":0},"generated":{"line":15298,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15298,"column":0},"generated":{"line":15299,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15299,"column":0},"generated":{"line":15300,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15300,"column":0},"generated":{"line":15301,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15301,"column":0},"generated":{"line":15302,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15302,"column":0},"generated":{"line":15303,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15303,"column":0},"generated":{"line":15304,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15304,"column":0},"generated":{"line":15305,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15305,"column":0},"generated":{"line":15306,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15306,"column":0},"generated":{"line":15307,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15307,"column":0},"generated":{"line":15308,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15308,"column":0},"generated":{"line":15309,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15309,"column":0},"generated":{"line":15310,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15310,"column":0},"generated":{"line":15311,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15311,"column":0},"generated":{"line":15312,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15312,"column":0},"generated":{"line":15313,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15313,"column":0},"generated":{"line":15314,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15314,"column":0},"generated":{"line":15315,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15315,"column":0},"generated":{"line":15316,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15316,"column":0},"generated":{"line":15317,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15317,"column":0},"generated":{"line":15318,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15318,"column":0},"generated":{"line":15319,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15319,"column":0},"generated":{"line":15320,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15320,"column":0},"generated":{"line":15321,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15321,"column":0},"generated":{"line":15322,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15322,"column":0},"generated":{"line":15323,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15323,"column":0},"generated":{"line":15324,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15324,"column":0},"generated":{"line":15325,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15325,"column":0},"generated":{"line":15326,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15326,"column":0},"generated":{"line":15327,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15327,"column":0},"generated":{"line":15328,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15328,"column":0},"generated":{"line":15329,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15329,"column":0},"generated":{"line":15330,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15330,"column":0},"generated":{"line":15331,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15331,"column":0},"generated":{"line":15332,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15332,"column":0},"generated":{"line":15333,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15333,"column":0},"generated":{"line":15334,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15334,"column":0},"generated":{"line":15335,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15335,"column":0},"generated":{"line":15336,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15336,"column":0},"generated":{"line":15337,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15337,"column":0},"generated":{"line":15338,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15338,"column":0},"generated":{"line":15339,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15339,"column":0},"generated":{"line":15340,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15340,"column":0},"generated":{"line":15341,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15341,"column":0},"generated":{"line":15342,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15342,"column":0},"generated":{"line":15343,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15343,"column":0},"generated":{"line":15344,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15344,"column":0},"generated":{"line":15345,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15345,"column":0},"generated":{"line":15346,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15346,"column":0},"generated":{"line":15347,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15347,"column":0},"generated":{"line":15348,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15348,"column":0},"generated":{"line":15349,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15349,"column":0},"generated":{"line":15350,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15350,"column":0},"generated":{"line":15351,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15351,"column":0},"generated":{"line":15352,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15352,"column":0},"generated":{"line":15353,"column":0}},{"source":"node_modules/@firebase/database/dist/index.cjs.js","original":{"line":15353,"column":0},"generated":{"line":15354,"column":0}}],"sources":{"node_modules/@firebase/database/dist/index.cjs.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar util = require('@firebase/util');\nvar logger = require('@firebase/logger');\nvar tslib_1 = require('tslib');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger$1 = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger.LogLevel.VERBOSE;\r\n        logger$1 = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger$1 = logger_;\r\n    }\r\n    else {\r\n        logger$1 = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger$1 === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger$1) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger$1(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) {\r\n                // .priority is OK\r\n            }\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error$$1 = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error$$1);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                else {\r\n                    // There's nothing below us, so nothing we need to start listening on\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        else {\r\n            // No-op, this listener must've been already removed\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error$$1 = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error$$1);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error$$1) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error$$1 && error$$1.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error$$1);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger$1) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                this.log_(error$$1);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                _this.log_(error$$1);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error$$1) {\r\n                self_1.log_('Failed to get token: ' + error$$1);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error$$1);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParamaters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error$$1, result) {\r\n            var data = result;\r\n            if (error$$1 === 404) {\r\n                data = null;\r\n                error$$1 = null;\r\n            }\r\n            if (error$$1 === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error$$1) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error$$1 == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error$$1;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error$$1 = new Error(message);\r\n                    error$$1.code = code;\r\n                    callback(error$$1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error$$1, committed, snapshot) {\r\n            if (error$$1) {\r\n                deferred.reject(error$$1);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error$$1, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                // Already marked.  No action needed.\r\n            }\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n"},"lineCount":15354}},"hash":"4d0e0be1e11529023cbe00a03cc2d7a3","cacheData":{"env":{}}}